{"version":3,"sources":["webpack:///src/app/modules/inventory/boxes/options.ts","webpack:///src/app/modules/modules.module.ts","webpack:///src/app/modules/inventory/inventory-routing.modules.ts","webpack:///src/app/services/constants/form-options-configs.ts","webpack:///src/app/modules/suppliers/list/list.component.ts","webpack:///src/app/modules/suppliers/list/list.component.html","webpack:///src/app/modules/customers/add/customers-add.component.ts","webpack:///src/app/modules/customers/add/customers-add.component.html","webpack:///src/app/modules/warehouse/warehouse-routing.module.ts","webpack:///src/app/modules/inventory/products/products.module.ts","webpack:///src/app/modules/stockroom/list/stockroom-list.component.ts","webpack:///src/app/modules/stockroom/list/stockroom-list.component.html","webpack:///src/app/modules/customers/customers-routing.module.ts","webpack:///src/app/modules/warehouse/add/add-warehouse.component.ts","webpack:///src/app/modules/warehouse/add/add-warehouse.component.html","webpack:///src/app/modules/inventory/products/options.ts","webpack:///src/app/modules/suppliers/suppliers.module.ts","webpack:///src/app/modules/customers/customers.module.ts","webpack:///src/app/modules/inventory/products/add-products/add-products.component.ts","webpack:///src/app/modules/inventory/products/add-products/add-products.component.html","webpack:///src/app/modules/suppliers/add/add.component.ts","webpack:///src/app/modules/suppliers/add/add.component.html","webpack:///src/app/modules/suppliers/options.ts","webpack:///src/app/modules/inventory/items/edit/edit.component.ts","webpack:///src/app/modules/inventory/items/edit/edit.component.html","webpack:///src/app/modules/customers/list/customers.component.ts","webpack:///src/app/modules/customers/list/customers.component.html","webpack:///src/app/modules/inventory/items/move-stock/move-stock.component.ts","webpack:///src/app/modules/inventory/items/move-stock/move-stock.component.html","webpack:///src/app/modules/dashboard/dashboard.component.ts","webpack:///src/app/modules/dashboard/dashboard.component.html","webpack:///src/app/modules/suppliers/suppliers-routing.module.ts","webpack:///src/app/modules/inventory/boxes/boxes.component.ts","webpack:///src/app/modules/inventory/boxes/boxes.component.html","webpack:///src/app/modules/warehouse/list/warehouse-list.component.ts","webpack:///src/app/modules/warehouse/list/warehouse-list.component.html","webpack:///src/app/core/mixins/table-handle-actions-mixin.ts","webpack:///src/app/modules/stockroom/add/add-stockroom.component.ts","webpack:///src/app/modules/stockroom/add/add-stockroom.component.html","webpack:///src/app/modules/inventory/items/list/list-item.component.ts","webpack:///src/app/modules/inventory/items/list/list-item.component.html","webpack:///src/app/modules/inventory/boxes/list/list.component.ts","webpack:///src/app/modules/inventory/boxes/list/list.component.html","webpack:///src/app/modules/warehouse/warehouse.module.ts","webpack:///src/app/modules/inventory/items/edit/options.ts","webpack:///src/app/modules/inventory/products/list-products/list-products.component.ts","webpack:///src/app/modules/inventory/products/list-products/list-products.component.html","webpack:///src/app/modules/inventory/inventory.module.ts","webpack:///src/app/modules/customers/options.ts","webpack:///src/app/modules/inventory/items/add/add-item.component.ts","webpack:///src/app/modules/inventory/items/add/add-item.component.html","webpack:///src/app/modules/modules-routing.module.ts","webpack:///src/app/modules/inventory/products/products-routing.module.ts","webpack:///src/app/modules/stockroom/stockroom-routing.module.ts","webpack:///src/app/modules/warehouse/add/options.ts","webpack:///src/app/modules/stockroom/stockroom.module.ts"],"names":["BoxConfigFields","renders","parses","ModulesModule","forChild","InventoryRoutes","path","redirectTo","pathMatch","component","data","breadcrumb","loadChildren","then","m","ProductsModule","canActivate","endpoint","APIEndpoint","endpointV1","APIv1Endpoint","TableHandleActionsMixin","ListComponent","_router","_modalService","_tableService","formItems","tableFiltersDropdown","url","apiUrl","headers","name","source","type","action","handleTableActions","handleActions","CustomersAddComponent","route","formGroupOrder","queryParams","subscribe","params","hasOwnProperty","instance","console","log","onPostedData","WarehouseRoutes","StockroomListComponent","tableFilters","CustomerRoutes","AddWarehouseComponent","_activatedRoute","extraParams","onValidatedData","optionsField","SuppliersModule","CustomersModule","AddProductsComponent","AddComponent","EditComponent","router","toastService","navigate","CustomersComponent","tableFiltersCollapsible","MoveStockComponent","_formService","location","page_title","store_loading","items_loading","check_box","newEntry","api_errors","from_store","required","to_store","serial_numbers","items_count","min","item_config","move_stock_form","loadFields","getDropdownValues","response","stores","results","err","item_configs","value","formData","postForm","reset","back","error","evt","test","submitItem","clearForm","DashboardComponent","SupplierRoutes","BoxesComponent","WarehouseListComponent","tableHandleActionsMixin","BaseClass","_this","confirm","pipe","info","AddStockroomComponent","ListItemComponent","ListBoxesComponent","WarehouseModule","SerializedItemfields","NotSerializedItemfields","ListProductsComponent","InventoryModule","CustomerConfigs","description","actions","POST","id","read_only","label","created","modified","max_length","angaza_qid","primary_phone","id_number","region","display_name","village","closest_spark_agent_shop","help_text","occupation","avg_monthly_income","min_salary","max_salary","AddItemComponent","item_loading","stock_loading","box_loading","store","purchase_order","item_count","add_item_form","showSuccess","items","ModulesRoutes","AccountsModule","ConfigsModule","StockroomModule","InventoryProductsRoutes","StockroomRoutes","storeFields"],"mappings":"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","file":"modules-modules-module-es5.js","sourcesContent":["import { parses, renders, endpointV1 } from \"../../../services/constants/form-options-configs\";\nconst BoxConfigFields: any = {\n    \"name\": \"Bulk Create Boxs Api\",\n    \"description\": \"\",\n    renders,\n    parses,\n    \"actions\": {\n        \"POST\": {\n            \"box_config\": {\n                \"type\": \"field\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Box Configuration\",\n                \"display_name\": \"name\",\n                \"url\": `${endpointV1}box-configs/`\n            },\n          \n            \"store\": {\n                \"type\": \"field\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Store\",\n                \"display_name\": \"name\",\n                \"url\": `${endpointV1}stores/`\n            },\n            \"purchase_order\": {\n                \"type\": \"string\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Purchase order\",\n                \"max_length\": 45\n            },\n            \"serial_numbers\": {\n                \"type\": \"string\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Serial numbers\",\n                \"max_length\": 1000\n            },\n           \n        }\n    }\n}\n\nexport {\n    BoxConfigFields\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\nimport { CoreModule } from '../core/core.module';\nimport { WarehouseModule } from './warehouse/warehouse.module';\nimport { StockroomModule } from './stockroom/stockroom.module';\nimport { ModulesRoutes } from './modules-routing.module';\n\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { InventoryModule } from './inventory/inventory.module';\nimport { SuppliersModule } from './suppliers/suppliers.module';\nimport { CustomersModule } from './customers/customers.module';\n//import { ToastNotificationsService } from '../shared/toast-notifications/toast-notifications.service';\n\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ModulesRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    CoreModule,\n    WarehouseModule,\n    StockroomModule,\n    InventoryModule,\n    SuppliersModule,\n    CustomersModule\n  ],\n  providers: []\n})\nexport class ModulesModule { }\n","import { Routes } from '@angular/router';\nimport { AddItemComponent } from './items/add/add-item.component';\nimport { ListItemComponent } from './items/list/list-item.component';\nimport { EditComponent } from './items/edit/edit.component';\nimport { MoveStockComponent } from './items/move-stock/move-stock.component';\nimport { BoxesComponent } from './boxes/boxes.component';\nimport { ListBoxesComponent } from './boxes/list/list.component';\nimport { AuthGuard } from 'src/app/core/auth-guards/auth.guards';\n\nexport const InventoryRoutes: Routes = [\n    { path: '', redirectTo: 'list', pathMatch: 'full' },\n    { path: 'add', component: AddItemComponent, data: { breadcrumb: 'Add Items' } },\n    { path: 'list', component: ListItemComponent, data: {breadcrumb: 'List Items'}},\n    { path: 'edit', component: EditComponent, data: {breadcrumb: 'Edit Item'}},\n    { path: 'move', component: MoveStockComponent, data: {breadcrumb: 'Move Stock'}},\n    { path: 'check-in',  component: BoxesComponent, data: {breadcrumb: 'Check-in Box'}},\n    { path: 'list-boxes',  component: ListBoxesComponent, data: {breadcrumb: 'List Boxes'}},\n    {\n        path: 'products',\n        data: { breadcrumb: 'products' },\n        loadChildren: () =>\n          import(`./products/products.module`).then((m) => m.ProductsModule),\n        canActivate: [AuthGuard]\n    },\n    \n]","import { environment } from 'src/environments/environment';\n\nconst endpoint = environment.APIEndpoint;\nconst endpointV1 = environment.APIv1Endpoint;\n\nconst parses:any = {\n    \"parses\": [\n        \"application/json\",\n        \"application/x-www-form-urlencoded\",\n        \"multipart/form-data\",\n    ]\n}\n\nconst renders: any = {\n    \"renders\": [\n        \"application/json\",\n        \"text/html\"\n    ],\n}\n\nexport {\n    parses, renders, endpoint, endpointV1\n}","import { Component, OnInit } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { tableHandleActionsMixin } from 'src/app/core/mixins/table-handle-actions-mixin'\nimport { TablesComponent } from 'src/app/shared/tables/tables.component'\n\nimport { ModalsService } from \"src/app/shared/modals/modals.service\"\nimport { TablesService } from 'src/app/shared/tables/tables.service'\nimport { optionsField } from '../options'\n\nconst TableHandleActionsMixin = tableHandleActionsMixin(TablesComponent)\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent extends TableHandleActionsMixin implements OnInit {\n  formItems: any = optionsField\n  tableFiltersDropdown = [\n    [\"name\"],\n  ]\n\n  constructor(\n    private _router: Router,\n    private _modalService: ModalsService,\n    private _tableService: TablesService\n  ) {\n    super()\n  }\n\n  url = \"suppliers\"\n  apiUrl = \"suppliers\"\n\n  headers = [\n    // \"Name\",\n    {\n      name: 'Supplier ID',\n      source: \"id\",\n    },\n    {\n      name: 'Name',\n      source: \"name\",\n    },\n    {\n      name: 'Email Address',\n      source: \"email\",\n    },\n    {\n      name: 'Phone number',\n      source: \"phone\",\n    },\n    {\n      name: 'Contact person',\n      source: \"contact_person\",\n    },\n    {\n      name: 'Contact Person (phone)',\n      source: \"contact_phone\",\n    },\n    {\n      name: 'Actions',\n      type: \"actions\",\n      source: \"\",\n      data: [\n        \"edit\", \"delete\"\n      ]\n    },\n  ]\n\n  // tableFilters = [\"Name\"]\n\n  ngOnInit(): void {\n  }\n\n  handleActions(action: any) {\n    this.handleTableActions(action, '/suppliers/add', this.apiUrl)\n  }\n}","<div class=\"row\">\n    <div class=\"col-sm-12\">\n        <app-add-button [url]=\"'/suppliers/add'\"></app-add-button>\n    </div>\n</div>\n\n\n\n<div class=\"row\">\n    <div class=\"col-sm-3\">\n        <app-dropdown-filters [url]=\"listTypeUrl\" [filterUrl]=\"listTypeUrl\" [formItems]=\"formItems\"\n            [formGroupOrder]=\"tableFiltersDropdown\"></app-dropdown-filters>\n    </div>\n    <div class=\"col-sm-9\">\n        <app-tables [listTypeUrl]=\"url\" (actionsEvent)=\"handleActions($event)\" [headers]=\"headers\"\n            [tableFilters]=\"tableFiltersCollapsible\" [filterFormItems]=\"formItems\">\n        </app-tables>\n    </div>\n</div>\n\n\n<app-confirm-dialog></app-confirm-dialog>","import { Component, OnInit } from '@angular/core';\nimport { CustomerConfigs } from '../options';\nimport { ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-customers-add',\n  templateUrl: './customers-add.component.html',\n  styleUrls: ['./customers-add.component.scss']\n})\nexport class CustomersAddComponent implements OnInit {\n\n  formItems: any = CustomerConfigs\n  url: string = \"customers/\"\n  instance: any\n  formGroupOrder = [\n    ['name', 'primary_phone', 'id_number'],\n    ['region', 'village', 'closest_spark_agent_shop'],\n    ['occupation', 'min_salary', 'max_salary'],\n  ]\n  constructor(private route: ActivatedRoute, ) {\n\n    this.route.queryParams.subscribe(params => {\n      if (params.hasOwnProperty(\"id\")) {\n        this.instance = params\n        console.log(this.instance)\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  onValidatedData(data: any) {\n  }\n  onPostedData(data: any) {\n  }\n\n}\n","<!-- <app-dynamic-forms [formButtonName]=\"'Add Item Type'\" [cardTitle]=\"'Add Item Type Configuration'\" [formItems]=\"formItems$ | async\"></app-dynamic-forms> -->\n\n<app-myform [formItems]=\"formItems\" [url]=\"url\" [cardTitle]=\"'Customers'\"\n    [submitButtonText]=\"'Add Customer'\" [instance]=\"instance\" (onPostedData)=\"onPostedData($event)\"\n    submitButtonText=\"Customer\" [formGroupOrder]=\"formGroupOrder\">\n</app-myform>","import { Routes } from '@angular/router';\nimport { AddWarehouseComponent } from './add/add-warehouse.component';\nimport { WarehouseListComponent } from './list/warehouse-list.component';\n\nexport const WarehouseRoutes: Routes = [\n    { path: '', component: WarehouseListComponent, data: { breadcrumb: 'List' } },\n    { path: 'add', component: AddWarehouseComponent, data: { breadcrumb: 'Add' } },\n]","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ListProductsComponent } from './list-products/list-products.component';\nimport { AddProductsComponent } from './add-products/add-products.component';\nimport { InventoryProductsRoutes } from './products-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n\n\n@NgModule({\n  declarations: [ListProductsComponent, AddProductsComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(InventoryProductsRoutes),\n    SharedModule\n  ]\n})\nexport class ProductsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { tableHandleActionsMixin } from 'src/app/core/mixins/table-handle-actions-mixin';\nimport { TablesComponent } from 'src/app/shared/tables/tables.component';\nimport { ModalsService } from \"src/app/shared/modals/modals.service\";\nimport { TablesService } from 'src/app/shared/tables/tables.service';\nimport { storeFields } from '../../warehouse/add/options';\n\nconst TableHandleActionsMixin = tableHandleActionsMixin(TablesComponent);\n@Component({\n  selector: 'app-stockroom-list',\n  templateUrl: './stockroom-list.component.html',\n  styleUrls: ['./stockroom-list.component.scss']\n})\nexport class StockroomListComponent extends TableHandleActionsMixin implements OnInit {\n  formItems: any = storeFields;\n  tableFiltersDropdown = [\n    [\"manager\"],\n    [\"location\"],\n  ];\n  constructor(\n    private _router: Router,\n    private _modalService: ModalsService,\n    private _tableService: TablesService\n  ) {\n    super();\n  }\n\n  url = \"stores/?type=SR&\"\n  apiUrl = \"stores\"\n\n  headers = [\n    \"Name\",\n    {\n      name: 'Stockroom ID',\n      source: \"id\",\n    },\n    {\n      name: 'Region/ Location',\n      source: \"location_details.name\",\n    },\n    {\n      name: 'Stockroom Manager',\n      source: \"manager_details.full_name\",\n    },\n    {\n      name: 'Actions',\n      type: \"actions\",\n      source: \"\",\n      data: [\n        \"edit\", \"delete\"\n      ]\n    },\n  ];\n\n  tableFilters = [\"Name\"]\n\n  ngOnInit(): void {\n  }\n\n  handleActions(action: any) {\n    this.handleTableActions(action, '/stockroom/add', this.apiUrl)\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-sm-12\">\n        <app-add-button [url]=\"'/stockroom/add'\"></app-add-button>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-sm-3\">\n        <app-dropdown-filters [url]=\"listTypeUrl\" [filterUrl]=\"listTypeUrl\" [formItems]=\"formItems\"\n            [formGroupOrder]=\"tableFiltersDropdown\"></app-dropdown-filters>\n    </div>\n    <div class=\"col-sm-9\">\n        <app-tables [listTypeUrl]=\"url\" (actionsEvent)=\"handleActions($event)\" [headers]=\"headers\"\n            [tableFilters]=\"tableFiltersCollapsible\" [filterFormItems]=\"formItems\">\n        </app-tables>\n    </div>\n</div>","import { Routes } from '@angular/router';\nimport { CustomersAddComponent } from './add/customers-add.component';\nimport { CustomersComponent } from './list/customers.component';\n\nexport const CustomerRoutes: Routes = [\n    { path: '', redirectTo: 'customers', pathMatch: 'full' },\n    { path: 'list', component: CustomersComponent, data: { breadcrumb: 'List Customers' } },\n    { path: 'customers', component: CustomersAddComponent, data: { breadcrumb: 'Add Customers' } },\n]","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ModalsService } from 'src/app/shared/modals/modals.service';\nimport { storeFields } from './options';\n\n@Component({\n  selector: 'app-add-warehouse',\n  templateUrl: './add-warehouse.component.html',\n  styleUrls: ['./add-warehouse.component.scss']\n})\nexport class AddWarehouseComponent implements OnInit {\n\n  formItems: any = storeFields;\n  url: string = \"stores/\";\n  instance: any;\n\n  formGroupOrder = [\n    ['name'],\n    ['location'],\n    ['manager'],\n  ]\n\n  extraParams = {\n    type: \"WH\"\n  }\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _modalService: ModalsService\n  ) {\n    this._activatedRoute.queryParams.subscribe(params => {\n      if (params.hasOwnProperty(\"id\")) {\n        this.instance = params\n        console.log(this.instance)\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n  onValidatedData(data: any) {\n    console.log(data)\n  }\n  onPostedData(data: any) {\n    console.log(data)\n  }\n\n}\n","<app-myform (onValidatedData)=\"onValidatedData($event)\" [isValidationOnly]=false [formItems]=\"formItems\" [url]=\"url\"\n    (onPostedData)=\"onPostedData($event)\" submitButtonText=\"Warehouse\" [extraParams]=\"extraParams\" [instance]=\"instance\"\n    [formGroupOrder]=\"formGroupOrder\" [cardTitle]=\"'Warehouse'\">\n</app-myform>","import { parses, renders, endpointV1 } from '../../../services/constants/form-options-configs'\n\nexport const optionsField: any =\n{\n    \"name\": \"List Create Products Api\",\n    \"description\": \"\",\n    renders,\n    parses,\n    \"actions\": {\n        \"POST\": {\n            \"id\": {\n                \"type\": \"integer\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"ID\"\n            },\n            \"boxes_config_details\": {\n                \"type\": \"field\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"Boxes config details\",\n                \"child\": {\n                    \"type\": \"nested object\",\n                    \"required\": false,\n                    \"read_only\": true,\n                    \"children\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"required\": false,\n                            \"read_only\": true,\n                            \"label\": \"ID\"\n                        },\n                        \"items_details\": {\n                            \"type\": \"field\",\n                            \"required\": false,\n                            \"read_only\": true,\n                            \"label\": \"Items details\",\n                            \"child\": {\n                                \"type\": \"nested object\",\n                                \"required\": false,\n                                \"read_only\": true,\n                                \"children\": {\n                                    \"id\": {\n                                        \"type\": \"integer\",\n                                        \"required\": false,\n                                        \"read_only\": true,\n                                        \"label\": \"ID\"\n                                    },\n                                    \"item_name\": {\n                                        \"type\": \"string\",\n                                        \"required\": false,\n                                        \"read_only\": true,\n                                        \"label\": \"Item name\"\n                                    },\n                                    \"type\": {\n                                        \"type\": \"string\",\n                                        \"required\": false,\n                                        \"read_only\": true,\n                                        \"label\": \"Type\"\n                                    },\n                                    \"type_name\": {\n                                        \"type\": \"string\",\n                                        \"required\": false,\n                                        \"read_only\": true,\n                                        \"label\": \"Type name\"\n                                    },\n                                    \"created\": {\n                                        \"type\": \"datetime\",\n                                        \"required\": false,\n                                        \"read_only\": true,\n                                        \"label\": \"Created\"\n                                    },\n                                    \"modified\": {\n                                        \"type\": \"datetime\",\n                                        \"required\": false,\n                                        \"read_only\": true,\n                                        \"label\": \"Modified\"\n                                    },\n                                    \"count\": {\n                                        \"type\": \"integer\",\n                                        \"required\": false,\n                                        \"read_only\": false,\n                                        \"label\": \"Count\"\n                                    },\n                                    \"box_config\": {\n                                        \"type\": \"field\",\n                                        \"required\": false,\n                                        \"read_only\": false,\n                                        \"label\": \"Box config\"\n                                    },\n                                    \"item_config\": {\n                                        \"type\": \"field\",\n                                        \"required\": true,\n                                        \"read_only\": false,\n                                        \"label\": \"Item config\"\n                                    }\n                                }\n                            }\n                        },\n                        \"items\": {\n                            \"type\": \"field\",\n                            \"required\": true,\n                            \"read_only\": false,\n                            \"label\": \"Items\",\n                            \"child\": {\n                                \"type\": \"nested object\",\n                                \"required\": true,\n                                \"read_only\": false,\n                                \"children\": {\n                                    \"id\": {\n                                        \"type\": \"integer\",\n                                        \"required\": false,\n                                        \"read_only\": true,\n                                        \"label\": \"ID\"\n                                    },\n                                    \"item_name\": {\n                                        \"type\": \"string\",\n                                        \"required\": false,\n                                        \"read_only\": true,\n                                        \"label\": \"Item name\"\n                                    },\n                                    \"type\": {\n                                        \"type\": \"string\",\n                                        \"required\": false,\n                                        \"read_only\": true,\n                                        \"label\": \"Type\"\n                                    },\n                                    \"type_name\": {\n                                        \"type\": \"string\",\n                                        \"required\": false,\n                                        \"read_only\": true,\n                                        \"label\": \"Type name\"\n                                    },\n                                    \"created\": {\n                                        \"type\": \"datetime\",\n                                        \"required\": false,\n                                        \"read_only\": true,\n                                        \"label\": \"Created\"\n                                    },\n                                    \"modified\": {\n                                        \"type\": \"datetime\",\n                                        \"required\": false,\n                                        \"read_only\": true,\n                                        \"label\": \"Modified\"\n                                    },\n                                    \"count\": {\n                                        \"type\": \"integer\",\n                                        \"required\": false,\n                                        \"read_only\": false,\n                                        \"label\": \"Count\"\n                                    },\n                                    \"box_config\": {\n                                        \"type\": \"field\",\n                                        \"required\": false,\n                                        \"read_only\": false,\n                                        \"label\": \"Box config\"\n                                    },\n                                    \"item_config\": {\n                                        \"type\": \"field\",\n                                        \"required\": true,\n                                        \"read_only\": false,\n                                        \"label\": \"Item config\"\n                                    }\n                                }\n                            }\n                        },\n                        \"created\": {\n                            \"type\": \"datetime\",\n                            \"required\": false,\n                            \"read_only\": true,\n                            \"label\": \"Created\"\n                        },\n                        \"modified\": {\n                            \"type\": \"datetime\",\n                            \"required\": false,\n                            \"read_only\": true,\n                            \"label\": \"Modified\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\",\n                            \"required\": true,\n                            \"read_only\": false,\n                            \"label\": \"Name\",\n                            \"max_length\": 50\n                        },\n                        \"description\": {\n                            \"type\": \"string\",\n                            \"required\": true,\n                            \"read_only\": false,\n                            \"label\": \"Description\",\n                            \"max_length\": 400\n                        }\n                    }\n                }\n            },\n            \"created\": {\n                \"type\": \"datetime\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"Created\"\n            },\n            \"modified\": {\n                \"type\": \"datetime\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"Modified\"\n            },\n            \"customer\": {\n                \"type\": \"field\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Customer\",\n                \"display_name\": \"name\",\n                \"url\": `${endpointV1}customers/`\n\n            //     \"type\": \"multifield\",\n            //     \"required\": true,\n            //     \"read_only\": false,\n            //     \"label\": \"Customer\",\n            //     \"display_name\": \"name\",\n            //     \"value_field\": \"id\",\n            //    // \"edit_source_field\": \"items_details\",\n            //     \"multiple\": true,\n            //     \"url\": `customers/`,\n            //     \"search_field\": \"name\",\n            //     \"edit_display_name\": \"name\",\n                // \"res_value_field\": \"item_config\"\n            },\n            \"product_config\": {\n                \"type\": \"field\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Product config\",\n                \"display_name\": \"name\",\n                \"url\": `${endpointV1}product-configs/`\n            },\n            \"items\": {\n                \"type\": \"field\",\n                \"multiple\": true,\n                \"required\": false,\n                \"read_only\": false,\n                \"label\": \"Items\",\n                \"display_name\": \"item_config_name\",\n                \"url\": `${endpointV1}itemz/`\n            },\n            \"boxes\": {\n                \"type\": \"field\",\n                \"multiple\": true,\n                \"required\": false,\n                \"read_only\": false,\n                \"label\": \"Boxes\",\n                \"display_name\": \"box_config\",\n                \"url\": `${endpointV1}boxs/`\n            }\n        }\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListComponent } from './list/list.component';\nimport { AddComponent } from './add/add.component';\nimport { RouterModule } from '@angular/router';\nimport { SupplierRoutes } from './suppliers-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [ListComponent, AddComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(SupplierRoutes),\n    SharedModule\n  ]\n})\nexport class SuppliersModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { CustomersComponent } from './list/customers.component';\nimport { CustomerRoutes } from './customers-routing.module';\nimport { CustomersAddComponent } from './add/customers-add.component';\n\n@NgModule({\n  declarations: [CustomersComponent, CustomersAddComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(CustomerRoutes),\n    SharedModule,\n    CoreModule\n  ]\n})\nexport class CustomersModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { optionsField } from '../options';\n\n@Component({\n  selector: 'app-add-products',\n  templateUrl: './add-products.component.html',\n  styleUrls: ['./add-products.component.scss']\n})\nexport class AddProductsComponent implements OnInit {\n\n  formItems: any = optionsField;\n  url: string = \"stores/\"\n  formGroupOrder = [\n    ['customer', 'product_config'],\n    ['items'],\n    ['boxes']\n  ]\n\n  extraParams = {\n    type: \"SR\"\n  }\n\n  instance: any;\n\n  constructor(\n    private _activatedRoute: ActivatedRoute\n  ) {\n    this._activatedRoute.queryParams.subscribe(params => {\n      if (params.hasOwnProperty(\"id\")) {\n        this.instance = params\n        console.log(this.instance)\n      }\n    });\n   }\n\n  ngOnInit(): void {\n  }\n\n  onValidatedData(data: any) {\n  }\n  onPostedData(data: any) {\n  }\n\n}\n","<app-myform (onValidatedData)=\"onValidatedData($event)\" [isValidationOnly]=false [formItems]=\"formItems\"\n[url]=\"url\" (onPostedData)=\"onPostedData($event)\" submitButtonText=\"Customer Product\"\n[extraParams]=\"extraParams\"\n[instance]=\"instance\"\n[formGroupOrder]=\"formGroupOrder\" [cardTitle]=\"'Customer Product'\">\n</app-myform>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ModalsService } from 'src/app/shared/modals/modals.service';\nimport { optionsField } from '../options';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.scss']\n})\nexport class AddComponent implements OnInit {\n\n  formItems: any = optionsField\n  url: string = 'suppliers/'\n  instance: any\n\n  formGroupOrder = [\n    ['name', 'email', 'phone'],\n    ['contact_person', 'contact_phone']\n  ]\n\n  extraParams = {\n    type: 'WH'\n  }\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _modalService: ModalsService\n  ) {\n    this._activatedRoute.queryParams.subscribe(params => {\n      if (params.hasOwnProperty('id')) {\n        this.instance = params\n        console.log(this.instance)\n      }\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  onValidatedData(data: any) {\n    console.log(data)\n  }\n\n  onPostedData(data: any) {\n    console.log(data)\n  }\n\n}\n","<app-myform (onValidatedData)=\"onValidatedData($event)\" [isValidationOnly]=false [formItems]=\"formItems\" [url]=\"url\"\n    (onPostedData)=\"onPostedData($event)\" submitButtonText=\"Supplier\" [extraParams]=\"extraParams\" [instance]=\"instance\"\n    [formGroupOrder]=\"formGroupOrder\" [cardTitle]=\"'Supplier'\">\n</app-myform>","import { parses, renders, endpointV1 } from '../../services/constants/form-options-configs'\n\nexport const optionsField: any =\n{\n    \"name\": \"List Create Suppliers Api\",\n    \"description\": \"\",\n    renders,\n    parses,\n    \"actions\": {\n        \"POST\": {\n            \"id\": {\n                \"type\": \"integer\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"ID\"\n            },\n            \"created\": {\n                \"type\": \"datetime\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"Created\"\n            },\n            \"modified\": {\n                \"type\": \"datetime\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"Modified\"\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Name\",\n                \"max_length\": 45\n            },\n            \"email\": {\n                \"type\": \"email\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Email\",\n                \"max_length\": 45\n            },\n            \"phone\": {\n                \"type\": \"string\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Phone\",\n                \"max_length\": 20\n            },\n            \"contact_person\": {\n                \"type\": \"string\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Contact person\",\n                \"max_length\": 150\n            },\n            \"contact_phone\": {\n                \"type\": \"string\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Contact phone\",\n                \"max_length\": 150\n            }\n        }\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SerializedItemfields, NotSerializedItemfields } from './options';\nimport { ToastNotificationsService } from 'src/app/shared/toast-notifications/toast-notifications.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss']\n})\nexport class EditComponent implements OnInit {\n\n  formItems:any = SerializedItemfields;\n  instance: any;\n  url: string = \"itemz/\";\n  formGroupOrder = [\n    ['item_config',  'store', 'purchase_order', 'serial'],\n  ]\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private router: Router,\n    public toastService: ToastNotificationsService,\n  ) {\n    this._activatedRoute.queryParams.subscribe(params => {\n      if (params.hasOwnProperty(\"id\")) {\n        this.instance = params\n        console.log(this.instance)\n        if(params.hasOwnProperty(\"serial\")){\n        }\n      }\n    });\n  \n  }\n\n  ngOnInit(): void {\n  }\n  onValidatedData(data: any) {\n\n  }\n\n  onPostedData(data: any) {\n    console.log(data);\n    this.router.navigate(['/inventory/list'])\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-sm-12\">\n        <app-myform (onValidatedData)=\"onValidatedData($event)\" [isValidationOnly]=false [formItems]=\"formItems\"\n            [url]=\"url\" [instance]=\"instance\" \n            [submitButtonText]=\"'Item'\" (onPostedData)=\"onPostedData($event)\"\n             [formGroupOrder]=\"formGroupOrder\" [cardTitle]=\"'Item'\">\n        </app-myform>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { tableHandleActionsMixin } from 'src/app/core/mixins/table-handle-actions-mixin';\nimport { TablesComponent } from 'src/app/shared/tables/tables.component';\nimport { ModalsService } from \"src/app/shared/modals/modals.service\";\nimport { TablesService } from 'src/app/shared/tables/tables.service';\nimport { CustomerConfigs } from '../options';\n\nconst TableHandleActionsMixin = tableHandleActionsMixin(TablesComponent);\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss']\n})\nexport class CustomersComponent extends TableHandleActionsMixin implements OnInit {\n  url = \"customers\"\n  formItems: any = CustomerConfigs;\n  tableFiltersDropdown = [\n    [\"name\"],\n    [\"angaza_qid\"]\n  ];\n\n  tableFiltersCollapsible = [\n    [\"name\", \"angaza_qid\"]\n  ];\n\n  headers = [\n    \"Name\",\n    \"Id number\",\n    \"Angaza qid\",\n    {\n      name: \"Phone\",\n      source: \"primary_phone\",\n    },\n    \"Avg monthly income\",\n    \"Occupation\",\n    {\n      name: 'Region',\n      source: \"region\",\n    },\n    \"Village\",\n    {\n      name: 'Closest spark agent shop (Kms)',\n      source: \"closest_spark_agent_shop\",\n    },\n    {\n      name: 'Actions',\n      type: \"actions\",\n      source: \"\",\n      data: [\n        \"edit\", \"delete\"\n      ]\n    },\n  ];\n\n  constructor(\n    private _router: Router,\n    private _modalService: ModalsService,\n    private _tableService: TablesService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n  }\n\n  handleActions(action: any) {\n    this.handleTableActions(action, '/customers', this.url);\n  }\n\n  // handleActions(action: any) {\n  //   if (action.name == \"edit\") {\n  //     this._router.navigate(['/customers'], { state: { data: action.data } });\n\n  //   } else {\n  //     this.handleTableActions(action, '/customers', this.url);\n  //   }\n  // }\n}\n","<div class=\"row\">\n    <div class=\"col-sm-12\">\n        <app-add-button [url]=\"'/customers'\"></app-add-button>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-sm-3\">\n        <app-dropdown-filters [url]=\"listTypeUrl\" [filterUrl]=\"listTypeUrl\" [formItems]=\"formItems\"\n            [formGroupOrder]=\"tableFiltersDropdown\"></app-dropdown-filters>\n    </div>\n    <div class=\"col-sm-9\">\n        <app-tables [listTypeUrl]=\"url\" (actionsEvent)=\"handleActions($event)\" [headers]=\"headers\"\n            [tableFilters]=\"tableFiltersCollapsible\" [filterFormItems]=\"formItems\">\n        </app-tables>\n    </div>\n</div>\n\n\n<app-confirm-dialog></app-confirm-dialog>","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common'\nimport { FormGroup, FormControl, Validators,  } from '@angular/forms';\nimport { FormItemService } from 'src/app/services/forms/form-item.service';\nimport { endpointV1 } from '../../../../services/constants/form-options-configs';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-move-stock',\n  templateUrl: './move-stock.component.html',\n  styleUrls: ['./move-stock.component.scss'],\n})\nexport class MoveStockComponent implements OnInit {\n  page_title: string = 'Move Stock';\n  move_stock_form: any;\n  stores: any;\n  item_configs: any;\n  store_loading: boolean = true;\n  items_loading: boolean = true;\n  check_box: boolean = false;\n  newEntry: boolean = true;\n  api_errors: any = [];\n  constructor(private _formService: FormItemService, private router: Router, private location: Location) {\n    const from_store = new FormControl('', Validators.required);\n    const to_store = new FormControl('', Validators.required);\n    const serial_numbers = new FormControl('');\n    const items_count = new FormControl('', Validators.min(1));\n    const item_config = new FormControl('');\n    this.move_stock_form = new FormGroup({\n      from_store: from_store,\n      to_store: to_store,\n      serial_numbers: serial_numbers,\n      items_count: items_count,\n      item_config: item_config,\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadFields();\n  }\n\n  loadFields() {\n    this._formService.getDropdownValues(`${endpointV1}stores`).subscribe(\n      response => {\n        this.store_loading = false;\n        this.stores = response.results;\n      },\n      err => {\n        this.store_loading = false;\n      }\n    );\n\n    this._formService.getDropdownValues(`${endpointV1}item-configs`).subscribe(\n      response => {\n        this.items_loading = false;\n        this.item_configs = response.results;\n      },\n      err => {\n        this.items_loading = false;\n      }\n    );\n  }\n\n  submitItem() {\n    //delete fields not needed in serialized/non-serialized\n    if (this.check_box == true) {\n      delete this.move_stock_form.value.items_count;\n      delete this.move_stock_form.value.item_config;\n    } else {\n      delete this.move_stock_form.value.serial_numbers;\n    }\n\n    //reset API Errors\n    this.api_errors = [];\n\n    let data = {\n      url: `${endpointV1}itemz/move`,\n      formData: this.move_stock_form.value,\n    };\n    console.log(data);\n    this._formService.postForm(this.newEntry, data).subscribe(\n      response => {\n        console.log(response);\n        this.move_stock_form.reset();\n        this.location.back();\n      },\n      (err: HttpErrorResponse) => {\n        console.log(err);\n        this.api_errors = err.error;\n      }\n    );\n  }\n\n  clearForm() {\n    this.move_stock_form.reset();\n    this.check_box = false;\n  }\n\n  toggleApiErrorMessage(evt: any) {\n    if (\n      typeof this.api_errors.items_count !== 'undefined' &&\n      /Only 0 left in store$/.test(this.api_errors.items_count)\n    ) {\n      this.api_errors.items_count = '';\n    }\n  }\n}\n","<div class=\"container\">\n  <form class=\"form-group\" [formGroup]=\"move_stock_form\" (ngSubmit)=\"submitItem()\">\n    <app-card [title]=\"page_title\">\n      <div class=\"row\">\n        <div class=\"col-md-3\">\n\n          <!--Item -->\n          <!-- Field -->\n          <label for=\"from_store\" class=\"form-label\">From Store</label>\n          <select class=\"form-control form-control-sm opt-value\" formControlName=\"from_store\" *ngIf=\"!store_loading\">\n            <option *ngFor=\"let store of stores\" value=\"{{store.id}}\" required>{{store.name}}</option>\n          </select>\n          <!-- Loader -->\n          <span class=\"linear-background\" *ngIf=\"store_loading\"></span>\n          <!-- Errors -->\n          <div\n            *ngIf=\"move_stock_form.controls['from_store'].invalid && (move_stock_form.controls['from_store'].dirty || move_stock_form.controls['from_store'].touched)\"\n            class=\"alert\">\n            <div *ngIf=\"move_stock_form.controls['from_store'].errors.required\">\n              <span class=\"text-danger opt-value\">\n                Field is required <br>\n              </span>\n            </div>\n          </div>\n          <div *ngIf=\"api_errors.from_store\">\n\n            <span class=\"text-danger opt-value\">\n              {{api_errors.from_store}}\n            </span>\n          </div>\n        </div>\n        <div class=\"col-md-3\">\n\n          <!--Item -->\n          <!-- Field -->\n          <label for=\"to_store\" class=\"form-label\">To Store</label>\n          <select class=\"form-control form-control-sm opt-value\" formControlName=\"to_store\" *ngIf=\"!store_loading\">\n            <option *ngFor=\"let store of stores\" value=\"{{store.id}}\" required>{{store.name}}</option>\n          </select>\n          <!-- Loader -->\n          <span class=\"linear-background\" *ngIf=\"store_loading\"></span>\n          <!-- Errors -->\n          <div\n            *ngIf=\"move_stock_form.controls['to_store'].invalid && (move_stock_form.controls['to_store'].dirty || move_stock_form.controls['to_store'].touched)\"\n            class=\"alert\">\n            <div *ngIf=\"move_stock_form.controls['to_store'].errors.required\">\n              <span class=\"text-danger opt-value\">\n                Field is required <br>\n              </span>\n            </div>\n          </div>\n          <div *ngIf=\"api_errors.to_store\">\n\n            <span class=\"text-danger opt-value\">\n              {{api_errors.to_store}}\n            </span>\n          </div>\n        </div>\n        <div class=\"col-md-2 text-center\">\n          <!-- Serialized Check Box -->\n\n\n          <label for=\"serials\" class=\"form-label\">Serialized? </label>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input opt-value\" [(ngModel)]=\"check_box\"\n              [ngModelOptions]=\"{standalone: true}\" />\n          </div>\n\n\n        </div>\n        <div class=\"col-md-2\" *ngIf=\"check_box == false\">\n\n          <!--Item -->\n          <!-- Field -->\n          <label for=\"item_name\" class=\"form-label\">Item Name</label>\n          <select class=\"form-control form-control-sm opt-value\" formControlName=\"item_config\" *ngIf=\"!items_loading\">\n            <option *ngFor=\"let item_config of item_configs\" value=\"{{item_config.id}}\" required>\n              {{item_config.name}}</option>\n          </select>\n          <!-- Loader -->\n          <span class=\"linear-background\" *ngIf=\"items_loading\"></span>\n          <!-- Errors -->\n          <div\n            *ngIf=\"move_stock_form.controls['item_config'].invalid && (move_stock_form.controls['item_config'].dirty || move_stock_form.controls['item_config'].touched)\"\n            class=\"alert\">\n            <div *ngIf=\"move_stock_form.controls['item_config'].errors.required\">\n              <span class=\"text-danger opt-value\">\n                Field is required <br>\n              </span>\n            </div>\n          </div>\n          <div *ngIf=\"api_errors.item_config\">\n\n            <span class=\"text-danger opt-value\">\n              {{api_errors.item_config}}\n            </span>\n          </div>\n        </div>\n        <div class=\"col-md-2\" *ngIf=\"check_box == false\">\n          <!-- Item Count Field -->\n          <!-- Field -->\n          <label for=\"item_count\" class=\"form-label\">Item Count</label>\n          <input type=\"number\" name=\"item_count\" (ngModelChange)=\"toggleApiErrorMessage($event)\" class=\"form-control form-control-sm\" formControlName=\"items_count\" />\n\n          <div\n            *ngIf=\"move_stock_form.controls['items_count'].invalid && (move_stock_form.controls['items_count'].dirty || move_stock_form.controls['items_count'].touched)\"\n            class=\"alert\">\n            <div *ngIf=\"move_stock_form.controls['items_count'].errors.required\">\n              <span class=\"text-danger opt-value\">\n                Field is required <br>\n              </span>\n            </div>\n            <div *ngIf=\"move_stock_form.controls['items_count'].errors.required\">\n              <span class=\"text-danger opt-value\">\n                Field has to be a number <br>\n              </span>\n            </div>\n            <div *ngIf=\"move_stock_form.controls['items_count'].errors.min\">\n              <span class=\"text-danger opt-value\">\n                Field should contain at least 1 item count <br>\n              </span>\n            </div>\n          </div>\n          <div *ngIf=\"api_errors.items_count\">\n            <span class=\"text-danger opt-value\">\n              {{api_errors.items_count}}\n            </span>\n          </div>\n\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"check_box == true\">\n\n        <div class=\"col-md-12\">\n          <label for=\"serial_numbers\" class=\"form-label\">Serial Numbers</label>\n\n          <app-textarea-with-count formControlName=\"serial_numbers\">\n          </app-textarea-with-count>\n          <div\n            *ngIf=\"(move_stock_form.controls['serial_numbers'].dirty || move_stock_form.controls['serial_numbers'].touched) && (check_box == true && move_stock_form.value.serial_numbers == '')\"\n            class=\"alert\">\n            <div>\n              <span class=\"text-danger opt-value\">\n                Field is required <br>\n              </span>\n            </div>\n          </div>\n          <div *ngIf=\"api_errors.serial_numbers\">\n            <span class=\"text-danger opt-value\">\n\n              {{api_errors.serial_numbers}}\n            </span>\n          </div>\n        </div>\n\n\n      </div>\n    </app-card>\n    <div class=\"spark-dynamic-forms__button-wrapper\">\n      <button type=\"button\" class=\"btn btn btn-sm mb-3 lift spark-dynamic-forms__clear\"\n        (click)=\"clearForm()\">Clear</button>\n      <button type=\"submit\" class=\"btn btn-primary mb-3 lift spark-dynamic-forms__submit\"\n        [disabled]=\"!move_stock_form.valid\">\n        <span class=\"spark-text\">Move Stock\n        </span>\n      </button>\n\n\n    </div>\n  </form>\n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>","import { Routes } from '@angular/router';\nimport { AddComponent } from './add/add.component';\nimport { ListComponent } from './list/list.component';\n\nexport const SupplierRoutes: Routes = [\n    { path: '', component: ListComponent, data: { breadcrumb: 'List Supplier' } },\n    { path: 'add', component: AddComponent, data: { breadcrumb: 'Add Supplier' }  },\n]","import { Component, OnInit } from '@angular/core';\nimport { BoxConfigFields } from './options';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastNotificationsService } from '../../../shared/toast-notifications/toast-notifications.service';\n\n@Component({\n  selector: 'app-boxes',\n  templateUrl: './boxes.component.html',\n  styleUrls: ['./boxes.component.scss']\n})\nexport class BoxesComponent implements OnInit {\n  formItems: any = BoxConfigFields;\n  url: string = \"boxs/bulk/\"\n  instance: any;\n  formGroupOrder = [\n    [\"box_config\", \"store\", \"purchase_order\"],\n    [\"serial_numbers\"]\n  ]\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private toastService: ToastNotificationsService\n  ) {\n    this._activatedRoute.queryParams.subscribe(params => {\n      if (params.hasOwnProperty('id')) {\n        this.instance = params;\n        console.log(this.instance)\n      }\n    })\n\n  }\n\n  ngOnInit(): void {\n\n    \n  }\n\n  onValidatedData(data: any) {\n    console.log(data)\n  }\n\n  onPostedData(data: any) {\n    console.log(data);\n    // this.toastService.update(\"Successfully added record\", \"success\")\n\n  }\n\n}\n","<app-myform (onValidatedData)=\"onValidatedData($event)\" [isValidationOnly]=false [formItems]=\"formItems\" [url]=\"url\"\n    (onPostedData)=\"onPostedData($event)\" submitButtonText=\"Box\" [instance]=\"instance\"\n    [formGroupOrder]=\"formGroupOrder\" [cardTitle]=\"'Box'\" >\n</app-myform>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { tableHandleActionsMixin } from 'src/app/core/mixins/table-handle-actions-mixin';\nimport { TablesComponent } from 'src/app/shared/tables/tables.component';\n\nimport { ModalsService } from \"src/app/shared/modals/modals.service\";\nimport { TablesService } from 'src/app/shared/tables/tables.service';\nimport { storeFields } from '../add/options';\n\nconst TableHandleActionsMixin = tableHandleActionsMixin(TablesComponent);\n@Component({\n  selector: 'app-warehouse-list',\n  templateUrl: './warehouse-list.component.html',\n  styleUrls: ['./warehouse-list.component.scss']\n})\nexport class WarehouseListComponent extends TableHandleActionsMixin implements OnInit {\n\n  formItems: any = storeFields;\n  tableFiltersDropdown = [\n    [\"manager\"],\n    [\"location\"],\n  ];\n\n  constructor(\n    private _router: Router,\n    private _modalService: ModalsService,\n    private _tableService: TablesService\n  ) {\n    super();\n  }\n\n  url = \"stores/?type=WH&\";\n  apiUrl = \"stores\";\n\n  headers = [\n    \"Name\",\n    {\n      name: 'Warehouse ID',\n      source: \"id\",\n    },\n    {\n      name: 'Region/ Location',\n      source: \"location_details.name\",\n    },\n    {\n      name: 'Warehouse Manager',\n      source: \"manager_details.full_name\",\n    },\n    {\n      name: 'Actions',\n      type: \"actions\",\n      source: \"\",\n      data: [\n        \"edit\", \"delete\"\n      ]\n    },\n  ];\n\n  tableFilters = [\"Name\"]\n\n  ngOnInit(): void {\n  }\n\n  handleActions(action: any) {\n    this.handleTableActions(action, '/warehouse/add', this.apiUrl);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <!-- todo: move the buttons' logic to be part of the table-options -->\n        <div class=\"col-sm-12\">\n            <app-add-button [url]=\"'/warehouse/add'\"></app-add-button>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-sm-3\">\n            <app-dropdown-filters [url]=\"listTypeUrl\" [filterUrl]=\"listTypeUrl\" [formItems]=\"formItems\"\n                [formGroupOrder]=\"tableFiltersDropdown\"></app-dropdown-filters>\n        </div>\n        <div class=\"col-sm-9\">\n            <app-tables [listTypeUrl]=\"url\" (actionsEvent)=\"handleActions($event)\" [headers]=\"headers\"\n                [tableFilters]=\"tableFiltersCollapsible\" [filterFormItems]=\"formItems\">\n            </app-tables>\n        </div>\n    </div>\n\n    <app-confirm-dialog></app-confirm-dialog>\n</div>","import { take } from \"rxjs/operators\";\n\nexport function tableHandleActionsMixin(BaseClass: any) {\n  return class extends BaseClass {\n    handleTableActions(action: any, url: string, apiUrl: string) {\n      // console.log(action)\n      switch (action.name) {\n        case \"edit\":\n          this._router.navigate([url], { queryParams: action.data });\n          break;\n        case \"delete\":\n          const _this = this;\n          this._modalService.confirm(\n            \"Are you sure you want to delete?\",\n            function () {\n              console.log('PROMPT CONFIRM', action);\n              _this._tableService.delete(action.data, apiUrl)\n                .pipe(take(1))\n                .subscribe(() => { })\n            },\n            function () {\n              console.info('PROMPT DELETE CANCELLED');\n            }\n          )\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { storeFields } from '../../warehouse/add/options';\n\n@Component({\n  selector: 'app-add-stockroom',\n  templateUrl: './add-stockroom.component.html',\n  styleUrls: ['./add-stockroom.component.scss']\n})\nexport class AddStockroomComponent implements OnInit {\n  formItems: any = storeFields;\n  url: string = \"stores/\"\n  formGroupOrder = [\n    ['name', 'location', 'manager'],\n  ]\n\n  extraParams = {\n    type: \"SR\"\n  }\n\n  instance: any;\n\n  constructor(\n    private _activatedRoute: ActivatedRoute\n  ) {\n    this._activatedRoute.queryParams.subscribe(params => {\n      if (params.hasOwnProperty(\"id\")) {\n        this.instance = params\n        console.log(this.instance)\n      }\n    });\n   }\n\n  ngOnInit(): void {\n  }\n\n  onValidatedData(data: any) {\n    console.log(data)\n  }\n  onPostedData(data: any) {\n    console.log(data)\n  }\n\n}\n","<app-myform (onValidatedData)=\"onValidatedData($event)\" [isValidationOnly]=false [formItems]=\"formItems\"\n[url]=\"url\" (onPostedData)=\"onPostedData($event)\" submitButtonText=\"Stockroom\"\n[extraParams]=\"extraParams\"\n[instance]=\"instance\"\n[formGroupOrder]=\"formGroupOrder\" [cardTitle]=\"'Stockroom'\">\n</app-myform>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { tableHandleActionsMixin } from 'src/app/core/mixins/table-handle-actions-mixin';\nimport { TablesComponent } from 'src/app/shared/tables/tables.component';\nimport { ModalsService } from \"src/app/shared/modals/modals.service\";\nimport { TablesService } from 'src/app/shared/tables/tables.service';\n\nconst TableHandleActionsMixin = tableHandleActionsMixin(TablesComponent);\n@Component({\n  selector: 'app-list-item',\n  templateUrl: './list-item.component.html',\n  styleUrls: ['./list-item.component.scss']\n})\nexport class ListItemComponent extends TableHandleActionsMixin implements OnInit {\n\n  constructor(\n    private _router: Router,\n    private _modalService:ModalsService,\n    private _tableService:TablesService\n  ) { \n    super();\n  }\n  url = \"itemz\";\n\n  headers = [\n    {\n      name: 'Item Name',\n      source: \"item_config_name\",\n    },\n    {\n      name: 'Warehouse / Stockroom',\n      source: \"store_name\",\n    },\n    {\n      name: 'Region/ Location',\n      source: \"location_name\",\n    },\n    \"Purchase order\",\n    \"Serial\",\n    {\n      name: 'Actions',\n      type: \"actions\",\n      source: \"\",\n      data: [\n        \"edit\", \"delete\"\n      ]\n    },\n  ];\n\n  tableFilters = [\"Serial\"]\n\n  ngOnInit(): void {\n  }\n\n  handleActions(action: any) {\n      action.name == 'edit' ? this.handleTableActions(action, '/inventory/edit', this.url): this.handleTableActions(action, '/inventory/add', this.url)\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-sm-12\">\n        <app-add-button [url]=\"'/inventory/add'\"></app-add-button>\n    </div>\n</div>\n<app-tables [listTypeUrl]=\"url\" (actionsEvent)=\"handleActions($event)\" [headers]=\"headers\"\n    [tableFilters]=\"tableFilters\">\n</app-tables>\n\n<app-confirm-dialog></app-confirm-dialog>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { tableHandleActionsMixin } from 'src/app/core/mixins/table-handle-actions-mixin';\nimport { TablesComponent } from 'src/app/shared/tables/tables.component';\nimport { ModalsService } from \"src/app/shared/modals/modals.service\";\nimport { TablesService } from 'src/app/shared/tables/tables.service';\n\nconst TableHandleActionsMixin = tableHandleActionsMixin(TablesComponent);\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListBoxesComponent extends TableHandleActionsMixin implements OnInit {\n\n  constructor(\n    private _router: Router,\n    private _modalService: ModalsService,\n    private _tableService: TablesService\n  ) {\n    super();\n  }\n  url = \"boxs\";\n\n  headers = [\n    \"box_config\",\n    \"store\",\n    \"purchase_order\",\n    {\n      \"name\": \"Serials\",\n      \"source\": \"serial\"\n    },\n    {\n      name: 'Actions',\n      type: \"actions\",\n      source: \"\",\n      data: [\n        \"edit\", \"delete\"\n      ]\n    },\n  ];\n\n  ngOnInit(): void {\n  }\n\n  handleActions(action: any) {\n    this.handleTableActions(action, '/check-in', this.url);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-sm-12\">\n        <app-add-button [url]=\"'/check-in'\"></app-add-button>\n    </div>\n</div>\n<app-tables [listTypeUrl]=\"url\" (actionsEvent)=\"handleActions($event)\" [headers]=\"headers\"\n    [tableFilters]=\"tableFilters\">\n</app-tables>\n\n<app-confirm-dialog></app-confirm-dialog>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { WarehouseRoutes } from './warehouse-routing.module';\nimport { AddWarehouseComponent } from './add/add-warehouse.component';\nimport { WarehouseListComponent } from './list/warehouse-list.component';\n@NgModule({\n  declarations: [AddWarehouseComponent, WarehouseListComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(WarehouseRoutes),\n    SharedModule\n  ]\n})\nexport class WarehouseModule { }\n","import { parses, renders, endpointV1 } from \"../../../../services/constants/form-options-configs\";\n\nconst SerializedItemfields: any = {\n    \"name\": \"List Create Items Api\",\n    \"description\": \"\",\n    parses,\n    renders,\n    \"actions\": {\n        \"POST\": {\n            \"id\": {\n                \"type\": \"integer\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"ID\"\n            },\n            \"created\": {\n                \"type\": \"datetime\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"Created\"\n            },\n            \"modified\": {\n                \"type\": \"datetime\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"Modified\"\n            },\n            \"purchase_order\": {\n                \"type\": \"string\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Purchase order\",\n                \"max_length\": 45\n            },\n            \"serial\": {\n                \"type\": \"string\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Serial\",\n                \"max_length\": 400\n            },\n            \"store\": {\n                \"type\": \"field\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Warehouse / Stockroom\",\n                \"display_name\": \"name\",\n                \"url\": `${endpointV1}stores`\n            },\n            \"item_config\": {\n                \"type\": \"field\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Item Name\",\n                \"display_name\": \"name\",\n                \"url\": `${endpointV1}item-configs`\n            },\n            \"box\": {\n                \"type\": \"field\",\n                \"required\": false,\n                \"read_only\": false,\n                \"label\": \"Box\",\n                \"display_name\": \"name\",\n                \"url\": `${endpointV1}box-configs`\n            }\n        }\n    }\n}\n\nconst NotSerializedItemfields: any = {\n    \"name\": \"List Create Items Api\",\n    \"description\": \"\",\n    parses,\n    renders,\n    \"actions\": {\n        \"POST\": {\n            \"id\": {\n                \"type\": \"integer\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"ID\"\n            },\n            \"created\": {\n                \"type\": \"datetime\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"Created\"\n            },\n            \"modified\": {\n                \"type\": \"datetime\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"Modified\"\n            },\n            \"purchase_order\": {\n                \"type\": \"string\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Purchase order\",\n                \"max_length\": 45\n            },\n            \"serial\": {\n                \"type\": \"string\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Serial\",\n                \"max_length\": 400\n            },\n            \"store\": {\n                \"type\": \"field\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Warehouse / Stockroom\",\n                \"display_name\": \"name\",\n                \"url\": `${endpointV1}stores`\n            },\n            \"item_config\": {\n                \"type\": \"field\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Item Name\",\n                \"display_name\": \"name\",\n                \"url\": `${endpointV1}item-configs`\n            },\n            \"box\": {\n                \"type\": \"field\",\n                \"required\": false,\n                \"read_only\": false,\n                \"label\": \"Box\",\n                \"display_name\": \"name\",\n                \"url\": `${endpointV1}box-configs`\n            }\n        }\n    }\n}\n\nexport {\n    SerializedItemfields, NotSerializedItemfields\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { tableHandleActionsMixin } from 'src/app/core/mixins/table-handle-actions-mixin';\nimport { TablesComponent } from 'src/app/shared/tables/tables.component';\nimport { ModalsService } from \"src/app/shared/modals/modals.service\";\nimport { TablesService } from 'src/app/shared/tables/tables.service';\nimport { optionsField } from '../options';\n\nconst TableHandleActionsMixin = tableHandleActionsMixin(TablesComponent);\n\n@Component({\n  selector: 'app-list-products',\n  templateUrl: './list-products.component.html',\n  styleUrls: ['./list-products.component.scss']\n})\nexport class ListProductsComponent extends TableHandleActionsMixin implements OnInit {\n\n  formItems: any = optionsField;\n  tableFiltersDropdown = [\n    [\"customer\"],\n  ];\n  constructor(\n    private _router: Router,\n    private _modalService: ModalsService,\n    private _tableService: TablesService\n  ) {\n    super();\n  }\n\n  url = \"products\"\n\n  headers = [\n    \"Customer\",\n    {\n      name: 'Product Configuration',\n      source: \"product_config\",\n    },\n    \"Items\",\n    \"Boxes\",\n    {\n      name: 'Actions',\n      type: \"actions\",\n      source: \"\",\n      data: [\n        \"edit\", \"delete\"\n      ]\n    },\n  ];\n\n  ngOnInit(): void {\n  }\n\n  handleActions(action: any) {\n    this.handleTableActions(action, '/stockroom/add', this.apiUrl)\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-sm-12\">\n        <app-add-button [url]=\"'/products/add'\"></app-add-button>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-sm-3\">\n        <app-dropdown-filters [url]=\"listTypeUrl\" [filterUrl]=\"listTypeUrl\" [formItems]=\"formItems\"\n            [formGroupOrder]=\"tableFiltersDropdown\"></app-dropdown-filters>\n    </div>\n    <div class=\"col-sm-9\">\n        <app-tables [listTypeUrl]=\"url\" (actionsEvent)=\"handleActions($event)\" [headers]=\"headers\"\n            [tableFilters]=\"tableFiltersCollapsible\" [filterFormItems]=\"formItems\">\n        </app-tables>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InventoryRoutes } from './inventory-routing.modules';\n\nimport { AddItemComponent } from './items/add/add-item.component';\nimport { ListItemComponent } from './items/list/list-item.component';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { EditComponent } from './items/edit/edit.component';\nimport { MoveStockComponent } from './items/move-stock/move-stock.component';\nimport { BoxesComponent } from './boxes/boxes.component';\nimport { ListBoxesComponent } from './boxes/list/list.component';\nimport { ProductsModule } from './products/products.module';\n\n\n\n@NgModule({\n  declarations: [AddItemComponent, ListItemComponent, EditComponent, MoveStockComponent, BoxesComponent, ListBoxesComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(InventoryRoutes),\n    SharedModule,\n    CoreModule,\n    ProductsModule\n  ]\n})\nexport class InventoryModule { }\n","import {\n  parses,\n  renders,\n  endpointV1,\n} from '../../services/constants/form-options-configs';\n\nexport const CustomerConfigs: any = {\n    name: 'List Create Customers Api',\n    description: '',\n    parses,\n    renders,\n    actions: {\n        POST: {\n        id: {\n            type: 'integer',\n            required: false,\n            read_only: true,\n            label: 'ID',\n        },\n        created: {\n            type: 'datetime',\n            required: false,\n            read_only: true,\n            label: 'Created',\n        },\n        modified: {\n            type: 'datetime',\n            required: false,\n            read_only: true,\n            label: 'Modified',\n        },\n        name: {\n            type: 'string',\n            required: false,\n            read_only: false,\n            label: 'Name',\n            max_length: 45,\n        },\n        angaza_qid: {\n            type: 'string',\n            required: false,\n            read_only: false,\n            label: 'Angaza qid',\n            max_length: 45,\n        },\n        primary_phone: {\n            type: 'string',\n            required: false,\n            read_only: false,\n            label: 'Primary phone',\n            max_length: 45,\n        },\n        id_number: {\n            type: 'string',\n            required: false,\n            read_only: false,\n            label: 'Id number',\n            max_length: 15,\n        },\n        region: {\n            type: 'field',\n            required: false,\n            read_only: false,\n            label: 'Region',\n            max_length: 45,\n            display_name: \"name\",\n            url: `${endpointV1}locations/`\n        },\n        village: {\n            type: 'string',\n            required: false,\n            read_only: false,\n            label: 'Village',\n            max_length: 45,\n        },\n        closest_spark_agent_shop: {\n            type: 'integer',\n            required: false,\n            read_only: false,\n            label: 'Closest spark agent shop',\n            help_text: 'In Kms',\n            max_length: 45,\n        },\n        occupation: {\n            type: 'string',\n            required: false,\n            read_only: false,\n            label: 'Occupation',\n            max_length: 45,\n        },\n        avg_monthly_income: {\n            type: 'string',\n            required: false,\n            read_only: true,\n            label: 'Avg monthly income',\n            help_text: 'In Kms',\n            max_length: 45,\n        },\n        min_salary: {\n            \"type\": \"integer\",\n            \"required\": false,\n            \"read_only\": false,\n            \"label\": \"Min salary\"\n        },\n        max_salary: {\n            \"type\": \"integer\",\n            \"required\": false,\n            \"read_only\": false,\n            \"label\": \"Max salary\"\n        }\n        },\n    },\n};\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormItemService } from 'src/app/services/forms/form-item.service';\nimport { Location } from '@angular/common'\n// import { SerializedItemfields, NotSerializedItemfields } from './options';\n// import { FormBase, DropdownItem, TextItem } from '../../../../core/models/form-base';\n\n// import { IntegerValidator } from '../../../../core/helpers/integer-validator';\nimport { ToastNotificationsService } from '../../../../shared/toast-notifications/toast-notifications.service';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { endpointV1 } from \"../../../../services/constants/form-options-configs\";\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-add-item',\n  templateUrl: './add-item.component.html',\n  styleUrls: ['./add-item.component.scss']\n})\nexport class AddItemComponent implements OnInit {\n\n  page_title = 'Add Items'\n  newEntry: boolean = true;\n  add_item_form: any;\n  items: any;\n  stores: any;\n  boxes: any;\n  check_box: boolean = false;\n  item_loading: boolean = true;\n  stock_loading: boolean = true;\n  box_loading: boolean = true;\n  instance: any = {};\n  api_errors: any = [];\n\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _formService: FormItemService,\n    private toastService: ToastNotificationsService,\n    private location: Location\n  ) {\n\n\n    const item_config = new FormControl('', Validators.required);\n    const store = new FormControl('', Validators.required);\n    const purchase_order = new FormControl('', Validators.required);\n    const item_count = new FormControl('')\n    const serial_numbers = new FormControl('');\n\n    this.add_item_form = new FormGroup({\n      item_config: item_config,\n      store: store,\n      purchase_order: purchase_order,\n      serial_numbers: serial_numbers,\n      item_count: item_count\n    })\n\n    // this._activatedRoute.queryParams.subscribe(params => {\n    //   if (params.hasOwnProperty(\"id\")) {\n    //     this.instance = params\n    //     this.newEntry = false;\n    //     console.log(this.instance)\n    //   }\n\n    //   //Show Serial textarea if edit \n    //   if (params.hasOwnProperty(\"serial\")) {\n    //     this.check_box = true;\n    //   }\n    // });\n  }\n\n  ngOnInit() {\n\n    //initially populate dropdowns\n    this.getDropdownValues();\n    this.showSuccess()\n  }\n\n  showSuccess() {\n    console.log(\"toast\");\n  }\n  getDropdownValues() {\n    //Item config fetch dropdown values and set field value if an edit\n    this._formService.getDropdownValues(`${endpointV1}item-configs`).subscribe(response => {\n      this.item_loading = false;\n      this.items = response.results;\n      console.log(\"item-configs\");\n      console.log(response);\n\n    }, err => {\n      this.item_loading = false;\n    });\n\n    //Store fetch dropdown values and set field value if an edit\n    this._formService.getDropdownValues(`${endpointV1}stores`).subscribe(response => {\n      this.stock_loading = false;\n      this.stores = response.results;\n\n    }, err => {\n      this.stock_loading = false;\n    });\n\n\n\n  }\n\n\n  //POST or PUT item\n  submitItem() {\n    //delete fields not needed in serialized/non-serialized\n    if (this.check_box == true) {\n      delete this.add_item_form.value.item_count;\n    } else {\n      delete this.add_item_form.value.serial_numbers;\n    }\n\n    //reset API errors\n    this.api_errors = [];\n    let data = {\n      url: this.newEntry == true ? `${endpointV1}itemz/bulk` : `${endpointV1}itemz/${this.instance.id}/`,\n      formData: this.add_item_form.value\n    }\n    console.log(data);\n    this._formService.postForm(this.newEntry, data).subscribe(response => {\n      console.log(response);\n      this.add_item_form.reset();\n      this.location.back();\n\n\n    }, (err: HttpErrorResponse) => {\n\n      this.api_errors = err.error;\n\n    })\n  }\n\n  //Reset Form\n  clearForm() {\n    this.newEntry = false;\n    this.add_item_form.reset();\n  }\n\n\n\n\n}\n","<div class=\"container\">\n  <form class=\"form-group\" [formGroup]=\"add_item_form\" (ngSubmit)=\"submitItem()\">\n    <app-card [title]=\"page_title\">\n      <div class=\"row\">\n        <div class=\"col-md-3\">\n\n          <!--Item -->\n          <!-- Field -->\n          <label for=\"item_name\" class=\"form-label\">Item Name</label>\n          <select class=\"form-control form-control-lg opt-value\" formControlName=\"item_config\" *ngIf=\"!item_loading\">\n            <option *ngFor=\"let item of items\" value=\"{{item.id}}\" required>{{item.name}}</option>\n          </select>\n          <!-- Loader -->\n          <span class=\"linear-background\" *ngIf=\"item_loading\"></span>\n          <!-- Errors -->\n          <div\n            *ngIf=\"add_item_form.controls['item_config'].invalid && (add_item_form.controls['item_config'].dirty || add_item_form.controls['item_config'].touched)\"\n            class=\"alert\">\n            <div *ngIf=\"add_item_form.controls['item_config'].errors.required\">\n              <span class=\"text-danger opt-value\">\n                Field is required <br>\n              </span>\n            </div>\n          </div>\n          <div *ngIf=\"api_errors.item_config\">\n\n            <span class=\"text-danger opt-value\">\n              {{api_errors.item_config}}\n            </span>\n          </div>\n        </div>\n\n        <div class=\"col-md-3\">\n          <!-- Stock -->\n          <!-- Field -->\n          <label for=\"item_name\" class=\"form-label\">Warehouse / Stockroom</label>\n          <select class=\"form-control form-control-lg opt-value\" formControlName=\"store\" *ngIf=\"!stock_loading\">\n            <option *ngFor=\"let store of stores\" value=\"{{store.id}}\" required>{{store.name}}</option>\n          </select>\n\n          <!-- Loader -->\n          <span class=\"linear-background\" *ngIf=\"stock_loading\"></span>\n\n          <!--Validation Errors -->\n          <div\n            *ngIf=\"add_item_form.controls['store'].invalid && (add_item_form.controls['store'].dirty || add_item_form.controls['store'].touched)\"\n            class=\"alert\">\n            <div *ngIf=\"add_item_form.controls['store'].errors.required\">\n              <span class=\"text-danger opt-value\">\n                Field is required <br>\n              </span>\n            </div>\n\n          </div>\n          <div *ngIf=\"api_errors.store\">\n\n            <span class=\"text-danger opt-value\">\n              {{api_errors.store}}\n            </span>\n          </div>\n        </div>\n        <div class=\"col-md-2\">\n          <!-- Purchase Order -->\n          <!-- Field -->\n          <label for=\"item_name\" class=\"form-label\">Purchase Order</label>\n          <input class=\"form-control form-control-lg opt-value\" formControlName=\"purchase_order\" required />\n\n          <!-- Validation Errors -->\n          <div\n            *ngIf=\"add_item_form.controls['store'].invalid && (add_item_form.controls['purchase_order'].dirty || add_item_form.controls['purchase_order'].touched)\"\n            class=\"alert\">\n            <div *ngIf=\"add_item_form.controls['purchase_order'].errors.required\">\n              <span class=\"text-danger opt-value\">\n                Field is required <br>\n              </span>\n            </div>\n          </div>\n          <div *ngIf=\"api_errors.purchase_order\">\n\n            <span class=\"text-danger opt-value\">\n              {{api_errors.purchase_order}}\n            </span>\n          </div>\n        </div>\n        <div class=\"col-md-2\" *ngIf=\"check_box == false\">\n          <!-- Item Count Field -->\n          <!-- Field -->\n          <label for=\"item_name\" class=\"form-label\">Item Count</label>\n          <input type=\"number\" class=\"form-control form-control-lg\" formControlName=\"item_count\" />\n\n          <div\n            *ngIf=\"add_item_form.controls['item_count'].invalid && (add_item_form.controls['item_count'].dirty || add_item_form.controls['item_count'].touched)\"\n            class=\"alert\">\n            <div *ngIf=\"add_item_form.controls['item_count'].errors.required\">\n              <span class=\"text-danger opt-value\">\n                Field is required <br>\n              </span>\n            </div>\n            <div *ngIf=\"add_item_form.controls['item_count'].errors.required\">\n              <span class=\"text-danger opt-value\">\n                Field has to be a number <br>\n              </span>\n            </div>\n          </div>\n\n          <div *ngIf=\"api_errors.item_count\">\n\n            <span class=\"text-danger opt-value\">\n              {{api_errors.item_count}}\n            </span>\n          </div>\n\n\n        </div>\n        <div class=\"col-md-2 text-center\">\n          <!-- Serialized Check Box -->\n\n\n          <label for=\"serials\" class=\"form-label\">Serialized? </label>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input opt-value\" [(ngModel)]=\"check_box\"\n              [ngModelOptions]=\"{standalone: true}\" />\n          </div>\n\n\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"check_box == true\">\n\n        <div class=\"col-md-12\">\n          <label for=\"serial_numbers\" class=\"form-label\">Serial</label>\n\n          <app-textarea-with-count formControlName=\"serial_numbers\">\n          </app-textarea-with-count>\n          <!-- <textarea class=\"form-control form-control-lg opt-value\" formControlName=\"serial_numbers\">\n\n          </textarea> -->\n          <div\n            *ngIf=\"(add_item_form.controls['serial_numbers'].dirty || add_item_form.controls['serial_numbers'].touched) && (check_box == true && add_item_form.value.serial_numbers == '')\"\n            class=\"alert\">\n            <div>\n              <span class=\"text-danger opt-value\">\n                Field is required <br>\n              </span>\n            </div>\n          </div>\n          <div *ngIf=\"api_errors.serial_numbers\">\n\n            <span class=\"text-danger opt-value\">\n              {{api_errors.serial_numbers}}\n            </span>\n          </div>\n        </div>\n\n\n      </div>\n    </app-card>\n    <div class=\"spark-dynamic-forms__button-wrapper\">\n      <button type=\"button\" class=\"btn btn btn-sm mb-3 lift spark-dynamic-forms__clear\"\n        (click)=\"clearForm()\">Clear</button>\n      <button type=\"submit\" class=\"btn btn-primary mb-3 lift spark-dynamic-forms__submit\"\n        [disabled]=\"!add_item_form.valid\">\n        <span class=\"spark-text\">Add Item\n        </span>\n      </button>\n\n\n    </div>\n  </form>\n\n\n\n</div>","import { Routes } from '@angular/router';\nimport { AuthGuard } from '../core/auth-guards/auth.guards';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nexport const ModulesRoutes: Routes = [\n  { path: 'home', component: DashboardComponent, data: { breadcrumb: 'Home' } },\n  {\n    path: 'accounts',\n    data: { breadcrumb: 'accounts' },\n    loadChildren: () =>\n      import(`./accounts/accounts.module`).then((m) => m.AccountsModule), canActivate: [AuthGuard]\n  },\n  {\n    path: 'suppliers',\n    data: { breadcrumb: 'suppliers' },\n    loadChildren: () =>\n      import(`./suppliers/suppliers.module`).then((m) => m.SuppliersModule), canActivate: [AuthGuard]\n  },\n  {\n    path: 'configs',\n    data: { breadcrumb: 'Configs' },\n    loadChildren: () =>\n      import(`./configurations/configs.module`).then((m) => m.ConfigsModule), canActivate: [AuthGuard]\n  },\n  {\n    path: 'warehouse',\n    data: { breadcrumb: 'Warehouse' },\n    loadChildren: () =>\n      import(`./warehouse/warehouse.module`).then((m) => m.WarehouseModule), canActivate: [AuthGuard]\n  },\n  {\n    path: 'stockroom',\n    data: { breadcrumb: 'Stockroom' },\n    loadChildren: () =>\n      import(`./stockroom/stockroom.module`).then((m) => m.StockroomModule), canActivate: [AuthGuard]\n  },\n  {\n    path: 'inventory',\n    data: { breadcrumb: 'Inventory' },\n    loadChildren: () =>\n      import(`./inventory/inventory.module`).then((m) => m.InventoryModule), canActivate: [AuthGuard]\n  },\n  {\n    path: 'customers',\n    data: { breadcrumb: 'Customer' },\n    loadChildren: () =>\n      import(`./customers/customers.module`).then((m) => m.CustomersModule), canActivate: [AuthGuard]\n  }\n\n]","import { Routes } from '@angular/router';\nimport { AddProductsComponent } from './add-products/add-products.component';\nimport { ListProductsComponent } from './list-products/list-products.component';\n\nexport const InventoryProductsRoutes: Routes = [\n    { path: '', redirectTo: 'list', pathMatch: 'full' },\n    { path: 'add', component: AddProductsComponent, data: { breadcrumb: 'Add' } },\n    { path: 'list', component: ListProductsComponent, data: { breadcrumb: 'List' } },\n]","import { Routes } from '@angular/router';\nimport { AddStockroomComponent } from './add/add-stockroom.component';\nimport { StockroomListComponent } from './list/stockroom-list.component';\nexport const StockroomRoutes: Routes = [\n    { path: '', redirectTo: 'list', pathMatch: 'full' },\n    { path: 'add', component: AddStockroomComponent, data: { breadcrumb: 'Add Stockroom' } },\n    { path: 'list', component: StockroomListComponent, data: { breadcrumb: 'List Stockrooms' } },\n    \n]","\nimport { parses, renders, endpointV1 } from \"../../../services/constants/form-options-configs\";\n\nconst storeFields: any = {\n    \"name\": \"List Create Stores Api\",\n    \"description\": \"\",\n    renders,\n    parses,\n    \"actions\": {\n        \"POST\": {\n            \"id\": {\n                \"type\": \"integer\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"ID\"\n            },\n            \"created\": {\n                \"type\": \"datetime\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"Created\"\n            },\n            \"modified\": {\n                \"type\": \"datetime\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"Modified\"\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Name\",\n                \"max_length\": 45\n            },\n            \"type\": {\n                \"type\": \"choice\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Type\",\n                \"choices\": [\n                    {\n                        \"value\": \"WH\",\n                        \"display_name\": \"Warehouse\"\n                    },\n                    {\n                        \"value\": \"SR\",\n                        \"display_name\": \"Stock Room\"\n                    }\n                ]\n            },\n            \"location\": {\n                \"type\": \"field\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Location / Region / Province\",\n                \"display_name\": \"name\",\n                \"url\": `${endpointV1}locations/`\n            },\n            \"manager\": {\n                \"type\": \"field\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Manager\",\n                \"display_name\": \"full_name\",\n                \"url\": `${endpointV1}users/`\n            }\n        }\n    }\n}\n\nexport {\n    storeFields\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\n\nimport { AddStockroomComponent } from './add/add-stockroom.component';\nimport { StockroomRoutes } from './stockroom-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { StockroomListComponent } from './list/stockroom-list.component';\n\n\n\n@NgModule({\n  declarations: [AddStockroomComponent, StockroomListComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(StockroomRoutes),\n    SharedModule\n  ]\n})\nexport class StockroomModule { }\n"]}