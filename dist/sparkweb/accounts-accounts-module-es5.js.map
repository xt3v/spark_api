{"version":3,"sources":["webpack:///src/app/modules/accounts/accounts-routing.module.ts","webpack:///src/app/modules/accounts/accounts.module.ts","webpack:///src/app/modules/accounts/options.ts","webpack:///src/app/modules/accounts/list/list.component.ts","webpack:///src/app/modules/accounts/list/list.component.html","webpack:///src/app/modules/accounts/add/add.component.ts","webpack:///src/app/modules/accounts/add/add.component.html"],"names":["AccountsRoutes","path","component","data","breadcrumb","AccountsModule","forChild","optionsField","renders","parses","TableHandleActionsMixin","ListComponent","_router","_modalService","_tableService","formItems","tableFiltersDropdown","url","apiUrl","headers","name","source","type","action","handleTableActions","handleActions","AddComponent","_activatedRoute","formGroupOrder","extraParams","queryParamMap","subscribe","params","hasOwnProperty","instance","console","log","onValidatedData","onPostedData"],"mappings":"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","file":"accounts-accounts-module-es5.js","sourcesContent":["import { Routes } from '@angular/router';\nimport { AddComponent } from './add/add.component';\nimport { ListComponent } from './list/list.component';\n\nexport const AccountsRoutes: Routes = [\n    { path: '', component: ListComponent, data: { breadcrumb: 'Accounts' } },\n    { path: 'add', component: AddComponent, data: { breadcrumb: 'Add Accounts' } },\n]","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AccountsRoutes } from './accounts-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { AddComponent } from './add/add.component';\nimport { ListComponent } from './list/list.component';\n\n\n@NgModule({\n  declarations: [AddComponent, ListComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AccountsRoutes),\n    SharedModule\n  ]\n})\nexport class AccountsModule { }\n","import { parses, renders, endpointV1 } from '../../services/constants/form-options-configs'\n\nexport const optionsField: any =\n{\n    \"name\": \"Create List User\",\n    \"description\": \"\",\n    renders,\n    parses,\n    \"actions\": {\n        \"POST\": {\n            \"id\": {\n                \"type\": \"integer\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"ID\"\n            },\n            \"image\": {\n                \"type\": \"image upload\",\n                \"required\": false,\n                \"read_only\": false,\n                \"label\": \"Image\"\n            },\n            \"profile_image\": {\n                \"type\": \"field\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"Profile image\"\n            },\n            \"full_name\": {\n                \"type\": \"string\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"Full name\"\n            },\n            \"password\": {\n                \"type\": \"string\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Password\",\n                \"max_length\": 128\n            },\n            \"last_login\": {\n                \"type\": \"datetime\",\n                \"required\": false,\n                \"read_only\": false,\n                \"label\": \"Last login\"\n            },\n            \"username\": {\n                \"type\": \"string\",\n                \"required\": false,\n                \"read_only\": false,\n                \"label\": \"Username\",\n                \"help_text\": \"Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.\",\n                \"max_length\": 150\n            },\n            \"first_name\": {\n                \"type\": \"string\",\n                \"required\": false,\n                \"read_only\": false,\n                \"label\": \"First name\",\n                \"max_length\": 150\n            },\n            \"last_name\": {\n                \"type\": \"string\",\n                \"required\": false,\n                \"read_only\": false,\n                \"label\": \"Last name\",\n                \"max_length\": 150\n            },\n            \"date_joined\": {\n                \"type\": \"datetime\",\n                \"required\": false,\n                \"read_only\": false,\n                \"label\": \"Date joined\"\n            },\n            \"role\": {\n                \"type\": \"choice\",\n                \"required\": false,\n                \"read_only\": false,\n                \"label\": \"Role\",\n                \"choices\": [\n                    {\n                        \"value\": \"ST\",\n                        \"display_name\": \"Store Keeper\"\n                    },\n                    {\n                        \"value\": \"AD\",\n                        \"display_name\": \"Admin\"\n                    },\n                    {\n                        \"value\": \"IN\",\n                        \"display_name\": \"Installer\"\n                    },\n                    {\n                        \"value\": \"SR\",\n                        \"display_name\": \"Sales Rep\"\n                    },\n                    {\n                        \"value\": \"TL\",\n                        \"display_name\": \"Team Lead\"\n                    },\n                    {\n                        \"value\": \"CS\",\n                        \"display_name\": \"Call Support\"\n                    }\n                ]\n            },\n            \"phone\": {\n                \"type\": \"string\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Phone\",\n                \"max_length\": 50\n            },\n            \"google_profile_image\": {\n                \"type\": \"url\",\n                \"required\": false,\n                \"read_only\": false,\n                \"label\": \"Google profile image\",\n                \"max_length\": 200\n            },\n            \"verified\": {\n                \"type\": \"boolean\",\n                \"required\": false,\n                \"read_only\": false,\n                \"label\": \"Verified\"\n            },\n            \"dummy\": {\n                \"type\": \"boolean\",\n                \"required\": false,\n                \"read_only\": false,\n                \"label\": \"Dummy\"\n            },\n            \"available\": {\n                \"type\": \"boolean\",\n                \"required\": false,\n                \"read_only\": true,\n                \"label\": \"Available\"\n            },\n            \"email\": {\n                \"type\": \"email\",\n                \"required\": true,\n                \"read_only\": false,\n                \"label\": \"Email\",\n                \"max_length\": 254\n            },\n            \"id_number\": {\n                \"type\": \"string\",\n                \"required\": false,\n                \"read_only\": false,\n                \"label\": \"Id number\",\n                \"max_length\": 20\n            }\n        }\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { tableHandleActionsMixin } from 'src/app/core/mixins/table-handle-actions-mixin';\nimport { TablesComponent } from 'src/app/shared/tables/tables.component';\n\nimport { ModalsService } from \"src/app/shared/modals/modals.service\";\nimport { TablesService } from 'src/app/shared/tables/tables.service';\nimport { optionsField } from '../options';\n\nconst TableHandleActionsMixin = tableHandleActionsMixin(TablesComponent);\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent extends TableHandleActionsMixin implements OnInit {\n  formItems: any = optionsField\n  tableFiltersDropdown = [\n    [\"first_name\"],\n  ];\n\n  constructor(\n    private _router: Router,\n    private _modalService: ModalsService,\n    private _tableService: TablesService\n  ) {\n    super()\n  }\n\n  url = \"users\";\n  apiUrl = \"users\";\n\n  headers = [\n    {\n      name: 'ID',\n      source: \"id\",\n    },\n    {\n      name: 'Username',\n      source: \"username\",\n    },\n    {\n      name: 'Name',\n      source: \"full_name\",\n    },\n    {\n      name: 'Role',\n      source: \"role.choices.display_name\",\n    },\n    {\n      name: 'Phone',\n      source: \"phone\",\n    },\n    {\n      name: 'Email Address',\n      source: \"email\",\n    },\n    {\n      name: 'Actions',\n      type: \"actions\",\n      source: \"\",\n      data: [\n        \"edit\", \"delete\"\n      ]\n    },\n  ];\n\n  ngOnInit(): void {\n  }\n\n  handleActions(action: any) {\n    this.handleTableActions(action, '/accounts/add', this.apiUrl);\n  }\n}","<div class=\"row\">\n    <div class=\"col-sm-12\">\n        <app-add-button [url]=\"'/accounts/add'\"></app-add-button>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-sm-3\">\n        <app-dropdown-filters [url]=\"listTypeUrl\" [filterUrl]=\"listTypeUrl\" [formItems]=\"formItems\"\n            [formGroupOrder]=\"tableFiltersDropdown\"></app-dropdown-filters>\n    </div>\n    <div class=\"col-sm-9\">\n        <app-tables [listTypeUrl]=\"url\" (actionsEvent)=\"handleActions($event)\" [headers]=\"headers\"\n            [tableFilters]=\"tableFiltersCollapsible\" [filterFormItems]=\"formItems\">\n        </app-tables>\n    </div>\n</div>\n\n<app-confirm-dialog></app-confirm-dialog>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ModalsService } from 'src/app/shared/modals/modals.service';\nimport { optionsField } from '../../accounts/options';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.scss']\n})\nexport class AddComponent implements OnInit {\n\n  formItems: any = optionsField\n  url: string = 'users/'\n  instance: any\n\n  formGroupOrder = [\n    ['username'],\n    ['first_name'],\n    ['last_name'],\n    ['role'],\n    ['phone'],\n    ['email']\n  ]\n\n  extraParams = {\n    type: 'WH'\n  }\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _modalService: ModalsService\n  ) {\n    this._activatedRoute.queryParamMap.subscribe(params => {\n      if (params.hasOwnProperty('id')) {\n        this.instance = params\n        console.log(this.instance)\n      }\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  onValidatedData(data: any) {\n    console.log(data)\n  }\n\n  onPostedData(data: any) {\n    console.log(data)\n  }\n\n}\n","<app-myform (onValidatedData)=\"onValidatedData($event)\" [isValidationOnly]=false [formItems]=\"formItems\" [url]=\"url\"\n    (onPostedData)=\"onPostedData($event)\" submitButtonText=\"Account\" [extraParams]=\"extraParams\" [instance]=\"instance\"\n    [formGroupOrder]=\"formGroupOrder\" [cardTitle]=\"'Accounts'\">\n</app-myform>"]}