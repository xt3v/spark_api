{"version":3,"sources":["./src/app/core/structure/header/header.component.ts","./src/app/modules/modules.component.ts","./src/app/modules/modules.component.html","./src/app/shared/tables/mytd/mytd.component.ts","./src/app/shared/tables/mytd/mytd.component.html","./src/app/shared/modals/modals.service.ts","./src/app/shared/card/card-dropdown/card-dropdown.component.ts","./src/app/shared/card/card-dropdown/card-dropdown.component.html","./src/app/core/authentication/authentication.component.ts","./src/app/core/authentication/authentication.component.html","./src/app/shared/side-menu/side-menu.component.html","./src/app/shared/side-menu/side-menu.component.ts","./src/app/shared/myform/myform.module.ts","./src/app/shared/breadcrumb/breadcrumb.component.ts","./src/app/shared/breadcrumb/breadcrumb.component.html","./src/environments/environment.ts","./src/app/shared/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/shared/modals/confirm-dialog/confirm-dialog.component.html","./src/app/services/user/user.service.ts","./src/app/services/storage/storage.service.ts","./src/app/shared/card/card.component.ts","./src/app/shared/card/card.component.html","./src/app/shared/textarea-with-count/textarea-with-count.component.ts","./src/app/shared/textarea-with-count/textarea-with-count.component.html","./src/app/shared/toast-notifications/toast-notifications.module.ts","./src/app/shared/filters/myform/myinput/model.ts","./src/app/services/forms/form-item.service.ts","./src/app/shared/filters/myform/myform.component.ts","./src/app/shared/filters/myform/myform.component.html","./src/app/shared/tables/tables.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/tables/tables.component.ts","./src/app/shared/tables/tables.component.html","./src/app/core/authentication/lock-screen/lock-screen.component.ts","./src/app/core/authentication/lock-screen/lock-screen.component.html","./src/app/core/structure/navbar/navbar.component.ts","./src/app/core/structure/navbar/navbar.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/filters/submit-filters/submit-filters.component.ts","./src/app/shared/filters/submit-filters/submit-filters.component.html","./src/app/core/structure/footer/footer.component.ts","./src/app/shared/filters/filters.service.ts","./src/app/shared/filters/collapsible-filters/collapsible-filters.component.ts","./src/app/shared/filters/collapsible-filters/collapsible-filters.component.html","./src/app/app.module.ts","./src/app/shared/tables/mytablefilter/mytablefilter.component.ts","./src/app/shared/tables/mytablefilter/mytablefilter.component.html","./src/app/core/auth-guards/auth.guards.ts","./src/app/shared/modals/basic/modals.component.ts","./src/app/shared/modals/basic/modals.component.html","./src/app/shared/filters/filters.component.ts","./src/app/shared/filters/filters.component.html","./src/app/shared/tables/tables.module.ts","./src/app/shared/filters/myform/myinput/myinput.component.ts","./src/app/shared/filters/myform/myinput/myinput.component.html","./src/app/shared/toast-notifications/toast-notifications.service.ts","./src/app/shared/add-button/add-button.component.ts","./src/app/shared/add-button/add-button.component.html","./src/app/shared/myform/myform.component.ts","./src/app/shared/myform/myform.component.html","./src/app/shared/filters/filters.module.ts","./src/app/services/index.ts","./src/app/shared/modals/confirm/confirm.component.ts","./src/app/shared/modals/confirm/confirm.component.html","./src/app/core/core.module.ts","./src/app/core/errors/error-not-found/error-not-found.component.ts","./src/app/core/errors/error-not-found/error-not-found.component.html","./src/app/shared/filters/myform/myform.module.ts","./src/app/shared/modals/modals.module.ts","./src/app/services/authentication/auth.service.ts","./src/app/shared/myform/myinput/myinput.component.ts","./src/app/shared/myform/myinput/myinput.component.html","./src/app/shared/tables/mypagination/mypagination.component.ts","./src/app/shared/tables/mypagination/mypagination.component.html","./src/app/shared/toast-notifications/toast-notifications.component.ts","./src/app/shared/toast-notifications/toast-notifications.component.html","./src/app/app-routing.module.ts","./src/app/shared/filters/selected-filters/selected-filters.component.ts","./src/app/shared/filters/selected-filters/selected-filters.component.html","./src/app/shared/tables/mycelldisplay/mycelldisplay.component.ts","./src/app/shared/tables/mycelldisplay/mycelldisplay.component.html","./src/app/shared/filters/dropdown-filters/dropdown-filters.component.ts","./src/app/services/errors/errors.service.ts","./src/app/core/interceptors/interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modules',\n  templateUrl: './modules.component.html',\n  styleUrls: ['./modules.component.scss']\n})\nexport class ModulesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-container>\n  <!-- Left Side Bar -->\n  <!-- <app-side-bar></app-side-bar> -->\n  <app-navbar></app-navbar>\n  <!-- Main Content Wrapper -->\n  <div class=\"container-fluid main-content\">\n    <div class=\"container-xl container-md container-sm\">\n\n      <div class=\"row\">\n        <app-breadcrumb></app-breadcrumb>\n      </div>\n      <router-outlet></router-outlet>\n\n\n    </div>\n  </div>\n  <app-footer></app-footer>\n\n  \n  <app-toast-notifications></app-toast-notifications>\n  \n</ng-container>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { toJSDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar';\n\n@Component({\n  selector: 'app-mytd',\n  templateUrl: './mytd.component.html',\n  styleUrls: ['./mytd.component.scss']\n})\nexport class MytdComponent implements OnInit {\n  @Input() columnConfig: any\n  @Input() rowData: any = {}\n  @Input() isHeaderCell: boolean = false\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  get columnConfigDataType() {\n    return typeof this.columnConfig\n  }\n  get columnName(): any {\n    if (this.columnConfigDataType == \"string\")\n      return this.columnConfig\n    if (this.columnConfigDataType == \"object\")\n      return this.columnConfig.name\n    return \"\"\n  }\n\n  get dataSourceName(): any {\n    if (this.columnConfigDataType == \"object\" && this.columnConfig.hasOwnProperty(\"source\"))\n      return this.columnConfig.source\n    return this.columnName.replace(/ /g, \"_\").toLocaleLowerCase()\n  }\n\n  get cellValue(): any {\n    if (this.isHeaderCell)\n      return `${this.columnName[0].toLocaleUpperCase()}${this.columnName.substr(1, this.columnName.length - 1)}`\n    const parts = this.dataSourceName.split(\".\")\n    let value = `\\u2014`;\n    let tempValue = this.rowData;\n    if (this.columnConfigDataType == \"object\") {\n      if (this.columnConfig.hasOwnProperty(\"data\")) {\n        return this.columnConfig.data\n      }\n    }\n    for (let index in parts) {\n      const key = parts[index]\n      if (tempValue.hasOwnProperty(key)) {\n        tempValue = tempValue[key]\n\n        value = tempValue\n      }\n    }\n    return value\n\n  }\n  get arrayDisplayName() {\n    if (this.columnConfigDataType == \"object\" && this.columnConfig.hasOwnProperty(\"display_name\")) {\n      return this.columnConfig.display_name\n    }\n    return this.columnName\n  }\n  get isActions(): boolean {\n    if (this.isHeaderCell) return false\n    if (this.columnConfigDataType == \"object\") {\n      return this.columnConfig.hasOwnProperty(\"type\")\n    }\n    return false\n  }\n\n  get displayValue(): any {\n    if (this.isHeaderCell)\n      return `${this.columnName[0].toLocaleUpperCase()}${this.columnName.substr(1, this.columnName.length - 1)}`\n\n    if (this.columnConfigDataType == \"object\" && this.CellValueType == \"array\") {\n      //Check if there is type in config and pass as it is\n      if (this.columnConfig.hasOwnProperty(\"type\")) {\n        return this.cellValue\n      }\n\n      return this.cellValue.map((element: any) => {\n        if (element.hasOwnProperty(this.arrayDisplayName)) {\n          return element[this.arrayDisplayName]\n        } else {\n          return element\n        }\n        return `No field \"${this.arrayDisplayName}\"`\n      })\n    }\n    return this.cellValue\n  }\n\n  get CellValueType() {\n    const val = this.cellValue\n    const valType = typeof val\n    if (valType == \"object\") {\n      const isArray = Array.isArray(val);\n      if (isArray)\n        return \"array\"\n    }\n    return valType\n  }\n\n}\n","<app-mycelldisplay [rowData]=\"rowData\" [isActions]=\"isActions\" [displayValue]=\"displayValue\"></app-mycelldisplay>","import { Injectable, ViewChild,ElementRef,Renderer2, RendererFactory2 } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n@Injectable()\nexport class ModalsService {\n  private _renderer: Renderer2;\n  @ViewChild('modal-backdrop', { static: false }) divModalBackdrop!: ElementRef;\n  @ViewChild('modal-open', { static: false }) divModalOpen!: ElementRef;\n\n  confirmModalSubject: Subject<any> = new Subject<any>();\n\n  constructor(\n    rendererFactory:RendererFactory2\n  ) { \n    this._renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  createModalBackdropDiv() {\n    this.divModalBackdrop = this._renderer.createElement('div');\n    const divClasses = 'modal-backdrop fade show';\n    divClasses.split(' ').forEach((className: string) => {\n      this._renderer.addClass(this.divModalBackdrop, className);\n    });\n    \n    this._renderer.addClass(document.body, 'modal-open');\n\n    this._renderer.appendChild(document.body, this.divModalBackdrop);\n\n    return this.divModalBackdrop;\n  }\n\n  removeModalBackdropDiv() {\n\n    this._renderer.removeClass(document.body, 'modal-open');\n    this._renderer.removeAttribute(document.body, 'class');\n\n   return this._renderer.removeChild(document.body, this.divModalBackdrop);\n  }\n\n  setConfirmation(message:string, ok: () => void, cancel: () => void):any {\n    const _this = this;\n    this.createModalBackdropDiv();\n    this.confirmModalSubject.next({\n      type: 'prompt',\n      text: message,\n      ok(): any {\n        _this.confirmModalSubject.next();\n        _this.removeModalBackdropDiv();\n        ok();\n      },\n      cancel(): any {\n        _this.confirmModalSubject.next();\n        _this.removeModalBackdropDiv();\n        cancel();\n      }\n    });\n  }\n\n  confirm(message: string, ok: () => void, cancel: () => void ): any {\n    this.setConfirmation(message, ok, cancel);\n  }\n}\n","import { Component, OnInit, Input,EventEmitter, Output  } from '@angular/core';\nimport { FormItemService } from 'src/app/services/forms/form-item.service';\n\n@Component({\n  selector: 'app-card-dropdown',\n  templateUrl: './card-dropdown.component.html',\n  styleUrls: ['../card.component.scss']\n})\nexport class CardDropdownComponent implements OnInit {\n  @Input('title') title: string = '';\n  @Input() tabbed: boolean = false;\n  @Input() tabbedItems: any;\n\n  @Output()\n  selectedTab$: EventEmitter<any> = new EventEmitter()\n\n  constructor(\n    private _formService: FormItemService\n  ) { }\n\n  ngOnInit(): void {\n    console.log('IN CARD COMPONENT', this.tabbed);\n  }\n\n  selectedTab(value: string) {\n    console.log('THE SELECTED TAB', value);\n    this._formService.formDropdownSelectedTab(value);\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card__header has--dropdown\">\n        <ul class=\"nav nav-tabs\">\n            <li *ngFor=\"let item of tabbedItems; let i = index\" class=\"nav-item\">\n                <span class=\"nav-transparent\" [ngClass]=\"{'active': item.active }\"></span>\n                <a href=\"#{{item.prop}}\" data-toggle=\"tab\" class=\"nav-link\" (click)=\"selectedTab(item.prop)\"\n                    [ngClass]=\"{'active': item.active }\"\n                    style=\"color: #535252;  font-family: 'Avenir-Heavy',Helvetica,Arial,serif\">\n                    {{item.label | titlecase}}\n                </a>\n            </li>\n        </ul>\n    </div>\n    <div class=\"card__body\">\n        <div class=\"tab-content\">\n            <div *ngFor=\"let item of tabbedItems; let j = index\" class=\"tab-pane container\"\n                [ngClass]=\"{'active': item.active}\" id=\"{{item.prop}}\">\n                <ng-content *ngIf=\"item.active\"></ng-content>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, VERSION } from '@angular/core';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.scss'],\n})\nexport class AuthenticationComponent implements OnInit {\n  public version = VERSION;\n  constructor() { }\n\n  ngOnInit(): void { }\n}\n","<div class=\"top-padding\">\n  <ng-container>\n    <router-outlet></router-outlet>\n    <app-footer></app-footer>\n  </ng-container>\n</div>","<ul class=\"list-group\">\n    <li class=\"list-group-item d-flex justify-content-between align-items-center list-group-title\">\n        {{title}}\n    </li>\n    <li *ngFor=\"let list of lists\" [routerLink]=\"[list.url]\" [attr.data-active]=\"list.active\"\n        class=\"list-group-item d-flex justify-content-between align-items-center\">\n        {{list.name}}\n        <span class=\"badge badge-pill\"><i [attr.data-active]=\"list.active\"\n                class=\"fas fa-chevron-right right-icon-config\"></i></span>\n    </li>\n</ul>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.scss']\n})\nexport class SideMenuComponent implements OnInit {\n\n  @Input() title: string = '';\n  @Input() lists: any;\n  @Input() active: string = '';\n  \n  constructor() { }\n\n  ngOnInit(): void {\n    console.log('IN SIDE MENU', this.lists);\n    this.lists.map((list:any) => {\n      list.active = list.name === this.active;\n    })\n    \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule ,FormsModule} from '@angular/forms';\n\nimport { MyformComponent } from './myform.component';\nimport { MyinputComponent } from './myinput/myinput.component';\nimport { CardComponent } from '../card/card.component';\nimport { CardDropdownComponent } from '../card/card-dropdown/card-dropdown.component';\nimport { ModalsModule } from '../modals/modals.module';\n// import { MultiSelectModule } from '../ng-multi-select/multi-select.module';\n\n@NgModule({\n  declarations: [\n    MyformComponent,\n    MyinputComponent,\n    CardComponent,\n    CardDropdownComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    ModalsModule,\n    // MultiSelectModule,\n    FormsModule\n  ],\n  exports: [\n    MyformComponent,\n    MyinputComponent,\n    CardComponent,\n    CardDropdownComponent\n  ]\n})\nexport class MyformModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Event, Router } from '@angular/router';\nimport { distinctUntilChanged, filter, first } from 'rxjs/operators';\n\nexport interface IBreadCrumb {\n  label: string;\n  url: string;\n}\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit, OnDestroy {\n  public breadcrumbs: IBreadCrumb[];\n  private breadcrumbsObserver : any;\n\n  constructor(\n    private _route: Router,\n    private _activatedRoute: ActivatedRoute\n  ) { \n    this.breadcrumbs = this.buildBreadCrumb(this._activatedRoute.root);\n  }\n\n  ngOnInit(): void {\n    this.breadcrumbsObserver = this._route.events.pipe( \n      filter((event: Event) => event instanceof NavigationEnd),\n      distinctUntilChanged(),\n    ).subscribe(() => {\n      this.breadcrumbs = this.buildBreadCrumb(this._activatedRoute.root);\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.breadcrumbsObserver.unsubscribe();\n  }\n\n  /**\n   * Recursively build breadcrumb according to the activated route.\n   * @param route \n   * @param url \n   * @param breadcrumbs\n   */\n  buildBreadCrumb(route: ActivatedRoute, url: string = '', breadcrumbs: IBreadCrumb[] = []): IBreadCrumb[] {\n    //If no routeConfig available we're on root path\n    let label = route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '';\n    let path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n\n    //if the route is dynamic route such as ':id' or ':slug' remove it\n    const lastRoutePath = path?.split('/').pop();\n    const isDynamicRoute = lastRoutePath?.startsWith(':');\n\n    if (isDynamicRoute && !!route.snapshot) {\n      const paramName = lastRoutePath?.split(':')[1];\n      path = path?.replace(lastRoutePath!, route.snapshot.params[paramName!]);\n      label = route.snapshot.params[paramName!];\n    }\n\n    //in the routeConfig the complete path is not available so we rebuild it each time\n    const nextUrl = path ? `${url}/${path}` : url;\n\n    const breadcrumb: IBreadCrumb = {\n      label: label,\n      url: nextUrl\n    };\n\n    //only add route with non-empty label\n    const newBreadcrumbs = breadcrumb.label ? [...breadcrumbs, breadcrumb] : [ ... breadcrumbs];\n\n    if (route.firstChild) {\n      // if we are not on our current path yet there will be more children to look after to build our breadcrumb\n      return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n    }\n    return newBreadcrumbs;\n  }\n}\n","<ol class=\"breadcrumb\">\n    <li *ngFor=\"let breadcrumb of breadcrumbs\">\n        <span [routerLink]=\"breadcrumb.url\" routerLinkActive=\"router-link-active\">\n            {{breadcrumb.label}}\n        </span>\n    </li>\n</ol>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n//TODO -> Pull the environments from a dotenv for security purposes\nexport const environment = {\n  production: false,\n  APIEndpoint: 'https://api.spark.sisitech.dev/',\n  APIv1Endpoint: 'https://api.spark.sisitech.dev/api/v1/',\n  APIClientID : 'fbaPXGrD6wewVEqoOkJfvierIrYbnROPXMa8CDv5'\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ModalsComponent } from '../basic/modals.component';\nimport { ModalsService } from '../modals.service';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss']\n})\nexport class ConfirmDialogComponent extends ModalsComponent implements OnInit, OnDestroy {\n  @Input() okButton: string = 'OK';\n  @Input() hasCancelButton: boolean = true;\n  \n  confirm_message:any;\n  confirmModalSubscription:any;\n\n  constructor(\n    private _modalService: ModalsService\n  ) {\n    super();\n   }\n\n  ngOnInit(): void {\n    this.confirmModalSubscription = this._modalService.confirmModalSubject.subscribe(message => {\n      console.log(\"SHOULD OPEN THE MODAL\", message);\n      this.confirm_message = message;\n     })\n  }\n\n  ngOnDestroy(): void {\n    if (this.confirmModalSubscription) {\n      this.confirmModalSubscription.unsubscribe();\n    }\n  }\n\n}\n","<div *ngIf=\"confirm_message\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" [ngClass]=\"{'show': confirm_message }\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n        <div class=\"modal-body\">\n            <div class=\"confirm__modal\">\n                <button type=\"button\" class=\"close\" (click)=\"confirm_message.cancel()\">&times;</button>\n                <span *ngIf=\"confirm_message.type == 'prompt'\" class=\"confirm__message\">{{confirm_message.text}}</span>\n                <div class=\"confirm__buttons\">\n                    <button type=\"button\" *ngIf=\"hasCancelButton\" class=\"btn btn-secondary cancel\" (click)=\"confirm_message.cancel()\">Cancel</button>\n                    <button type=\"button\" class=\"btn btn-secondary confirm\" (click)=\"confirm_message.ok()\">{{okButton}}</button>\n                </div>\n            </div>\n        </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\nimport { StorageService } from 'src/app/services';\n\nconst clientId = environment.APIClientID;\nconst endpoint = environment.APIEndpoint;\nconst endpointV1 = environment.APIv1Endpoint;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  user: any;\n\n  constructor(\n    private _http: HttpClient,\n    private _storageService: StorageService\n  ) {}\n\n  userProfile(): Observable<any> {\n    return this._http.get<any>(endpointV1 + 'users/me').pipe(\n      map(res => {\n        console.log('THE USER PROFILE', res);\n        this._storageService.setItem('userDetails', JSON.stringify(res));\n        return res;\n      })\n    );\n  }\n\n  editUserProfile(data: any) {\n    return this._http.patch(endpointV1 + 'users/me', data).pipe(\n      map(res => {\n        this._storageService.setItem('userDetails', JSON.stringify(res));\n        return res;\n      })\n    );\n  }\n\n  uploadUserImage(data: any) {\n    // const options = {\n    //   params: new HttpParams(),\n    //   reportProgress: true,\n    // }\n    return this._http.patch<any>(endpointV1 + 'users/me/profile', data).pipe(\n      map(res => {\n        // localStorage.setItem('userDetails', JSON.stringify(res));\n        this._storageService.setItem('userDetails', JSON.stringify(res));\n        return res;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageService {\n  private storageSub = new Subject<String>();\n\n  watchStorage(): Observable<any> {\n    return this.storageSub.asObservable();\n  }\n\n  setItem(key: string, data: any) {\n    localStorage.setItem(key, data);\n    this.storageSub.next(key);\n  }\n\n  getItem(key: any) {\n    return localStorage.getItem(key);\n  }\n\n  removeItem(key: any) {\n    localStorage.removeItem(key);\n    this.storageSub.next(key);\n  }\n\n  constructor() {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n  @Input('title') title: string = '';\n  @Input() tabbed: boolean = false;\n  @Input() tabbedItems: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <h6>{{ title }}</h6>\n    </div>\n    <div class=\"card-body\">\n        <ng-content></ng-content>\n    </div>\n</div>","import { Component, OnInit, forwardRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-textarea-with-count',\n  templateUrl: './textarea-with-count.component.html',\n  styleUrls: ['./textarea-with-count.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextareaWithCountComponent),\n      multi: true\n    }]\n})\nexport class TextareaWithCountComponent implements OnInit, ControlValueAccessor {\n\n  count: number = 0\n  fistTime = true\n  areaCountFormGroup = new FormGroup({\n    area_count: new FormControl('', Validators.required)\n  })\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.onChanges()\n  }\n  onChange: any = () => { }\n  onTouch: any = () => {\n    console.log(\"touched...\")\n  }\n  writeValue(obj: any): void {\n    this.areaCountFormGroup.patchValue({\n      area_count: obj\n    })\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn\n  }\n\n  onChanges(): void {\n    this.areaCountFormGroup.valueChanges.pipe(\n      debounceTime(500),\n      distinctUntilChanged()\n    ).subscribe(elem => {\n      if (!this.fistTime) {\n        this.onChange(elem.area_count)\n        let count = 0\n        if (elem.area_count) {\n          count = elem.area_count.split(',').filter((e: any) => e != \"\").length\n        }\n        this.count = count\n      }\n      this.fistTime = false\n\n    })\n  }\n}\n","<form [formGroup]=\"areaCountFormGroup\">\n    <div class=\"row\">\n        <textarea class=\"form-control form-control-lg opt-value\" rows=\"4\" cols=\"50\" class=\"form-control\"\n            formControlName=\"area_count\" (blur)=\"onTouch()\"></textarea>\n    </div>\n    <div class=\"row pt-1\">\n        <small><b>{{ count }}</b> items</small>\n    </div>\n</form>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastNotificationsComponent } from './toast-notifications.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastNotificationsService } from './toast-notifications.service';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n\n@NgModule({\n  declarations: [ToastNotificationsComponent],\n  imports: [\n    CommonModule,\n    NgbModule,\n    FontAwesomeModule\n  ],\n  exports: [\n    ToastNotificationsComponent\n  ],\n  providers: []\n})\nexport class ToastNotificationsModule { }\n","\nenum InputType {\n    integer,\n    datetime,\n    string\n}\n\nclass MyInputModel {\n    name: String;\n    type: string;\n    required: boolean;\n    read_only: boolean;\n    options: any\n    constructor(\n        name: String,\n        type?: string,\n        required?: boolean,\n        read_only?: boolean,\n        options?: any\n    ) {\n        this.name = name\n        this.options = options || {}\n        this.type = type || \"\"\n        this.required = required || false\n        this.read_only = read_only || false\n    }\n\n    static fromJson(name: string, obj: any): MyInputModel {\n        return new MyInputModel(name, obj.type, obj.requied,\n            obj.read_only, obj.choices || {});\n    }\n}\n\n\nexport {\n    InputType,\n    MyInputModel\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { tap } from 'rxjs/internal/operators/tap';\nimport { ToastNotificationsService } from 'src/app/shared/toast-notifications/toast-notifications.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FormItemService {\n  selectedTab: string = '';\n  selectedTabChange: Subject<string> = new Subject<string>();\n  // selectedTab: BehaviorSubject<string> | undefined;\n\n  constructor(\n    private _http: HttpClient,\n    private _toastService: ToastNotificationsService\n  ) { \n    // this.selectedTab = new BehaviorSubject(this.tab);\n    // this.selectedTabChange.subscribe((value) => {\n    //   this.selectedTab = value;\n    // })\n  }\n\n  postForm(isNew: boolean, data: any) {\n    let request: Observable<any>;\n    if (isNew) {\n      request = this._http.post<any>(data.url, data.formData)\n        .pipe(\n          tap(data => {\n            this._toastService.showToast(\"Successfully added Record\", \"success\");\n          }),\n          catchError((err, caught) => {\n            this._toastService.showToast(\"Error Posting Record\", \"danger\");\n            return Observable.throw(err);\n          })\n        );\n    } else {\n      request = this._http.patch<any>(data.url, data.formData)\n      .pipe(\n        tap(data => {\n          this._toastService.showToast(\"Successfully edited Record\", \"success\");\n        }),\n        catchError((err, caught) => {\n          this._toastService.showToast(\"Error editing Record\", \"danger\");\n          return Observable.throw(err);\n        })\n      );\n    }\n    return request\n  }\n\n  formDropdownSelectedTab(data: string) {\n    console.log('THE SELECTED TAB IN SERVICE', data);\n    this.selectedTabChange.next(data);\n  }\n\n  getDropdownValues(url:string){\n    return this._http.get<any>(url);\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MY_EXAMPLE_OPTIONS_DATA } from './myfields';\nimport { MyInputModel, InputType } from './myinput/model';\nimport { FormBuilder, FormGroup, FormControl, AbstractControl, Validators } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\nimport { from } from 'rxjs';\n@Component({\n  selector: 'app-myform',\n  templateUrl: './myform.component.html',\n  styleUrls: ['./myform.component.scss']\n})\nexport class MyformComponent implements OnInit {\n\n  @Input()\n  formGroup: FormGroup = new FormGroup({});\n\n  @Input()\n  formItems: any\n\n  @Input()\n  extraParams: any = {}\n\n  @Output()\n  onValidatedData = new EventEmitter<any>();\n\n  @Output()\n  onPostedData = new EventEmitter<any>();\n\n  @Output()\n  isLoading$ = new EventEmitter<boolean>();\n\n  @Input()\n  isValidationOnly: boolean = false\n\n  @Input()\n  url: string = \"\"\n  @Input()\n  formGroupOrder!: Array<Array<string>>;\n\n  @Input() loading: boolean = false;\n\n  initial: boolean = false\n  formErrors: any = {}\n  detailErrors: any = []\n  isLoading: boolean = false;\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient\n\n  ) {\n  }\n\n  ngOnChanges() {\n    if (this.formGroupOrder && !this.initial) {\n      this.initial = false\n      const fields = this.formItems.actions.POST;\n      const possibleFields = this.formGroupOrder.reduce((acc, val) => acc.concat(val), [])\n\n      for (var key in fields) {\n        const field = fields[key];\n        const myinputfield = MyInputModel.fromJson(key, field);\n        if (field.read_only || !possibleFields.includes(key)) {\n          continue\n        }\n\n        const defaultField = field.type == \"boolean\" ? false : \"\"\n        this.formGroup.addControl(\n          key, new FormControl(defaultField, [\n          ])\n        )\n        const fieldcontrol = this.formGroup.controls[key]\n        const validators = []\n\n        if (field.required) {\n          validators.push(Validators.required)\n        }\n\n        if (field.max_length) {\n          validators.push(Validators.maxLength(field.max_length))\n        }\n\n        if (validators.length > 0) {\n          fieldcontrol.setValidators(validators)\n        }\n      }\n    }\n  }\n\n  getDescriptionObject(formControlName: string) {\n    return this.formItems.actions.POST[formControlName];\n  }\n\n  getFieldNameErros(formControlName: string) {\n    return this.formErrors[formControlName]\n  }\n\n  ngOnInit(): void {\n  }\n\n  showLoader(status: boolean) {\n    this.isLoading = status\n    this.isLoading$.emit(status)\n  }\n\n  dataReceived() {\n    this.detailErrors = []\n    if (true) {\n      const data = { ...this.formGroup.value, ...this.extraParams }\n      if (this.isValidationOnly) {\n        this.onValidatedData.emit(data)\n      } else {\n        this.sendDataHttp(data)\n      }\n    } else { }\n  }\n\n  get myFormValid(): boolean {\n    return this.formGroup.valid\n  }\n\n  sendDataHttp(data: any) {\n    this.showLoader(true)\n    this.formErrors = []\n  }\n\n  getControl(name: string): AbstractControl {\n    return this.formGroup.get(name) || new FormControl()\n  }\n\n  resetForm() {\n    this.formGroup.reset();\n  }\n\n  bulkOptions() { }\n\n}\n","<div class=\"container\">\n    <form class=\"\" [formGroup]=\"formGroup\" (ngSubmit)=\"dataReceived()\">\n        <span *ngFor=\"let error of detailErrors\" class=\"text-danger\">\n            {{error}} <br>\n        </span>\n        <div>\n            <div *ngFor=\"let item of formGroupOrder;let i=index;\">\n                <div class=\"row\">\n                    <div *ngFor=\"let field of item;let j=index;\" class=\"col-sm-{{12/item.length}}\">\n                        <app-myinput [formErrors]=\"formErrors\" [data]=\"getDescriptionObject(field)\" [form]=\"formGroup\"\n                            formControName=\"{{field}}\">\n                        </app-myinput>\n                    </div>\n                </div>\n            </div>\n            <br>\n        </div>\n\n        <div class=\"spark-dynamic-forms__button-wrapper\">\n            <button type=\"button\" (click)=\"resetForm()\"\n                class=\"btn btn-light  btn-sm mb-3 lift spark-dynamic-forms__clear\">Clear</button>\n            <button type=\"submit\" class=\"btn btn-primary mb-3 lift spark-dynamic-forms__submit\">\n                <span>\n                    {{isLoading?'Loading...': 'Add Options'}}\n                </span>\n            </button>\n        </div>\n    </form>\n</div>","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { switchMap, catchError } from 'rxjs/operators';\nimport { FiltersService } from '../filters/filters.service';\nimport { ToastNotificationsService } from '../toast-notifications/toast-notifications.service';\n\nconst endpointV1 = environment.APIv1Endpoint;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TablesService {\n\n  actionsEvent$: EventEmitter<any> = new EventEmitter();\n  deletedItem$: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private _http: HttpClient,\n    private _filtersService: FiltersService,\n    private _toastService: ToastNotificationsService\n  ) {\n\n  }\n\n  getList(typeUrl: string, page_size: number, page: number, filters: Array<any>, searchInput: string): Observable<any> {\n\n    //const filterOpt = typeof filters !== 'undefined' && filters.length ? this.getFilters(filters) : '';\n    const searchName = typeof searchInput !== undefined && searchInput !== null ? searchInput : null;\n\n    return this._http.get<any>(endpointV1 + `${typeUrl}/?page_size=${page_size}&page=${page}&${filters}&name=${searchName}`);\n  }\n\n  emitAction(name: string, data: any) {\n    console.log('THE NAME', name, 'THE DATA', data);\n    this.actionsEvent$.emit({ name: name, data: data })\n  }\n\n  //TO REMOVE\n  // getFilters(filters:any) {\n  //   let filterOpt: Array<any> = [];\n  //   filters.map((filter:any) => {\n  //     filterOpt.push(filter.item_prop);\n  //   });\n  //   return filterOpt.join(\"&\");\n  // }\n\n  delete(data: any, typeUrl: string) {\n    //TODO -> Send an alert if delete not possible\n    return this._http.delete<any>(`${endpointV1}${typeUrl}/${data.id}`).pipe(\n      switchMap(async () => {\n        this.deletedItem$.emit(data)\n        this._toastService.showToast(\"Successfully deleted record\", 'info')\n      }\n      ),\n      catchError((err, caught) => {\n        this._toastService.showToast(\"Error deleting record\", 'danger')\n        return Observable.throw(err)\n      })\n    );\n  }\n}\n","/** Angular imports */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n/** Custom modules */\nimport { ModalsModule } from './modals/modals.module';\nimport { MyformModule } from './myform/myform.module';\nimport { ToastNotificationsModule } from './toast-notifications/toast-notifications.module';\n\n/** Components */\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\nimport { TablesModule } from './tables/tables.module';\nimport { AddButtonComponent } from './add-button/add-button.component';\nimport { FiltersModule } from './filters/filters.module';\nimport { SideMenuComponent } from './side-menu/side-menu.component';\nimport { TextareaWithCountComponent } from './textarea-with-count/textarea-with-count.component';\n// import { CardComponent } from './card/card.component'\n// import { CardDropdownComponent } from './card/card-dropdown/card-dropdown.component';\n\n@NgModule({\n  declarations: [\n    BreadcrumbComponent, AddButtonComponent,\n    SideMenuComponent, TextareaWithCountComponent ,\n\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    ModalsModule,\n    MyformModule,\n    TablesModule,\n    FiltersModule,\n    ToastNotificationsModule\n  ],\n  exports: [\n    FormsModule,\n    MyformModule,\n    ReactiveFormsModule,\n    ModalsModule,\n    TablesModule,\n    FiltersModule,\n    ToastNotificationsModule,\n    BreadcrumbComponent,\n    AddButtonComponent,\n    SideMenuComponent,\n    TextareaWithCountComponent\n  ],\n})\nexport class SharedModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core'\nimport { FormBuilder, FormGroup } from '@angular/forms'\nimport { debounceTime, switchMap, take } from 'rxjs/operators'\nimport { FiltersService } from '../filters/filters.service'\n\nimport { TablesService } from './tables.service'\n\n@Component({\n  selector: 'app-tables',\n  templateUrl: './tables.component.html',\n  styleUrls: ['./tables.component.scss'],\n})\nexport class TablesComponent implements OnInit {\n  public searchForm!: FormGroup\n  public filterForm!: FormGroup\n\n  _headers: Array<any> = []\n  selectedFilterOptions: Array<any> = []\n\n\n  @Input() filterFormItems: any\n\n  @Input() hasSideMenu: boolean = false\n\n  @Input()\n  listTypeUrl!: string\n\n  @Input() tableFilters: Array<any> = []\n\n  @Input()\n  page_size: number = 10\n\n  @Input()\n  showNumbering: boolean = true\n\n  @Output()\n  actionsEvent: EventEmitter<any> = new EventEmitter()\n\n  selectedFiltersSubscriber: any\n\n  @Input()\n  set headers(value) {\n    this._headers = value\n    this.tableData = Array.from({ length: this.page_size }, (_, x) => x).map(h => {\n      return { data: \"\" }\n    })\n  }\n\n  get headers() {\n    return this._headers\n  }\n\n  page: number = 1\n  tableData: any[] = []\n  loading: boolean = false\n  results: any[] = []\n  resultsMeta: any\n  actionsSubscription: any\n  deleteSubscription: any\n  liveSearchData: string = ''\n\n  constructor(\n    private _tableService: TablesService,\n    private _filterService: FiltersService,\n    private fb: FormBuilder,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.searchForm = this.fb.group({\n      search: '',\n    })\n    this.getTableData()\n    this.actionsSubscription = this._tableService.actionsEvent$.subscribe(event => {\n      this.actionsEvent.emit(event)\n    })\n\n    this.deleteSubscription = this._tableService.deletedItem$.subscribe(item => {\n      console.log('THE DELETED ITEM', item)\n      if (this.resultsMeta.count > this.page_size && this.resultsMeta.count !== this.page_size) {\n        this.getTableData()\n      } else {\n        const ind = this.results.indexOf(item)\n        this.results.splice(ind, 1)\n        this.resultsMeta.count = this.results.length\n      }\n    })\n\n    this.selectedFiltersSubscriber = this._filterService.getFilters$.subscribe(data => {\n      console.log('IN TABLE SERVICE', data)\n      this.selectedFilterOptions = data\n      this.getTableData()\n    })\n  }\n\n  ngOnDestroy() {\n    const subscriptions = [this.actionsSubscription, this.deleteSubscription, this.selectedFiltersSubscriber]\n    subscriptions.forEach(subs => {\n      if (subs) {\n        subs.unsubscribe()\n      }\n    })\n  }\n\n  liveTableSearch(value: string): void {\n    this.searchForm.get('search')?.valueChanges.pipe(\n      debounceTime(500),\n      switchMap(async (data) => {\n        this.getTableData(data.toLowerCase().trim())\n      }))\n      .pipe(take(1))\n      .subscribe(() => { })\n  }\n\n  clearLiveTableSearch() {\n    this.liveSearchData = ''\n    return this.searchForm.reset()\n  }\n\n  setLoaderStatus(status: boolean): void {\n    this.loading = status\n  }\n  onPageSelect(page: number) {\n    this.page = page\n    this.getTableData()\n  }\n  get tableHeaders(): any[] {\n    return this.headers\n  }\n\n  tableMetaData(meta: any): void {\n    if (meta.hasOwnProperty(\"next\")) {\n      this.resultsMeta = {\n        next: meta.next,\n        prev: meta.previous,\n        count: meta.count\n      }\n    }\n  }\n\n  getTableData(data: any = '') {\n    this.setLoaderStatus(true)\n    this._tableService.getList(this.listTypeUrl, this.page_size, this.page, this.selectedFilterOptions, data)\n      .pipe(take(1))\n      .subscribe((res) => {\n\n        console.log(data)\n        console.log(res)\n\n        this.setLoaderStatus(false)\n        this.results = res.results\n        this.tableMetaData(res)\n\n      }, error => {\n        this.setLoaderStatus(false)\n      })\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <!-- todo: add filters -->\n    <div class=\"search-section spark-dynamic-forms__bulk-wrapper mb-3\">\n      <form [formGroup]=\"searchForm\" class=\"form-inline\">\n        <input name=\"searchTableInput\" class=\"form-control mr-2 search-input\" aria-label=\"Table list\"\n          formControlName=\"search\" (ngModelChange)=\"liveTableSearch($event)\" type=\"text\"\n          placeholder=\"{{!loading ? 'Search item' : 'Searching...'}}\" />\n\n        <button type=\"button\" (click)=\"clearLiveTableSearch()\" class=\"btn btn-light btn-sm mr-3\"><i\n            class=\"glyphicon glyphicon-remove\"></i>Clear</button>\n      </form>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"table-responsive\">\n      <table class=\"table\">\n        <thead>\n          <th *ngIf=\"showNumbering\">#</th>\n          <th *ngFor=\"let title of tableHeaders;let i = index\">\n            <app-mytd [columnConfig]=\"title\" [isHeaderCell]=true></app-mytd>\n          </th>\n        </thead>\n        <tbody *ngIf=\"results.length && !loading\">\n          <tr *ngFor=\"let row of results;let j=index; \">\n            <th *ngIf=\"showNumbering\">{{(j+1)+(page_size*(page-1))}}</th>\n            <td *ngFor=\"let header of tableHeaders; let j = index;\">\n              <app-mytd [columnConfig]=\"header\" [rowData]=\"row\"></app-mytd>\n            </td>\n          </tr>\n        </tbody>\n        <tbody *ngIf=\"loading\">\n          <tr *ngFor=\"let value of tableData\">\n            <th *ngIf=\"showNumbering\"><span class=\"linear-background\"></span></th>\n            <td *ngFor=\"let value of tableHeaders\">\n              <span class=\"linear-background\"></span>\n            </td>\n          </tr>\n        </tbody>\n        <tbody *ngIf=\"results.length < 1 && !loading\">\n          <td class=\"pt-4\">No data available</td>\n        </tbody>\n      </table>\n    </div>\n    <app-mypagination [selectedPage]=\"page\" [pageSize]=\"page_size\" (onPageSelect)=\"onPageSelect($event)\"\n      [resultsMeta]=\"resultsMeta\" *ngIf=\"!loading\"></app-mypagination>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lock-screen',\n  templateUrl: './lock-screen.component.html',\n  styleUrls: ['./lock-screen.component.scss']\n})\nexport class LockScreenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>lock-screen works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  username: string = 'User';\n  constructor(\n    private _route: Router,\n    private _authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.getUserDetails();\n  }\n\n  getUserDetails() {\n    this.username = this._authService.getUserProfile().username;\n  }\n  signOut() {\n    this._authService.signOut();\n  }\n\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container\">\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerMainMenu\"\n            aria-controls=\"navbarTogglerMainMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"navbar-brand\">\n            <a [routerLink]=\"['/home']\">\n                <img class=\"navbar-logo\" src=\"../../../../assets/img/logo/spark-logo-trans-bg.png\">\n            </a>\n        </div>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarTogglerMainMenu\">\n            <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item pr-3 active\">\n                    <a class=\"nav-link\" [routerLink]=\"['/']\">Dashboard <span class=\"sr-only\">(current)</span></a>\n                </li>\n                <li class=\"nav-item pr-3 dropdown\">\n                    <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Administration\n                    </a>\n                    <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                        <a class=\"dropdown-item\" [routerLink]=\"['/accounts']\">Accounts</a>\n                        <a class=\"dropdown-item\" [routerLink]=\"['/suppliers']\">Suppliers</a>\n                        <a class=\"dropdown-item\" [routerLink]=\"['/warehouse/list']\">Warehouses</a>\n                        <a class=\"dropdown-item\" [routerLink]=\"['/stockroom/list']\">Stockrooms</a>\n                        <div class=\"dropdown-divider\"></div>\n                <li class=\"dropdown-sub-menu\">\n                    <a class=\"dropdown-item\" href=\"#\">Configurations</a>\n                    <ul class=\"dropdown-menu\">\n                        <li><a [routerLink]=\"['/configs/list-item-type']\">Item Type</a></li>\n                        <li><a [routerLink]=\"['/configs/list-item-configs']\">Item</a></li>\n                        <li><a [routerLink]=\"['/configs/list-box-config']\">Box</a></li>\n                        <li><a [routerLink]=\"['/configs/list-kit-config']\">Kit</a></li>\n                        <li><a [routerLink]=\"['/configs/list-pay-go-providers']\">Pay Go\n                                Providers</a></li>\n                        <li><a [routerLink]=\"['/configs/list-price-groups']\">Price Group</a></li>\n                        <li><a [routerLink]=\"['/configs/list-product-configs']\">Product</a></li>\n\n                    </ul>\n                </li>\n        </div>\n        </li>\n        <li class=\"nav-item pr-3 dropdown\">\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n                aria-haspopup=\"true\" aria-expanded=\"false\">\n                Inventory\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <a class=\"dropdown-item\" href=\"#\">Products</a>\n                <a class=\"dropdown-item\" [routerLink]=\"['/list-boxes']\">Boxes</a>\n                <a class=\"dropdown-item\" [routerLink]=\"['/inventory/list']\">Items</a>\n                <a class=\"dropdown-item\" [routerLink]=\"['/products/list']\">Products</a>\n                <div class=\"dropdown-divider\"></div>\n                <a class=\"dropdown-item\" [routerLink]=\"['/inventory/move']\">Move Stock</a>\n            </div>\n        </li>\n        <li class=\"nav-item pr-3\">\n            <a class=\"nav-link\" [routerLink]=\"['/customers/list']\">Customers</a>\n        </li>\n        <li class=\"nav-item pr-3\">\n            <a class=\"nav-link disabled\" href=\"#\">Payments</a>\n        </li>\n        </ul>\n        <div class=\"form-inline my-2 my-lg-0\">\n            <li class=\"nav-item dropdown form-inline my-2 my-lg-0 user-profile-wrapper\">\n                <a class=\"nav-link dropdown-toggle user-profile\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\n                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    {{username}}\n                </a>\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                    <a (click)=\"signOut()\" class=\"dropdown-item\" href=\"#\">Sign out</a>\n                </div>\n            </li>\n        </div>\n    </div>\n    </div>\n</nav>","import { OnInit, Component } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { AuthService, ErrorsService, StorageService } from './services';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  private ngUnsubscribe = new Subject();\n  private routerSubscription: any;\n  title = 'sparkweb';\n\n  constructor(\n    private _cookieService: CookieService,\n    private _errorsService: ErrorsService,\n    private _storageService: StorageService,\n    private _authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //const currentUserId = JSON.parse(this._storageService.getItem('userDetails') || '{}');\n\n    const itemsStored = ['token', 'userDetails'];\n\n    window.addEventListener('storage', function () {\n      Object.values(localStorage).forEach(item => {\n        let storageItem = Object.keys(JSON.parse(item));\n        for (let i = 0; i < storageItem.length; i++) {\n          if (itemsStored.indexOf(storageItem[i]) > -1) {\n            continue;\n          } else {\n            localStorage.clear();\n            window.location.href = `${window.location.protocol}//${window.location.host}/signin`;\n            break;\n          }\n        }\n      });\n    });\n\n    if (\n      this._cookieService.get('rememberMe') ||\n      localStorage.getItem('rememberMe')\n    ) {\n      this.refreshToken();\n    }\n  }\n\n  private refreshToken() {\n    const tokenItems =\n      JSON.parse(this._storageService.getItem('token') || '{}') || null;\n\n    if (\n      (tokenItems !== undefined && tokenItems !== null) ||\n      tokenItems !== {}\n    ) {\n      if (Date.now() > tokenItems.refreshTokenTime) {\n        let params = {\n          token: tokenItems.token,\n          refresh_token: tokenItems.tokenRefresh,\n        };\n\n        this._authService.refreshToken(params);\n      }\n    }\n  }\n\n  private initializeErrors() {\n    this._errorsService\n      .getErrors()\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(errors => {\n        console.log('STATUS ERRORS: Show through the modal service', errors);\n\n        //TODO -> Create the modal Service\n        // const modalRef = this._modalService.open(PromptComponent);\n\n        // modalRef.componentInstance.message = errors.toString();\n        // modalRef.componentInstance.button = 'Confirm';\n        // modalRef.componentInstance.title = 'STATUS ERROR';\n      });\n  }\n\n  ngOnDestroy() {\n    this.routerSubscription.unsubscribe();\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","<router-outlet></router-outlet>","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { TablesService } from '../../tables/tables.service';\nimport { FiltersService } from '../filters.service';\n\n@Component({\n  selector: 'app-submit-filters',\n  templateUrl: './submit-filters.component.html',\n  styleUrls: ['../filters.component.scss']\n})\nexport class SubmitFiltersComponent implements OnInit, OnDestroy {\n  @Input() filterUrl: string = '';\n  private selectedFilters: any;\n  private urlToGetFilterData: string = '';\n  public isDisabled: boolean = true;\n  public selectedFiltersSubscriber: any;\n\n  constructor(\n    private _filterService: FiltersService,\n    private _tableService: TablesService\n  ) { }\n\n  ngOnInit(): void {\n    this.selectedFiltersSubscriber = this._filterService.submitFilters$.subscribe(data => {\n\n      data.data === undefined || !data.data.length ? this.isDisabled = true : this.isDisabled = false;\n\n      if (data) {\n        this.selectedFilters = data.data;\n        this.urlToGetFilterData = data.url;\n      } \n    })\n  }\n\n  submitFilters() {\n    if(this.selectedFilters === undefined && this.urlToGetFilterData === undefined ) {\n      return;\n    }\n    \n    let filters:any = [];\n    let data = this.selectedFilters;\n    const url = this.urlToGetFilterData\n    \n    data.map((item:any) => {\n      let arr = {}\n      let filterItem = `${item[0]}=${item[1]}` \n      arr = filterItem;\n      filters.push(arr);\n    });\n\n    data = filters.join(\"&\");\n\n    this._filterService.getJoinedFilters(data);\n    \n  }\n\n  ngOnDestroy(): void {\n    this.selectedFiltersSubscriber.unsubscribe();\n  }\n\n}\n","<div class=\"row filters__button-wrapper\">\n    <button (click)=\"submitFilters()\" [disabled]=\"isDisabled\"\n        class=\"btn btn-primary btn-sm spark-dynamic-forms__bulk-btn\">\n        Filter Records\n    </button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  public date:any;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.date = new Date().getFullYear();\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nconst endpointV1 = \"https://api.spark.sisitech.dev/api/v1/\";\nconst headers = {\n  'Content-Type': 'application/json',\n  Accept: 'application/json',\n  Authorization: `Bearer micha`,\n}\n\n@Injectable()\nexport class FiltersService {\n  submitFilters$: EventEmitter<any> = new EventEmitter();\n  getFilters$: EventEmitter<any> = new EventEmitter();\n  \n  constructor(\n    private _http: HttpClient,\n  ) { }\n\n  submitSelectedFilters(data:any, url:string) {\n    this.submitFilters$.emit({data: data, url:url})\n  }\n\n  getFilters(data: any, url: string):Observable<any> {\n    return this._http.get<any>(endpointV1 + `${url}?${data}`, { headers: headers });\n  }\n\n  getJoinedFilters(data: any) {\n    this.getFilters$.emit(data);\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { DropdownFiltersComponent } from '../dropdown-filters/dropdown-filters.component';\n\n@Component({\n  selector: 'app-collapsible-filters',\n  templateUrl: './collapsible-filters.component.html',\n  styleUrls: ['../filters.component.scss']\n})\nexport class CollapsibleFiltersComponent extends DropdownFiltersComponent {\n  \n}\n","<!-- <app-filters [url]=\"url\" [formItems]=\"formItems\" [formGroupOrder]=\"formGroupOrder\" [isInDropdown]=\"false\"></app-filters> -->\n<div class=\"filters__collapsible-wrapper\">\n    <button type=\"button\" class=\"btn btn-light dropdown-toggle filter-options\" data-toggle=\"collapse\"\n        data-target=\"#demo\">Filter Options</button>\n    <app-submit-filters></app-submit-filters>\n</div>","/** Angular imports */\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n/** Main App Routing */\nimport { AppRoutes } from './app-routing.module';\n/** App Interceptor */\nimport { Interceptor } from './core/interceptors/interceptor';\n\n/** Reusable modules */\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\n\n\n\n/** Main App Components */\nimport { AppComponent } from './app.component';\nimport { AuthenticationComponent } from './core/authentication/authentication.component';\nimport { ModulesComponent } from './modules/modules.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ToastNotificationsService } from './shared/toast-notifications/toast-notifications.service';\n\n@NgModule({\n  declarations: [AppComponent, AuthenticationComponent, ModulesComponent],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(AppRoutes),\n    CoreModule,\n    SharedModule,\n    HttpClientModule,\n    FontAwesomeModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: Interceptor,\n      multi: true,\n    },\n    ToastNotificationsService\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [],\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\n\n@Component({\n  selector: 'app-mytablefilter',\n  templateUrl: './mytablefilter.component.html',\n  styleUrls: ['./mytablefilter.component.scss']\n})\nexport class MytablefilterComponent implements OnInit {\n  @Input() filterOptions:any;\n  dropdownList: Array<any> = [];\n  selectedItems: Array<any> = [];\n  dropdownSettings:IDropdownSettings = {};\n  @Output()\n  onFilterSelect: EventEmitter<Array<any>> = new EventEmitter()\n\n  constructor() { \n\n  }\n\n  ngOnInit(): void {\n    this.filterOptions = this.filterOptions.filter((filter: string) => typeof filter === 'string');\n\n    console.log('THE TABLE FILTER OPTIONS', this.filterOptions)\n    this.filterOptions.map((filter:string,ind:number) => {\n      let item:any = {}\n      item.item_id = ind;\n      item.item_text = `${filter.charAt(0).toUpperCase()}${filter.slice(1)}`;\n      this.dropdownList.push(item)\n    });\n\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'item_id',\n      textField: 'item_text',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 3,\n      allowSearchFilter: true\n    };\n  }\n\n  onItemSelect(item: any) {\n    //console.log(item);\n  }\n  onSelectAll(items: any) {\n    //console.log(items);\n  }\n\n  getFilterSelections() {\n    this.onFilterSelect.emit(this.selectedItems);\n  }\n\n}\n","<ng-multiselect-dropdown\n  class=\"table-filter\"\n  [placeholder]=\"'Filter Records'\"\n  [settings]=\"dropdownSettings\"\n  [data]=\"dropdownList\"\n  [(ngModel)]=\"selectedItems\"\n  (onSelect)=\"onItemSelect($event)\"\n  (onSelectAll)=\"onSelectAll($event)\"\n>\n</ng-multiselect-dropdown>\n<br>\n<!-- <button (click)=\"getFilterSelections()\" type=\"button\" class=\"btn btn-primary btn-sm\">\n    Filter Options\n</button> -->","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services/authentication/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService, private _route: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (this.auth.isLoggedIn()) {\n      if (this.auth.hasWebDashboardAccess()) {\n        return true;\n\n      } else {\n        this._route.navigate(['/signin'], {\n          queryParams: { returnUrl: state.url },\n        });\n        return false;\n\n      }\n    }\n    this._route.navigate(['/signin'], {\n      queryParams: { returnUrl: state.url },\n    });\n    return false;\n\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-modals',\n  templateUrl: './modals.component.html',\n  styleUrls: ['../modals.component.scss']\n})\nexport class ModalsComponent implements OnInit {\n\n  @Input() modalId: string = '';\n  @Input() title: string = 'Title';\n  @Input() confirmBtnName: string = 'Confirm';\n  @Input() hasFooter: boolean = true;\n\n  @Output() confirmBtn: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  confirm() {\n    console.log('CONFIRM BUTTON CLICKED', true);\n    \n    this.confirmBtn.emit(true);\n  }\n\n}\n","<div class=\"modal fade\" id=\"{{modalId}}\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n      \n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">{{title}}</h4>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n        </div>\n        \n        <!-- Modal body -->\n        <div class=\"modal-body\">\n          <ng-content></ng-content>\n        </div>\n        \n        <!-- Modal footer -->\n        <div *ngIf=\"hasFooter\" class=\"modal-footer\">\n          <div class=\"confirm__buttons\">\n            <button type=\"button\" class=\"btn btn-secondary cancel\" data-dismiss=\"modal\">Cancel</button>\n            <button type=\"button\" class=\"btn btn-secondary confirm\" data-dismiss=\"modal\" (click)=\"confirm()\">{{confirmBtnName}}</button>\n          </div>\n        </div>\n        \n      </div>\n    </div>\n  </div>","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime, switchMap, take } from 'rxjs/operators';\nimport { FiltersService } from './filters.service';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.scss']\n})\nexport class FiltersComponent implements OnInit {\n\n  @Input() isInDropdown: boolean = true;\n  @Input() url: string = '';\n  @Input() filterUrl: string = '';\n  @Input() formItems: any;\n  @Input() formGroupOrder:any;\n  @Output() selectedFilters: EventEmitter<any> = new EventEmitter();\n  \n\n  public searchForm!: FormGroup;\n  public selectedFiltersOptions: any;\n  public enableSubmitFilterButton: boolean = false;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private _filterService:FiltersService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onValidatedData(data:any){\n    this.selectedFiltersOptions = Object.entries(data).filter( (filter:any) => {\n      return filter[1] !== '' && filter[1] !== null\n    });\n  }\n\n  searchFilters(data:any) {\n   this._filterService.submitSelectedFilters(data, this.filterUrl)\n  };\n}\n","\n<app-selected-filters [selectedFiltersOptions]=\"selectedFiltersOptions\" (searchableFilterOptions)=\"searchFilters($event)\"></app-selected-filters>\n        \n<div *ngIf=\"isInDropdown\" class=\"dropdown\">\n    <div class=\"dropdown-menu\">\n        <app-myform [formItems]=\"formItems\" [url]=\"url\"\n            [isValidationOnly]=true (onValidatedData)=\"onValidatedData($event)\" submitButtonText=\"Item Type\"\n            [formGroupOrder]=\"formGroupOrder\">\n        </app-myform>\n    </div>\n</div>\n\n<div *ngIf=\"!isInDropdown\" id=\"demo\" class=\"collapse\">\n    <app-myform [formItems]=\"formItems\" [url]=\"url\"\n        [isValidationOnly]=true (onValidatedData)=\"onValidatedData($event)\" submitButtonText=\"Item Type\"\n        [formGroupOrder]=\"formGroupOrder\">\n    </app-myform>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\n\n//import { HttpClientModule } from '@angular/common/http';\n\nimport { TablesComponent } from './tables.component';\nimport { MytdComponent } from './mytd/mytd.component';\nimport { MycelldisplayComponent } from './mycelldisplay/mycelldisplay.component';\nimport { MypaginationComponent } from './mypagination/mypagination.component';\nimport { MytablefilterComponent } from './mytablefilter/mytablefilter.component';\nimport { CollapsibleFiltersComponent } from '../filters/collapsible-filters/collapsible-filters.component';\nimport { DropdownFiltersComponent } from '../filters/dropdown-filters/dropdown-filters.component';\nimport { MyformComponent } from '../myform/myform.component';\nimport { MyinputComponent } from '../myform/myinput/myinput.component';\nimport { FiltersModule } from '../filters/filters.module';\nimport { CardComponent } from '../card/card.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n\n@NgModule({\n  declarations: [\n    TablesComponent,\n    MytdComponent,\n    MypaginationComponent,\n    MycelldisplayComponent,\n    MytablefilterComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgMultiSelectDropDownModule,\n    FiltersModule,\n    FontAwesomeModule\n  ],\n  exports: [\n    TablesComponent,\n    MytdComponent,\n    MypaginationComponent,\n    MycelldisplayComponent\n  ]\n})\nexport class TablesModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-myinput',\n  templateUrl: './myinput.component.html',\n  styleUrls: ['./myinput.component.scss']\n})\nexport class MyinputComponent implements OnInit {\n  @Input()\n  formControName!: string\n\n  @Input()\n  form!: FormGroup\n  errors: any = []\n  @Input()\n  data: any\n\n  @Input()\n  formErrors: any\n\n  choices: Array<any> = []\n  intital: boolean = false\n  isLoading: boolean = false\n  constructor(\n    private http: HttpClient\n  ) {\n  }\n\n  ngOnChanges() {\n    if (this.form && this.formControName && !this.intital) {\n      this.intital = true\n      this.formControl.valueChanges.subscribe((val) => {\n        this.sortValidationErrors(true)\n      })\n      // Check if its a field \n      if (this.data.type == \"field\") {\n        this.getUrlBasedOptions()\n      }\n      if (this.data.choices) {\n        this.choices = this.data.choices\n      }\n    }\n    if (this.formControName) {\n      this.sortValidationErrors()\n    }\n  }\n  showLoader(status: boolean) {\n    this.isLoading = status\n  }\n  getUrlBasedOptions() {\n    if (!this.data.url) return\n    this.showLoader(true)\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer micha'\n    })\n\n    this.http.get<any>(this.data.url, { headers: headers }).subscribe(res => {\n      this.showLoader(false)\n      this.choices = res.results.map((value: any) => {\n        return {\n          \"value\": value.id,\n          \"display_name\": value[this.data.display_name]\n        }\n      });\n    }, error => {\n      this.showLoader(false)\n      const status = error.status\n    })\n  }\n\n  sortValidationErrors(clearFormError = false) {\n    this.errors = []\n    if (this.formControl.untouched) {\n      return\n    }\n\n    // Clear the form errors on value changes only\n    if (clearFormError) {\n      delete this.formErrors[this.formControName]\n    }\n\n    // Normal formControl errors\n    if (this.formControl.errors) {\n      this.errors = Object.keys(this.formControl.errors)\n    }\n\n    // Check other form control errors from outside(from the backend)\n    if (this.formControName in this.formErrors) {\n      this.errors = this.errors.concat(this.formErrors[this.formControName])\n    }\n\n    // If the control is not marked as invalid force it\n    if (this.errors.length > 0 && this.formControl.valid) {\n      this.formControl.setErrors({ '': true })\n    }\n\n  }\n\n  get formControl(): AbstractControl {\n    return this.form.controls[this.formControName]\n  }\n\n  get formControlType(): string {\n    if (this.data.obscure) {\n      return \"password\"\n    }\n\n    switch (this.data.type) {\n      case 'integer':\n        return \"number\"\n\n      case 'string':\n        if (this.data.max_length && this.data.max_length > 150) {\n          return 'textArea'\n        }\n        return \"text\"\n\n      case 'datetime':\n        return \"date\"\n\n      case 'datetime':\n        return \"date\"\n\n      case 'field':\n        if (this.data.multiple) {\n          return 'multiplechoice'\n        }\n        return \"choice\"\n\n      default:\n        return this.data.type\n    }\n  }\n\n  get displayControlName() {\n    return this.data.label\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"form-group\" [formGroup]=\"form\">\n    <label [for]=\"formControName\" class=\"form-label\">{{displayControlName}}</label>\n    <div [ngSwitch]=\"formControlType\">\n        <div *ngSwitchCase=\"'choice'\">\n            <select class=\"form-control form-control-lg\" [attr.aria-label]=\"formControName\"\n                [formControlName]=\"formControName\" [id]=\"formControName\">\n                <option *ngIf=\"isLoading\" disabled value=\"\" class=\"opt-value\">Fetching ...</option>\n                <option *ngIf=\"!isLoading\" disabled value=\"\" class=\"opt-value\">Select {{displayControlName}}</option>\n                <option *ngFor=\"let opt of choices\" [value]=\"opt.value\" class=\"opt-value\">\n                    {{opt.display_name}}\n                </option>\n            </select>\n        </div>\n\n        <div *ngSwitchCase=\"'multiplechoice'\">\n            <select multiple class=\"form-control form-control-lg\" [attr.aria-label]=\"formControName\"\n                [formControlName]=\"formControName\" [id]=\"formControName\">\n                <option *ngIf=\"isLoading\" disabled value=\"\" class=\"opt-value\">Fetching ...</option>\n                <option *ngIf=\"!isLoading\" disabled value=\"\" class=\"opt-value\">Select {{displayControlName}}</option>\n                <option *ngFor=\"let opt of choices\" [value]=\"opt.value\" class=\"opt-value\">\n                    {{opt.display_name}}\n                </option>\n            </select>\n        </div>\n\n        <div *ngSwitchCase=\"'boolean'\" class=\"form-check form-control-lg\">\n            <input [formControlName]=\"formControName\" class=\"form-check-input opt-value\" type=\"checkbox\" value=\"\"\n                [id]=\"formControName\">\n        </div>\n\n        <textarea *ngSwitchCase=\"'textArea'\" class=\"form-control form-control-lg opt-value\"\n            [attr.aria-label]=\"formControName\" rows=\"5\" [formControlName]=\"formControName\" [id]=\"formControName\">\n        </textarea>\n\n        <div *ngSwitchDefault>\n            <input [formControlName]=\"formControName\" [type]=\"formControlType\"\n                class=\"form-control form-control-lg opt-value\" [id]=\"formControName\" (blur)=\"sortValidationErrors()\">\n        </div>\n    </div>\n\n    <span *ngFor=\"let error of errors\" class=\"text-danger opt-value\">\n        {{error}} <br>\n    </span>\n</div>","import { Injectable, TemplateRef } from '@angular/core';\nimport { Subject, Observable, BehaviorSubject, of } from 'rxjs';\n\nexport interface Notice {\n  message: string;\n  style: string;\n}\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ToastNotificationsService {\n  constructor() { }\n  toastData: any = [];\n  public toasts = new BehaviorSubject(this.toastData);\n\n  showToast(message: string, style: string) {\n    let data = {\n      message: message,\n      style: style\n    };\n    this.toastData = [data, ...this.toastData]\n    this.toasts.next(this.toastData);\n    setTimeout(() => {\n      this.toastData.pop();\n      this.toasts.next(this.toastData);\n    }, 5000)\n  }\n\n  removeToast(index: number) {\n    this.toastData.splice(index, 1);\n    this.toasts.next(this.toastData);\n  }\n\n  getToast(): Observable<any[]> {\n\n    return of(this.toastData);\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-button',\n  templateUrl: './add-button.component.html',\n  styleUrls: ['./add-button.component.scss']\n})\nexport class AddButtonComponent implements OnInit {\n  @Input() 'url': string = '';\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"spark-dynamic-forms__bulk-wrapper\">\n    <a [routerLink]=\"url\" class=\"\">\n        <button class=\"btn btn btn-sm lift spark-dynamic-forms__bulk-btn\">\n            Add Record\n        </button>\n    </a>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {Location} from '@angular/common';\n\nimport { MY_EXAMPLE_OPTIONS_DATA } from './myfields';\nimport { MyInputModel, InputType } from './myinput/model';\nimport { FormBuilder, FormGroup, FormControl, AbstractControl, Validators } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\nimport { from } from 'rxjs';\nimport { FormItemService } from 'src/app/services/forms/form-item.service';\nconst endpoint = environment.APIEndpoint;\nconst endpointV1 = environment.APIv1Endpoint;\n@Component({\n  selector: 'app-myform',\n  templateUrl: './myform.component.html',\n  styleUrls: ['../myform/myform.component.scss']\n})\nexport class MyformComponent implements OnInit {\n\n  @Input()\n  formGroup: FormGroup = new FormGroup({});\n\n  @Input()\n  submitButtonText: string = \"Post\"\n\n  @Input()\n  formItems: any\n\n  @Input()\n  extraParams: any = {}\n\n  @Output()\n  onValidatedData = new EventEmitter<any>();\n\n  @Output()\n  onPostedData = new EventEmitter<any>();\n\n  @Output()\n  isLoading$ = new EventEmitter<boolean>();\n\n  @Input()\n  isValidationOnly: boolean = false\n\n  @Input()\n  tabbedItems: any = [];\n  @Input()\n  tabbed: boolean = false;\n\n  @Input()\n  url: string = \"\"\n  _instance: any\n  instanceChanged = false\n  isNew: boolean = true\n  @Input()\n  set instance(value: any) {\n    this._instance = value\n    this.instanceChanged = true\n  }\n\n  get instance() {\n    return this._instance\n  }\n\n  @Input()\n  formGroupOrder!: Array<Array<string>>;\n\n  @Input() loading: boolean = false;\n  @Input() cardTitle: string = 'Form Title';\n\n  initial: boolean = false\n  formErrors: any = {}\n  detailErrors: any = []\n  isLoading: boolean = false;\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private _formService: FormItemService,\n    private _location: Location\n  ) {\n\n  }\n  ngOnChanges() {\n    if (this.formGroupOrder && !this.initial) {\n      this.initial = false\n      const fields = this.formItems.actions.POST;\n      const possibleFields = this.formGroupOrder.reduce((acc, val) => acc.concat(val), [])\n\n      // console.log(possibleFields)\n      // console.log(fields)\n\n      for (var key in fields) {\n        const field = fields[key];\n\n        if (field.read_only || !possibleFields.includes(key)) {\n          continue\n        }\n\n        const defaultField = field.type == \"boolean\" ? false : \"\"\n        this.formGroup.addControl(\n          key, new FormControl(defaultField, [\n          ])\n        )\n\n        const fieldcontrol = this.formGroup.controls[key]\n        const validators = []\n        if (field.required) {\n          validators.push(Validators.required)\n        }\n        if (field.max_length) {\n          validators.push(Validators.maxLength(field.max_length))\n        }\n        if (validators.length > 0) {\n          fieldcontrol.setValidators(validators)\n        }\n      }\n    }\n    this.checkInstanceChangesUpdateForm()\n\n  }\n\n  mapAllTheMultifieldEditSourceFields(): any {\n    var instance = { ...this.instance }// this.instance\n    if (\"POST\" in this.formItems.actions) {\n      const fields = this.formItems.actions.POST\n      for (var key in fields) {\n        const field = fields[key]\n        const type = field.type\n        if (type == \"multifield\") {\n          if (\"edit_source_field\" in field) {\n            const editSource = field.edit_source_field\n            instance[key] = instance[editSource]\n          }\n        }\n      }\n    }\n    return instance\n  }\n\n  checkInstanceChangesUpdateForm() {\n    if (this.instanceChanged) {\n      this.instanceChanged = false\n      if (this.instance) {\n        const inst = this.mapAllTheMultifieldEditSourceFields()\n        this.formGroup.patchValue(\n          inst\n        )\n        this.isNew = this.instance.id == null\n        this.formGroup.markAllAsTouched()\n      }\n    }\n  }\n\n  getDescriptionObject(formControlName: string) {\n    return this.formItems.actions.POST[formControlName];\n  }\n\n  getFieldNameErros(formControlName: string) {\n    return this.formErrors[formControlName]\n  }\n\n  ngOnInit(): void {\n    this.url = `${endpointV1}${this.url}`\n  }\n\n  showLoader(status: boolean) {\n    this.isLoading = status\n    this.isLoading$.emit(status)\n  }\n\n  dataReceived() {\n    this.detailErrors = []\n    if (this.formGroup.valid) {\n      const data = { ...this.formGroup.value, ...this.extraParams }\n      if (this.isValidationOnly) {\n        this.onValidatedData.emit(data)\n      } else {\n        this.sendDataHttp(data)\n      }\n    } else {\n    }\n  }\n\n  get myFormValid(): boolean {\n    return this.formGroup.valid\n  }\n\n  get formAction() {\n    return this.isNew ? 'Add' : 'Update'\n  }\n\n  sendDataHttp(data: any) {\n    this.showLoader(true)\n    this.formErrors = [];\n    const post_data = {\n      url: this.isNew ? this.url : `${this.url}${this.instance.id}`,\n      formData: data\n    }\n\n    this._formService.postForm(this.isNew, post_data).subscribe(res => {\n      this.onPostedData.emit(res)\n      this.showLoader(false)\n      if (this.isNew) {\n        this.resetForm();\n      }\n   \n      setTimeout(() => {\n        this._location.back();\n      }, 1000);\n      \n      \n    }, error => {\n      this.showLoader(false)\n      const status = error.status\n      if (status == 401) {\n        this.detailErrors.push(\"Login required.\")\n      } else if (status == 400) {\n        const formErrors = error.error;\n        if (\"detial\" in formErrors) {\n          this.detailErrors.push(formErrors.detial)\n        }\n        this.formErrors = formErrors\n      }\n    })\n  }\n\n  getControl(name: string): AbstractControl {\n    return this.formGroup.get(name) || new FormControl()\n  }\n\n  resetForm() {\n    this.formGroup.reset();\n  }\n\n  bulkOptions() { }\n\n}\n","<div class=\"container\">\n    <div class=\"spark-dynamic-forms__bulk-wrapper\">\n        <!-- TODO -> call a module for the bulk upload processes -->\n        <button type=\"button\" data-toggle=\"modal\" data-target=\"#bulkModal\"\n            class=\"btn btn btn-sm mb-3 lift spark-dynamic-forms__bulk-btn\">\n            Bulk Actions\n        </button>\n        <app-modals [title]=\"cardTitle+' Bulk Create'\" [hasFooter]=\"false\" [modalId]=\"'bulkModal'\">\n            <div class=\"bulk__wrapper\">\n                <div class=\"bulk__content\">\n                    Excel/ CSV are the only acceptable formats\n                </div>\n                <div class=\"bulk__button-wrapper\">\n                    <button class=\"btn btn btn-sm mb-3 spark-dynamic-forms__bulk-btn\">\n                        Download Template\n                    </button>\n                    <button class=\"btn btn btn-sm mb-3 spark-dynamic-forms__bulk-btn-upload\" (click)=\"bulkOptions()\">\n                        Upload File\n                    </button>\n                </div>\n            </div>\n        </app-modals>\n    </div>\n    <form class=\"\" [formGroup]=\"formGroup\" (ngSubmit)=\"dataReceived()\">\n        <app-card *ngIf=\"!tabbed\" [title]=\"formAction+' '+cardTitle\">\n            <span *ngFor=\"let error of detailErrors\" class=\"text-danger\">\n                {{error}} <br>\n            </span>\n            <div>\n                <div *ngFor=\"let item of formGroupOrder;let i=index;\">\n                    <div class=\"row\">\n                        <div *ngFor=\"let field of item;let j=index;\" class=\"col-sm-{{12/item.length}}\">\n                            <app-myinput [formErrors]=\"formErrors\" [data]=\"getDescriptionObject(field)\"\n                                [form]=\"formGroup\" formControName=\"{{field}}\">\n                            </app-myinput>\n                        </div>\n                    </div>\n                </div>\n                <br>\n            </div>\n        </app-card>\n\n        <app-card-dropdown *ngIf=\"tabbed\" [tabbedItems]=\"tabbedItems\" [tabbed]=\"tabbed\">\n            <span *ngFor=\"let error of detailErrors\" class=\"text-danger\">\n                {{error}} <br>\n            </span>\n            <div>\n                <div *ngFor=\"let item of formGroupOrder;let i=index;\">\n                    <div class=\"row\">\n                        <div *ngFor=\"let field of item;let j=index;\" class=\"col-sm-{{12/item.length}}\">\n                            <app-myinput [formErrors]=\"formErrors\" [data]=\"getDescriptionObject(field)\"\n                                [form]=\"formGroup\" formControName=\"{{field}}\">\n                            </app-myinput>\n                        </div>\n                    </div>\n                </div>\n\n                <br>\n            </div>\n        </app-card-dropdown>\n\n        <div class=\"spark-dynamic-forms__button-wrapper\">\n            <button *ngIf=\"isNew\" type=\"button\" (click)=\"resetForm()\"\n                class=\"btn btn btn-sm mb-3 lift spark-dynamic-forms__clear\">Clear</button>\n            <button [disabled]=\"!formGroup.valid\" type=\"submit\"\n                class=\"btn btn-primary mb-3 lift spark-dynamic-forms__submit\">\n                <span class=\"spark-text has--loading\" [ngClass]=\"{'has--loading': loading}\">\n                    {{isLoading?'Loading...': formAction+' '+submitButtonText}}\n                </span>\n            </button>\n        </div>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FiltersComponent } from './filters.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MyformModule } from './myform/myform.module';\nimport { SelectedFiltersComponent } from './selected-filters/selected-filters.component';\nimport { SubmitFiltersComponent } from './submit-filters/submit-filters.component';\nimport { CollapsibleFiltersComponent } from './collapsible-filters/collapsible-filters.component';\nimport { DropdownFiltersComponent } from './dropdown-filters/dropdown-filters.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FiltersService } from './filters.service';\n\n\n\n@NgModule({\n  declarations: [FiltersComponent, SelectedFiltersComponent, SubmitFiltersComponent, CollapsibleFiltersComponent, DropdownFiltersComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MyformModule,\n    HttpClientModule\n  ],\n  exports: [\n    FiltersComponent,\n    SelectedFiltersComponent,\n    SubmitFiltersComponent,\n    CollapsibleFiltersComponent,\n    DropdownFiltersComponent\n  ],\n  providers: [FiltersService]\n})\nexport class FiltersModule { }\n","export * from './errors/errors.service';\nexport * from './authentication/auth.service';\nexport * from './storage/storage.service';\nexport * from './user/user.service';","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalsComponent } from '../basic/modals.component';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.scss']\n})\nexport class ConfirmComponent extends ModalsComponent implements OnInit {\n  @Input() message: string = 'Are you sure you want to delete?';\n\n  constructor(\n  ) { \n    super();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"message\" class=\"modal fade\" id=\"{{modalId}}\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n        <div class=\"modal-body\">\n            <div class=\"confirm__modal\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                <span class=\"confirm__message\">{{message}}</span>\n                <div class=\"confirm__buttons\">\n                    <button type=\"button\" class=\"btn btn-secondary cancel\" data-dismiss=\"modal\">Cancel</button>\n                    <button type=\"button\" class=\"btn btn-secondary confirm\" data-dismiss=\"modal\" (click)=\"confirm()\">{{confirmBtnName}}</button>\n                </div>\n            </div>\n        </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { FooterComponent } from './structure/footer/footer.component';\nimport { HeaderComponent } from './structure/header/header.component';\nimport { NavbarComponent } from './structure/navbar/navbar.component';\nimport { ErrorNotFoundComponent } from './errors/error-not-found/error-not-found.component';\nimport { LockScreenComponent } from './authentication/lock-screen/lock-screen.component';\n\n@NgModule({\n  declarations: [\n    FooterComponent,\n    HeaderComponent,\n    NavbarComponent,\n    ErrorNotFoundComponent,\n    LockScreenComponent,\n  ],\n  imports: [CommonModule, SharedModule, RouterModule],\n  exports: [FooterComponent, NavbarComponent]\n})\nexport class CoreModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-not-found',\n  templateUrl: './error-not-found.component.html',\n  styleUrls: ['./error-not-found.component.scss']\n})\nexport class ErrorNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>error-not-found works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MyformComponent } from './myform.component';\nimport { MyinputComponent } from './myinput/myinput.component';\n\n@NgModule({\n  declarations: [\n    MyformComponent,\n    MyinputComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  exports: [\n    MyformComponent,\n    MyinputComponent\n  ]\n})\nexport class MyformModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModalsComponent } from './basic/modals.component';\nimport { ModalsService } from './modals.service';\nimport { ConfirmComponent } from './confirm/confirm.component';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\n\n@NgModule({\n  declarations: [ModalsComponent, ConfirmComponent, ConfirmDialogComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ModalsComponent,\n    ConfirmComponent,\n    ConfirmDialogComponent\n  ],\n  providers: [\n    ModalsService\n  ]\n})\nexport class ModalsModule { }\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { concatMap, map, switchMap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { StorageService, UserService } from 'src/app/services';\n\nconst clientId = environment.APIClientID;\nconst endpoint = environment.APIEndpoint;\nconst endpointV1 = environment.APIv1Endpoint;\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  user: any;\n  constructor(\n    private _route: Router,\n    private _userService: UserService,\n    private _storageService: StorageService,\n    private _http: HttpClient,\n    private _cookieService: CookieService\n  ) {}\n\n  isLoggedIn(): boolean {\n    //check if the user is logged in using an api generated token\n    const tokenItems = JSON.parse(\n      this._storageService.getItem('token') || '{}'\n    );\n    const token = tokenItems !== null ? tokenItems.token : null;\n\n    if (token != null && token != undefined) {\n      //to do if user not verified\n      return true;\n    }\n\n    return false;\n  }\n\n  hasAdminAccess(): boolean {\n    return this.getUserProfile().role == 'A' ? true : false;\n  }\n\n  hasWebDashboardAccess(): boolean {\n    return (\n      //this.getUserProfile().role == 'S' ||\n      this.getUserProfile().role == 'A' || this.getUserProfile().role == 'N' && this.getUserProfile().role !== null\n        ? true\n        : false\n    );\n  }\n\n  isVerifiedUser() {\n    return this.getUserProfile().verified == 'true' ? true : false;\n  }\n\n  getUserProfile() {\n    // this._storageService.watchStorage().subscribe((data:string) => {\n    //this.user = JSON.parse(localStorage.getItem('userDetails'));\n    this.user = JSON.parse(this._storageService.getItem('userDetails') || '{}');\n\n    if (this.user !== {} || this !== null) {\n      return this.user;\n    }\n    return;\n  }\n\n  //TODO -> Remove if one needs not to signup\n  // signUp(data: any) {\n  //   return this._http.post<any>(endpointV1 + 'users/', data).pipe(\n  //     map((res) => {\n  //       const token = res.token.access_token;\n  //       const tokenExpiry = res.token.expires_in;\n  //       const tokenRefresh = res.token.refresh_token;\n\n  //       let tokenItems = { token, tokenExpiry, tokenRefresh };\n\n  //       localStorage.setItem('token', JSON.stringify(tokenItems));\n\n  //       return res;\n  //     })\n  //   );\n  // }\n\n  //TODO -> Remove if there's no 2-factor-authentication with SMS\n  // verifyOTP(data: any) {\n  //   return this._http.post<any>(endpointV1 + 'users/verify-otp/', data);\n  // }\n\n  // requestOTP(data: any) {\n  //   let body = {\n  //     username: data,\n  //   };\n  //   return this._http.post<any>(endpointV1 + 'users/request-otp/', body);\n  // }\n\n  signIn(data: any) {\n    data.grant_type = 'password';\n    data.client_id = clientId;\n\n    const rememberMe = data.remember_me;\n\n    if (rememberMe) {\n      this._cookieService.set('rememberMe', rememberMe);\n      this._storageService.setItem('rememberMe', rememberMe);\n    }\n\n    return this._http.post<any>(endpoint + 'auth/token/', data).pipe(\n      switchMap(res => {\n        const token = res.access_token;\n        const tokenExpiry = res.expires_in;\n        const tokenRefresh = res.refresh_token;\n        let tokenItems;\n\n        tokenItems = { token, tokenExpiry, tokenRefresh };\n\n        if (rememberMe) {\n          const loggedInTime = Date.now();\n          const refreshTokenTime = Math.max(loggedInTime + 3600000, 3600000);\n          // const refreshTokenTime = loggedInTime + 2000;\n          tokenItems = { token, tokenExpiry, tokenRefresh, refreshTokenTime };\n        }\n\n        // localStorage.setItem('token', JSON.stringify(tokenItems));\n        this._storageService.setItem('token', JSON.stringify(tokenItems));\n\n        return this._userService.userProfile();\n      }),\n      concatMap(() => {\n        return this._route.navigate(['/home']);\n      })\n    );\n  }\n\n  refreshToken(data: any) {\n    data.grant_type = 'refresh_token';\n    data.client_id = clientId;\n\n    return this._http.post<any>(`${endpoint}auth/token/`, data).pipe(\n      map(res => {\n        const token = res.access_token;\n        const tokenExpiry = res.expires_in;\n        const tokenRefresh = res.refresh_token;\n\n        let tokenItems;\n        tokenItems = { token, tokenExpiry, tokenRefresh };\n\n        const rememberMe =\n          this._cookieService.get('rememberMe') ||\n          // localStorage.getItem('rememberMe');\n          this._storageService.getItem('rememberMe');\n        if (rememberMe) {\n          const refreshTokenInitialTime = Date.now();\n          const refreshTokenTime = Math.max(\n            refreshTokenInitialTime + 3600000,\n            3600000\n          );\n          tokenItems = { token, tokenExpiry, tokenRefresh, refreshTokenTime };\n        }\n\n        //localStorage.setItem('token', JSON.stringify(tokenItems));\n        this._storageService.setItem('token', JSON.stringify(tokenItems));\n      })\n    );\n  }\n\n  resetPassowrd(data: any) {\n    return this._http.post<any>(endpointV1 + 'users/reset-password', data);\n  }\n\n  forgotPassword(data: any) {\n    return this._http.post<any>(endpointV1 + 'users/forgot-password', data);\n  }\n\n  changePassword(data: any) {\n    return this._http.put<any>(endpointV1 + 'users/me/change-password', data);\n  }\n\n  signOut() {\n    localStorage.clear();\n    sessionStorage.clear();\n    this._cookieService.delete('rememberMe');\n    this._route.navigate(['/signin']);\n  }\n\n  toggleShowPassword(type: any) {\n    type === 'password' ? type = 'text' : type = 'password';\n    return type;\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormControl, AbstractControl } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-myinput',\n  templateUrl: './myinput.component.html',\n  styleUrls: ['./myinput.component.scss']\n})\nexport class MyinputComponent implements OnInit {\n  @Input()\n  formControName!: string\n\n  @Input()\n  form!: FormGroup\n  errors: any = []\n  @Input()\n  data: any\n\n  @Input()\n  formErrors: any\n\n  choices: Array<any> = []\n  intital: boolean = false\n  isLoading: boolean = false\n  constructor(\n    private http: HttpClient\n  ) {\n  }\n\n  ngOnChanges() {\n    if (this.form && this.formControName && !this.intital) {\n      this.intital = true\n      this.formControl.valueChanges.subscribe((val) => {\n        this.sortValidationErrors(true)\n      })\n\n      // Check if its a field \n      if (this.data.type == \"field\") {\n        this.getUrlBasedOptions()\n      }\n      if (this.data.choices) {\n        this.choices = this.data.choices\n      }\n    }\n    if (this.formControName) {\n      this.sortValidationErrors()\n    }\n  }\n  showLoader(status: boolean) {\n    this.isLoading = status\n  }\n  getUrlBasedOptions() {\n    if (!this.data.url) return\n    this.showLoader(true)\n    // todo: remove this hard-coded auths \n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer micha'\n    })\n    this.http.get<any>(this.data.url, { headers: headers }).subscribe(res => {\n      this.showLoader(false)\n      this.choices = res.results.map((value: any) => {\n        return {\n          \"value\": value.id,\n          \"display_name\": value[this.data.display_name]\n        }\n      });\n    }, error => {\n      this.showLoader(false)\n      const status = error.status\n    })\n  }\n  sortValidationErrors(clearFormError = false) {\n    this.errors = []\n    if (this.formControl.untouched) {\n      return\n    }\n\n    // Clear the form errors on value changes only\n    if (clearFormError) {\n      delete this.formErrors[this.formControName]\n    }\n\n    // Normal formControl errors\n    if (this.formControl.errors) {\n      this.errors = Object.keys(this.formControl.errors)\n    }\n\n    // Check other form control errors from outside(from the backend)\n    if (this.formControName in this.formErrors) {\n      this.errors = this.errors.concat(this.formErrors[this.formControName])\n    }\n\n    // If the control is not marked as invalid force it\n    if (this.errors.length > 0 && this.formControl.valid) {\n      this.formControl.setErrors({ '': true })\n    }\n\n  }\n\n  get formControl(): AbstractControl {\n    return this.form.controls[this.formControName]\n  }\n\n  get formControlType(): string {\n    if (this.data.obscure) {\n      return \"password\"\n    }\n    switch (this.data.type) {\n      case 'integer':\n        return \"number\"\n\n      case 'string':\n        if (this.data.max_length && this.data.max_length > 150) {\n          return 'textArea'\n        }\n        return \"text\"\n\n      case 'datetime':\n        return \"date\"\n\n      case 'datetime':\n        return \"date\"\n\n      case 'field':\n        if (this.data.multiple) {\n          return 'multiplechoice'\n        }\n        return \"choice\"\n\n      default:\n        return this.data.type\n    }\n  }\n\n  get displayControlName() {\n    return this.data.label\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"form-group\" [formGroup]=\"form\">\n    <label [for]=\"formControName\" class=\"form-label\">{{displayControlName}}</label>\n    <div [ngSwitch]=\"formControlType\">\n        <div *ngSwitchCase=\"'choice'\">\n            <select class=\"form-control\" [attr.aria-label]=\"formControName\" [formControlName]=\"formControName\"\n                [id]=\"formControName\">\n                <option *ngIf=\"isLoading\" disabled value=\"\" class=\"opt-value\">Fetching ...</option>\n                <option *ngIf=\"!isLoading\" disabled value=\"\" class=\"opt-value\">Select {{displayControlName}}</option>\n                <option *ngFor=\"let opt of choices\" [value]=\"opt.value\" class=\"opt-value\">\n                    {{opt.display_name}}\n                </option>\n            </select>\n        </div>\n\n        <div *ngSwitchCase=\"'multiplechoice'\">\n            <select multiple class=\"form-control\" [attr.aria-label]=\"formControName\" [formControlName]=\"formControName\"\n                [id]=\"formControName\">\n                <option *ngIf=\"isLoading\" disabled value=\"\" class=\"opt-value\">Fetching ...</option>\n                <option *ngIf=\"!isLoading\" disabled value=\"\" class=\"opt-value\">Select {{displayControlName}}</option>\n                <option *ngFor=\"let opt of choices\" [value]=\"opt.value\" class=\"opt-value\">\n                    {{opt.display_name}}\n                </option>\n            </select>\n        </div>\n\n        <div *ngSwitchCase=\"'boolean'\" class=\"form-check\">\n            <input [formControlName]=\"formControName\" class=\"form-check-input opt-value\" type=\"checkbox\" value=\"\"\n                [id]=\"formControName\">\n        </div>\n\n        <!-- <app-multi-select *ngSwitchCase=\"'multifield'\" [parameter]=\"data\" formControlName=\"items\"></app-multi-select> -->\n\n        <textarea *ngSwitchCase=\"'textArea'\" class=\"form-control opt-value\" [attr.aria-label]=\"formControName\" rows=\"5\"\n            [formControlName]=\"formControName\" [id]=\"formControName\">\n        </textarea>\n\n        <div *ngSwitchDefault>\n            <input [formControlName]=\"formControName\" [type]=\"formControlType\" class=\"form-control opt-value\"\n                [id]=\"formControName\" (blur)=\"sortValidationErrors()\">\n        </div>\n    </div>\n\n    <span *ngFor=\"let error of errors\" class=\"text-danger opt-value\">\n        {{error}} <br>\n    </span>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'app-mypagination',\n  templateUrl: './mypagination.component.html',\n  styleUrls: ['./mypagination.component.scss']\n})\nexport class MypaginationComponent implements OnInit {\n\n  @Input()\n  resultsMeta: any\n  @Input()\n  selectedPage: number = 5\n\n  @Input()\n  pageSize: number = 10;\n\n  @Input()\n  totalDisplayedPAges = 9\n\n  @Output()\n  onPageSelect: EventEmitter<number> = new EventEmitter()\n\n  constructor() { }\n  ngOnInit(): void {\n  }\n  get isAtEnd() {\n    return (this.totalDisplayedPAges - this.selectedPage) <= Math.round(this.totalDisplayedPAges / 2)\n  }\n  get isAtStart() {\n    // 5 -2\n    return (this.selectedPage - 2) <= 3\n  }\n  get moreAtStart() {\n    return this.isAtEnd && this.hideSomePages\n  }\n  get moreAtEnd() {\n    return this.isAtStart && this.hideSomePages\n  }\n  get hideSomePages() {\n    // console.log((this.totalPages - 2) >= this.totalDisplayedPAges)\n    return (this.totalPages - 2) >= this.totalDisplayedPAges\n  }\n  get pages() {\n    if (!this.isPaginatable) return []\n    let pages: any[] = []\n    const totalPages = this.totalPages\n    const excluded = [1, this.totalPages]\n    const remPages = totalPages - 2\n    let addFactor = 2\n    // 6 7 8 9 10 11\n    if (this.hideSomePages) {\n      let tempAddFactor = this.selectedPage - 1\n      // Less than 3 because , less than that means use 2 \n      if (this.isAtStart) {\n        tempAddFactor = 2\n      } else if (this.isAtEnd) {\n        tempAddFactor = 6\n      }\n      addFactor = tempAddFactor\n    }\n\n    for (let i = 0; i < (this.hideSomePages ? 5 : remPages); i++) {\n      const newPage = (i + addFactor)\n      if (!pages.includes(newPage) && !excluded.includes(newPage)) {\n        pages.push(newPage)\n      }\n    }\n    pages.sort((a, b) => a - b)\n    return pages\n  }\n\n  get totalItems() {\n    if (!this.isPaginatable) return 1\n    return this.resultsMeta.count;\n  }\n\n  scrollPage(addPage: number) {\n    let tempvalue = addPage + this.selectedPage;\n    if (tempvalue > this.totalPages) {\n      tempvalue = this.totalPages\n    } else if (tempvalue < 1) {\n      tempvalue = 1\n    }\n    this.selectPage(tempvalue)\n  }\n\n  get totalPages() {\n    if (!this.isPaginatable) return 1\n    return Math.ceil(this.resultsMeta.count / this.pageSize)\n  }\n  get isPaginationActive() {\n    if (!this.isPaginatable) return false\n    // return \n    return this.hasNext || this.hasPrev\n  }\n  get hasNext() {\n    if (!this.isPaginatable) return false\n    return this.resultsMeta.next != undefined\n  }\n  get hasPrev() {\n    if (!this.isPaginatable) return false\n    return this.resultsMeta.prev != undefined\n  }\n  get isPaginatable() {\n    if (!this.resultsMeta)\n      return false\n    return this.resultsMeta.hasOwnProperty(\"next\") || this.resultsMeta.hasOwnProperty(\"prev\")\n  }\n  selectPage(page: number) {\n    if (this.selectedPage == page) return\n    this.onPageSelect.emit(page)\n    // this.selectedPage = page\n    // console.log(`Selected page ${page}`)\n  }\n  checkIsSelected(page: number): boolean {\n    return this.selectedPage == page\n  }\n}\n","<nav aria-label=\"Page navigation\">\n        <ul *ngIf=\"isPaginationActive\" class=\"pagination\">\n                <button (click)=\"scrollPage(-1)\" [disabled]=\"!hasPrev\" class=\"btn page-link\">Previous</button>\n                <li class=\"page-item {{selectedPage==1?'active':''}}\"><button (click)=\"selectPage(1)\"\n                                class=\"btn page-link  \">1</button></li>\n                <button *ngIf=\"moreAtStart\" [disabled]=\"hasPrev\" class=\"btn page-link\">...</button>\n\n                <li *ngFor=\"let page of pages\" class=\"page-item {{selectedPage==page?'active':''}}\"><button\n                                class=\"btn page-link\" (click)=\"selectPage(page)\">{{page}}</button>\n                </li>\n\n                <li class=\"page-item\"><button *ngIf=\"moreAtEnd\" class=\"btn page-link\">...</button></li>\n                <li class=\"page-item {{selectedPage==totalPages?'active':''}}\"><button (click)=\"selectPage(totalPages)\"\n                                class=\"btn page-link  \">{{totalPages}}</button></li>\n                <li class=\"page-item\"><button (click)=\"scrollPage(1)\" [disabled]=\"!hasNext\"\n                                class=\"btn page-link\">Next</button>\n                </li>\n\n        </ul>\n\n        <span class=\"item-count\">\n                {{totalItems}} Items\n        </span>\n\n\n</nav>","import { Component, OnInit, TemplateRef, OnDestroy } from '@angular/core';\nimport { ToastNotificationsService } from './toast-notifications.service';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\ndeclare var $: any;\n@Component({\n  selector: 'app-toast-notifications',\n  templateUrl: './toast-notifications.component.html',\n  styleUrls: ['./toast-notifications.component.scss']\n})\nexport class ToastNotificationsComponent implements OnInit, OnDestroy {\n   _toasts:any = [];\n   faEdit = faEdit;\n  constructor(public toastService: ToastNotificationsService) { \n  }\n\n  ngOnInit() {\n    this.toastService.toasts.subscribe(response => {\n      this._toasts = response;\n      console.log(response)\n    })\n    // this.toastService.update(\"Message1\", \"info\")\n  }\n\n  closeToast(index: number){\n    console.log(index);\n    this.toastService.removeToast(index);\n  }\n\n  ngOnDestroy(){\n    this._toasts = []\n    this.toastService.toasts.unsubscribe();\n  }\n}\n\n\n","<!-- <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n    <strong>Holy guacamole!</strong> You should check in on some of those fields below.\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div> -->\n<!-- [ngClass]=\"{'is-info':     message.style=='info',\n                       'is-danger':   message.style=='danger',\n                       'is-success':  message.style=='success'}\" -->\n\n<div class=\"position-absolute bottom-0 right-0 p-3 toast-container\">\n  <div *ngFor=\"let message of _toasts;let indexOfelement=index;\" id=\"liveToast\" class=\"toast show\" role=\"alert\"\n    aria-live=\"assertive\" aria-atomic=\"true\">\n    \n    <div class=\"toast-body\" [ngClass]=\"{'info': message.style=='info',\n    'warning':   message.style=='danger',\n    'success':  message.style=='success'}\">\n      <button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\"\n        (click)=\"closeToast(indexOfelement)\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n      <p>\n        {{message.message}}\n      </p>\n    </div>\n  </div>\n\n</div>\n","import { Routes } from '@angular/router';\nimport { ErrorNotFoundComponent } from './core/errors/error-not-found/error-not-found.component';\nimport { AuthenticationComponent } from './core/authentication/authentication.component';\nimport { ModulesComponent } from './modules/modules.component';\nimport { AuthGuard } from './core/auth-guards/auth.guards';\nimport { DashboardComponent } from './modules/dashboard/dashboard.component';\n\nexport const AppRoutes: Routes = [\n  {\n    path: '',\n    component: ModulesComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () =>\n          import(`./modules/modules.module`).then((m) => m.ModulesModule),\n        canActivate: [AuthGuard]\n      },\n    ],\n  },\n  {\n    path: '',\n    component: AuthenticationComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () =>\n          import(`./core/authentication/authentication.module`).then(\n            (m) => m.AuthenticationModule\n          ),\n      },\n    ],\n  },\n  {\n    path: '404',\n    component: ErrorNotFoundComponent,\n  },\n  {\n    path: '**',\n    redirectTo: '/'\n  }\n];\n","import { Component, Input, OnInit, EventEmitter, Output, OnChanges, SimpleChanges } from '@angular/core';\nimport { FiltersService } from '../filters.service';\n\n@Component({\n  selector: 'app-selected-filters',\n  templateUrl: './selected-filters.component.html',\n  styleUrls: ['../filters.component.scss']\n})\nexport class SelectedFiltersComponent implements OnInit, OnChanges {\n\n  @Input() selectedFiltersOptions: Array<any> = [];\n  @Output() searchableFilterOptions: EventEmitter<any> = new EventEmitter();\n  \n  constructor(\n    private _filterService: FiltersService\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.searchableFilterOptions.emit(this.selectedFiltersOptions);\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  removeFilter(key:number) {\n    this.selectedFiltersOptions.splice(key, 1);\n    this.searchableFilterOptions.emit(this.selectedFiltersOptions);\n\n    if(!this.selectedFiltersOptions.length) {\n      this._filterService.getJoinedFilters(this.selectedFiltersOptions);\n    }\n  }\n\n  \n\n}\n","<span *ngFor=\"let item of selectedFiltersOptions; let i = index\">\n    <div class=\"filters__item\">\n        {{item[0]}} <i (click)=\"removeFilter(i)\" class=\"fa fa-times\"></i>\n    </div>\n</span>","import { Component, OnInit, Input } from '@angular/core';\nimport { TablesService } from './../tables.service';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-mycelldisplay',\n  templateUrl: './mycelldisplay.component.html',\n  styleUrls: ['./mycelldisplay.component.scss']\n})\nexport class MycelldisplayComponent implements OnInit {\n  faEdit = faEdit\n  faTrashAlt = faTrashAlt\n\n  _value: any\n  @Input()\n  set displayValue(data) {\n    this._value = data\n  }\n  get displayValue() {\n    return this._value\n  }\n  @Input()\n  columnConfig: any\n\n  @Input()\n  rowData: any\n\n  @Input()\n  isActions: boolean = false\n\n  constructor(private _tableSerivce: TablesService) { }\n\n  ngOnInit(): void {\n    if (this.isActions) {\n      console.log(this.valueType)\n    }\n  }\n\n  get valueType() {\n    const val = this.displayValue\n\n    const valType = typeof val\n    if (valType == \"object\") {\n      const isArray = Array.isArray(val);\n      if (isArray)\n        return \"array\"\n    }\n    return valType\n  }\n\n  emitAction(name: string) {\n    this._tableSerivce.emitAction(name, this.rowData)\n  }\n\n}\n","<div *ngIf=\"!isActions\" [ngSwitch]=\"valueType\">\n    <div *ngSwitchCase=\"'array'\">\n        <ul>\n            <li *ngFor=\"let item of displayValue\">{{item}}</li>\n        </ul>\n    </div>\n    <div *ngSwitchCase=\"'boolean'\">\n        <input type=\"checkbox\" [checked]=\"displayValue\" onclick=\"return false;\">\n    </div>\n    <span *ngSwitchDefault>{{displayValue}}</span>\n</div>\n<div class=\"row ml-2\" *ngIf=\"isActions\">\n    <div *ngFor=\"let val of displayValue\" [ngSwitch]=\"val\">\n        <fa-icon (click)=\"emitAction(val)\" *ngSwitchCase=\"'edit'\" [icon]=\"faEdit\" class=\"edit\">\n        </fa-icon>\n        <fa-icon (click)=\"emitAction(val)\" *ngSwitchCase=\"'delete'\" [icon]=\"faTrashAlt\" class=\"delete\"></fa-icon>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FiltersComponent } from '../filters.component';\n\n@Component({\n  selector: 'app-dropdown-filters',\n  templateUrl: './dropdown-filters.component.html',\n  styleUrls: ['../filters.component.scss']\n})\nexport class DropdownFiltersComponent extends FiltersComponent {\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorsService {\n  private errors = new Subject<string[]>();\n\n  constructor() {}\n\n  public addErrors = (errors: string[]): void => this.errors.next(errors);\n\n  public getErrors = () => this.errors.asObservable();\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, take } from 'rxjs/operators';\nimport { AuthService, ErrorsService, StorageService } from 'src/app/services';\nimport { environment } from 'src/environments/environment';\nconst endpoint = environment.APIEndpoint;\n@Injectable()\nexport class Interceptor implements HttpInterceptor {\n  constructor(\n    private _authService: AuthService,\n    private _route: Router,\n    private _errorService: ErrorsService,\n    private _storageService: StorageService\n  ) { }\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const tokenItems =\n      JSON.parse(this._storageService.getItem('token') || '{}') || null;\n\n    const token =\n      tokenItems !== null || tokenItems !== {} ? tokenItems.token : null;\n    \n      console.log(\"Intercepiting...\", token);\n\n    if (token !== null && typeof token !== 'object') {\n      let contentType = 'application/json';\n      if (request.body instanceof FormData) {\n        request = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n      } else {\n        request = request.clone({\n          setHeaders: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`,\n          },\n        });\n      }\n    } else {\n      request = request.clone({\n        setHeaders: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n        },\n      });\n    }\n\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = '';\n        let errorGroup: any = [];\n\n        if (error.error) {\n          if (error.error.detail) {\n            errorMessage = error.error.detail;\n          } else if (error.error.name) {\n            errorMessage = error.error.name[0];\n          } else if (error.error.error_description) {\n            errorMessage = error.error.error_description;\n          } else if (error.error.phone) {\n            errorMessage = error.error.phone[0];\n          } else {\n            for (let x in error.error) {\n              errorGroup.push(error.error[x]);\n            }\n            errorMessage = errorGroup.toString();\n          }\n        }\n        // else {\n        let errorStatus: any;\n        let errorStatusText: string;\n\n        switch (error.status) {\n          case 400:\n            return next.handle(request)\n          case 401:\n            errorStatus = error.status;\n            errorStatusText = 'Oops! You are unauthorized to view this page';\n            console.log('REFRESH TOKEN ERROR:', error);\n            \n            if (\n              error.error.detail ===\n              'Authentication credentials were not provided.'\n            ) {\n              let params = {\n                token: tokenItems.token,\n                refresh_token: tokenItems.tokenRefresh,\n              };\n\n              this._authService\n                .refreshToken(params)\n                .pipe(take(1))\n                .subscribe(() => {\n                  const token = JSON.parse(\n                    this._storageService.getItem('token') || '{}'\n                  ).token;\n                  if (token !== null || token !== {}) {\n                    request = request.clone({\n                      setHeaders: {\n                        'Content-Type': 'application/json',\n                        Accept: 'application/json',\n                        Authorization: `Bearer ${token}`,\n                      },\n                    });\n                    return next.handle(request).pipe(\n                      catchError(err => {\n                        console.error('Refresh Token Issue', err);\n                        return throwError(err);\n                      })\n                    );\n                  }\n                });\n            } else {\n              //logout from account\n              this._route.navigate(['/signin']);\n            }\n            break;\n          case 403:\n            errorStatus = error.status;\n            errorStatusText = 'Oops! You are unauthorized to view this page';\n            this._errorService.addErrors([errorStatusText]);\n            break;\n          // case 403:\n          //     errorStatus = error.status;\n          //     errorStatusText = 'Oops! Media format of the requested data is unsupported';\n\n          //     break;\n          case 500:\n            if (/DoesNotExist|\\/auth\\/token/.test(error.error) ) {\n                this._route.navigate(['/signin']);\n            }\n\n            errorStatus = error.status;\n            errorStatusText =\n              'Oops! You caught us doing some house keeping. Please come back in a few. Sorry for any inconvenience';\n            this._errorService.addErrors([errorStatusText]);\n            break;\n          default:\n            errorStatus = 400;\n            errorStatusText = `Oops! Seems this page was not found`;\n            this._errorService.addErrors([errorStatusText]);\n            break;\n        }\n\n        return throwError(errorMessage);\n      })\n    );\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}