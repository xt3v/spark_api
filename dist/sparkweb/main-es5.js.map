{"version":3,"sources":["webpack:///src/app/core/structure/header/header.component.ts","webpack:///src/app/modules/modules.component.ts","webpack:///src/app/modules/modules.component.html","webpack:///src/app/shared/tables/mytd/mytd.component.ts","webpack:///src/app/shared/tables/mytd/mytd.component.html","webpack:///src/app/shared/modals/modals.service.ts","webpack:///src/app/shared/card/card-dropdown/card-dropdown.component.ts","webpack:///src/app/shared/card/card-dropdown/card-dropdown.component.html","webpack:///src/app/core/authentication/authentication.component.ts","webpack:///src/app/core/authentication/authentication.component.html","webpack:///src/app/shared/side-menu/side-menu.component.html","webpack:///src/app/shared/side-menu/side-menu.component.ts","webpack:///src/app/shared/myform/myform.module.ts","webpack:///src/app/shared/breadcrumb/breadcrumb.component.ts","webpack:///src/app/shared/breadcrumb/breadcrumb.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/shared/modals/confirm-dialog/confirm-dialog.component.ts","webpack:///src/app/shared/modals/confirm-dialog/confirm-dialog.component.html","webpack:///src/app/services/user/user.service.ts","webpack:///src/app/services/storage/storage.service.ts","webpack:///src/app/shared/card/card.component.ts","webpack:///src/app/shared/card/card.component.html","webpack:///src/app/shared/textarea-with-count/textarea-with-count.component.ts","webpack:///src/app/shared/textarea-with-count/textarea-with-count.component.html","webpack:///src/app/shared/toast-notifications/toast-notifications.module.ts","webpack:///src/app/shared/filters/myform/myinput/model.ts","webpack:///src/app/services/forms/form-item.service.ts","webpack:///src/app/shared/filters/myform/myform.component.ts","webpack:///src/app/shared/filters/myform/myform.component.html","webpack:///src/app/shared/tables/tables.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/tables/tables.component.html","webpack:///src/app/shared/tables/tables.component.ts","webpack:///src/app/core/authentication/lock-screen/lock-screen.component.ts","webpack:///src/app/core/authentication/lock-screen/lock-screen.component.html","webpack:///src/app/core/structure/navbar/navbar.component.ts","webpack:///src/app/core/structure/navbar/navbar.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/shared/filters/submit-filters/submit-filters.component.ts","webpack:///src/app/shared/filters/submit-filters/submit-filters.component.html","webpack:///src/app/core/structure/footer/footer.component.ts","webpack:///src/app/shared/ng-multi-select/multi-select.component.ts","webpack:///src/app/shared/ng-multi-select/multi-select.component.html","webpack:///src/app/shared/filters/filters.service.ts","webpack:///src/app/shared/filters/collapsible-filters/collapsible-filters.component.ts","webpack:///src/app/shared/filters/collapsible-filters/collapsible-filters.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/shared/tables/mytablefilter/mytablefilter.component.ts","webpack:///src/app/shared/tables/mytablefilter/mytablefilter.component.html","webpack:///src/app/core/auth-guards/auth.guards.ts","webpack:///src/app/shared/modals/basic/modals.component.ts","webpack:///src/app/shared/modals/basic/modals.component.html","webpack:///src/app/shared/filters/filters.component.ts","webpack:///src/app/shared/filters/filters.component.html","webpack:///src/app/shared/tables/tables.module.ts","webpack:///src/app/shared/filters/myform/myinput/myinput.component.html","webpack:///src/app/shared/filters/myform/myinput/myinput.component.ts","webpack:///src/app/shared/toast-notifications/toast-notifications.service.ts","webpack:///src/app/shared/add-button/add-button.component.ts","webpack:///src/app/shared/add-button/add-button.component.html","webpack:///src/app/services/http/http-service.service.ts","webpack:///src/app/shared/myform/myform.component.ts","webpack:///src/app/shared/myform/myform.component.html","webpack:///src/app/shared/filters/filters.module.ts","webpack:///src/app/services/index.ts","webpack:///src/app/shared/modals/confirm/confirm.component.ts","webpack:///src/app/shared/modals/confirm/confirm.component.html","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/errors/error-not-found/error-not-found.component.ts","webpack:///src/app/core/errors/error-not-found/error-not-found.component.html","webpack:///src/app/shared/filters/myform/myform.module.ts","webpack:///src/app/shared/modals/modals.module.ts","webpack:///src/app/services/authentication/auth.service.ts","webpack:///src/app/shared/myform/myinput/myinput.component.html","webpack:///src/app/shared/myform/myinput/myinput.component.ts","webpack:///src/app/shared/tables/mypagination/mypagination.component.ts","webpack:///src/app/shared/tables/mypagination/mypagination.component.html","webpack:///src/app/shared/ng-multi-select/multi-select.module.ts","webpack:///src/app/shared/toast-notifications/toast-notifications.component.ts","webpack:///src/app/shared/toast-notifications/toast-notifications.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/shared/filters/selected-filters/selected-filters.component.ts","webpack:///src/app/shared/filters/selected-filters/selected-filters.component.html","webpack:///src/app/shared/tables/mycelldisplay/mycelldisplay.component.ts","webpack:///src/app/shared/tables/mycelldisplay/mycelldisplay.component.html","webpack:///src/app/shared/ng-multi-select/multi-select.service.ts","webpack:///src/app/shared/filters/dropdown-filters/dropdown-filters.component.ts","webpack:///src/app/services/errors/errors.service.ts","webpack:///src/app/core/interceptors/interceptor.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HeaderComponent","ModulesComponent","MytdComponent","rowData","isHeaderCell","columnConfig","columnConfigDataType","name","hasOwnProperty","source","columnName","replace","toLocaleLowerCase","toLocaleUpperCase","substr","length","parts","dataSourceName","split","value","tempValue","data","index","key","display_name","CellValueType","cellValue","map","element","arrayDisplayName","val","valType","isArray","Array","ModalsService","rendererFactory","confirmModalSubject","_renderer","createRenderer","divModalBackdrop","createElement","divClasses","forEach","className","addClass","document","body","appendChild","removeClass","removeAttribute","removeChild","message","ok","cancel","_this","createModalBackdropDiv","next","type","text","removeModalBackdropDiv","setConfirmation","CardDropdownComponent","_formService","title","tabbed","selectedTab$","console","log","formDropdownSelectedTab","AuthenticationComponent","version","SideMenuComponent","active","lists","list","MyformModule","BreadcrumbComponent","_route","_activatedRoute","breadcrumbs","buildBreadCrumb","root","breadcrumbsObserver","events","pipe","event","subscribe","unsubscribe","route","url","label","routeConfig","breadcrumb","path","lastRoutePath","pop","isDynamicRoute","startsWith","snapshot","paramName","params","nextUrl","newBreadcrumbs","firstChild","environment","production","APIEndpoint","APIv1Endpoint","APIClientID","confirm_message","ConfirmDialogComponent","_modalService","okButton","hasCancelButton","confirmModalSubscription","UserService","_http","_storageService","get","res","setItem","JSON","stringify","patch","StorageService","storageSub","asObservable","localStorage","getItem","removeItem","CardComponent","TextareaWithCountComponent","count","fistTime","areaCountFormGroup","area_count","required","onChange","onTouch","onChanges","obj","patchValue","fn","valueChanges","elem","filter","e","provide","useExisting","multi","ToastNotificationsModule","InputType","MyInputModel","read_only","options","requied","choices","FormItemService","_toastService","selectedTab","selectedTabChange","isNew","request","post","formData","showToast","err","caught","MyformComponent","fb","http","formGroup","extraParams","onValidatedData","onPostedData","isLoading$","isValidationOnly","loading","initial","formErrors","detailErrors","isLoading","formGroupOrder","fields","formItems","actions","POST","possibleFields","reduce","acc","concat","field","myinputfield","fromJson","includes","defaultField","addControl","fieldcontrol","controls","validators","push","max_length","maxLength","setValidators","formControlName","status","emit","sendDataHttp","valid","showLoader","reset","dataReceived","resetForm","TablesService","_httpService","_filtersService","actionsEvent$","deletedItem$","typeUrl","page_size","page","filters","searchInput","searchName","undefined","id","SharedModule","TablesComponent","_tableService","_filterService","_headers","selectedFilterOptions","hasSideMenu","tableFilters","showNumbering","actionsEvent","tableData","results","liveSearchData","from","_","x","h","searchForm","group","search","getTableData","actionsSubscription","deleteSubscription","item","resultsMeta","ind","indexOf","splice","selectedFiltersSubscriber","getFilters$","subscriptions","subs","toLowerCase","trim","headers","meta","prev","previous","setLoaderStatus","getList","listTypeUrl","tableMetaData","error","liveTableSearch","clearLiveTableSearch","LockScreenComponent","NavbarComponent","_authService","username","getUserDetails","getUserProfile","signOut","AppComponent","_cookieService","_errorsService","ngUnsubscribe","itemsStored","window","addEventListener","Object","values","storageItem","keys","parse","i","clear","location","href","protocol","host","refreshToken","tokenItems","Date","now","refreshTokenTime","token","refresh_token","tokenRefresh","getErrors","errors","routerSubscription","complete","SubmitFiltersComponent","filterUrl","urlToGetFilterData","isDisabled","submitFilters$","selectedFilters","arr","filterItem","join","getJoinedFilters","submitFilters","FooterComponent","date","getFullYear","MultiSelectComponent","multiServ","focus","loader","categories","selection","selected","pre_selection","pre_selection_status","subject","pageSize","formGroupSearch","formGroupCount","parameter","searchingFunc","parseWriteData","ele","sel","responseValueFieldName","getObjValue","editSourceDisplayFieldName","search_text","se","is_update","choice","hasChanged","mapResponseValue","status_idx","paramType","args","searchArgs","searchFieldName","isOfflineSearch","mapPreselectionData","preSelect","valueFieldName","displayFieldName","edit_display_name","edit_source_field","value_field","res_value_field","rawData","search_field","onKeyUp","hideSearchResult","FiltersService","CollapsibleFiltersComponent","AppModule","forRoot","MytablefilterComponent","dropdownList","selectedItems","dropdownSettings","onFilterSelect","filterOptions","item_id","item_text","charAt","toUpperCase","slice","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","items","onItemSelect","onSelectAll","AuthGuard","auth","state","isLoggedIn","hasWebDashboardAccess","navigate","queryParams","returnUrl","ModalsComponent","modalId","confirmBtnName","hasFooter","confirmBtn","FiltersComponent","isInDropdown","enableSubmitFilterButton","selectedFiltersOptions","entries","submitSelectedFilters","searchFilters","TablesModule","MyinputComponent","intital","form","formControName","formControl","sortValidationErrors","getUrlBasedOptions","clearFormError","untouched","setErrors","obscure","multiple","ToastNotificationsService","toastData","toasts","style","setTimeout","AddButtonComponent","clientId","endpoint","endpointV1","HttpService","_httpClient","_location","submitButtonText","tabbedItems","instanceChanged","cardTitle","_instance","checkInstanceChangesUpdateForm","instance","editSource","inst","mapAllTheMultifieldEditSourceFields","markAllAsTouched","post_data","postForm","back","detial","bulkOptions","FiltersModule","ConfirmComponent","CoreModule","useClass","ErrorNotFoundComponent","ModalsModule","AuthService","_userService","role","verified","user","grant_type","client_id","rememberMe","remember_me","set","access_token","tokenExpiry","expires_in","loggedInTime","Math","max","userProfile","refreshTokenInitialTime","put","sessionStorage","MypaginationComponent","selectedPage","totalDisplayedPAges","onPageSelect","round","isAtEnd","hideSomePages","isAtStart","totalPages","isPaginatable","pages","excluded","remPages","addFactor","tempAddFactor","newPage","sort","a","b","addPage","tempvalue","selectPage","ceil","hasNext","hasPrev","MultiSelectModule","ToastNotificationsComponent","toastService","_toasts","faEdit","response","removeToast","AppRoutes","component","children","loadChildren","then","m","ModulesModule","canActivate","AuthenticationModule","redirectTo","SelectedFiltersComponent","searchableFilterOptions","changes","MycelldisplayComponent","_tableSerivce","faTrashAlt","isActions","_value","valueType","displayValue","emitAction","MultiSelectService","DropdownFiltersComponent","ErrorsService","addErrors","Interceptor","_errorService","contentType","FormData","clone","setHeaders","Authorization","Accept","handle","errorMessage","errorGroup","detail","error_description","phone","toString","errorStatus","errorStatusText","test","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","Error","code","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modules',\n  templateUrl: './modules.component.html',\n  styleUrls: ['./modules.component.scss']\n})\nexport class ModulesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-container>\n  <!-- Left Side Bar -->\n  <!-- <app-side-bar></app-side-bar> -->\n  <app-navbar></app-navbar>\n  <!-- Main Content Wrapper -->\n  <div class=\"container-fluid main-content\">\n    <div class=\"container-xl container-md container-sm\">\n\n      <div class=\"row\">\n        <app-breadcrumb></app-breadcrumb>\n      </div>\n      <router-outlet></router-outlet>\n\n\n    </div>\n  </div>\n  <app-footer></app-footer>\n\n  \n  <app-toast-notifications></app-toast-notifications>\n  \n</ng-container>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { toJSDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar';\n\n@Component({\n  selector: 'app-mytd',\n  templateUrl: './mytd.component.html',\n  styleUrls: ['./mytd.component.scss']\n})\nexport class MytdComponent implements OnInit {\n  @Input() columnConfig: any\n  @Input() rowData: any = {}\n  @Input() isHeaderCell: boolean = false\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  get columnConfigDataType() {\n    return typeof this.columnConfig\n  }\n  get columnName(): any {\n    if (this.columnConfigDataType == \"string\")\n      return this.columnConfig\n    if (this.columnConfigDataType == \"object\")\n      return this.columnConfig.name\n    return \"\"\n  }\n\n  get dataSourceName(): any {\n    if (this.columnConfigDataType == \"object\" && this.columnConfig.hasOwnProperty(\"source\"))\n      return this.columnConfig.source\n    return this.columnName.replace(/ /g, \"_\").toLocaleLowerCase()\n  }\n\n  get cellValue(): any {\n    if (this.isHeaderCell)\n      return `${this.columnName[0].toLocaleUpperCase()}${this.columnName.substr(1, this.columnName.length - 1)}`\n    const parts = this.dataSourceName.split(\".\")\n    let value = `\\u2014`;\n    let tempValue = this.rowData;\n    if (this.columnConfigDataType == \"object\") {\n      if (this.columnConfig.hasOwnProperty(\"data\")) {\n        return this.columnConfig.data\n      }\n    }\n    for (let index in parts) {\n      const key = parts[index]\n      if (tempValue.hasOwnProperty(key)) {\n        tempValue = tempValue[key]\n\n        value = tempValue\n      }\n    }\n    return value\n\n  }\n  get arrayDisplayName() {\n    if (this.columnConfigDataType == \"object\" && this.columnConfig.hasOwnProperty(\"display_name\")) {\n      return this.columnConfig.display_name\n    }\n    return this.columnName\n  }\n  get isActions(): boolean {\n    if (this.isHeaderCell) return false\n    if (this.columnConfigDataType == \"object\") {\n      return this.columnConfig.hasOwnProperty(\"type\")\n    }\n    return false\n  }\n\n  get displayValue(): any {\n    if (this.isHeaderCell)\n      return `${this.columnName[0].toLocaleUpperCase()}${this.columnName.substr(1, this.columnName.length - 1)}`\n\n    if (this.columnConfigDataType == \"object\" && this.CellValueType == \"array\") {\n      //Check if there is type in config and pass as it is\n      if (this.columnConfig.hasOwnProperty(\"type\")) {\n        return this.cellValue\n      }\n\n      return this.cellValue.map((element: any) => {\n        if (element.hasOwnProperty(this.arrayDisplayName)) {\n          return element[this.arrayDisplayName]\n        } else {\n          return element\n        }\n        return `No field \"${this.arrayDisplayName}\"`\n      })\n    }\n    return this.cellValue\n  }\n\n  get CellValueType() {\n    const val = this.cellValue\n    const valType = typeof val\n    if (valType == \"object\") {\n      const isArray = Array.isArray(val);\n      if (isArray)\n        return \"array\"\n    }\n    return valType\n  }\n\n}\n","<app-mycelldisplay [rowData]=\"rowData\" [isActions]=\"isActions\" [displayValue]=\"displayValue\"></app-mycelldisplay>","import { Injectable, ViewChild,ElementRef,Renderer2, RendererFactory2 } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n@Injectable()\nexport class ModalsService {\n  private _renderer: Renderer2;\n  @ViewChild('modal-backdrop', { static: false }) divModalBackdrop!: ElementRef;\n  @ViewChild('modal-open', { static: false }) divModalOpen!: ElementRef;\n\n  confirmModalSubject: Subject<any> = new Subject<any>();\n\n  constructor(\n    rendererFactory:RendererFactory2\n  ) { \n    this._renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  createModalBackdropDiv() {\n    this.divModalBackdrop = this._renderer.createElement('div');\n    const divClasses = 'modal-backdrop fade show';\n    divClasses.split(' ').forEach((className: string) => {\n      this._renderer.addClass(this.divModalBackdrop, className);\n    });\n    \n    this._renderer.addClass(document.body, 'modal-open');\n\n    this._renderer.appendChild(document.body, this.divModalBackdrop);\n\n    return this.divModalBackdrop;\n  }\n\n  removeModalBackdropDiv() {\n\n    this._renderer.removeClass(document.body, 'modal-open');\n    this._renderer.removeAttribute(document.body, 'class');\n\n   return this._renderer.removeChild(document.body, this.divModalBackdrop);\n  }\n\n  setConfirmation(message:string, ok: () => void, cancel: () => void):any {\n    const _this = this;\n    this.createModalBackdropDiv();\n    this.confirmModalSubject.next({\n      type: 'prompt',\n      text: message,\n      ok(): any {\n        _this.confirmModalSubject.next();\n        _this.removeModalBackdropDiv();\n        ok();\n      },\n      cancel(): any {\n        _this.confirmModalSubject.next();\n        _this.removeModalBackdropDiv();\n        cancel();\n      }\n    });\n  }\n\n  confirm(message: string, ok: () => void, cancel: () => void ): any {\n    this.setConfirmation(message, ok, cancel);\n  }\n}\n","import { Component, OnInit, Input,EventEmitter, Output  } from '@angular/core';\nimport { FormItemService } from 'src/app/services/forms/form-item.service';\n\n@Component({\n  selector: 'app-card-dropdown',\n  templateUrl: './card-dropdown.component.html',\n  styleUrls: ['../card.component.scss']\n})\nexport class CardDropdownComponent implements OnInit {\n  @Input('title') title: string = '';\n  @Input() tabbed: boolean = false;\n  @Input() tabbedItems: any;\n\n  @Output()\n  selectedTab$: EventEmitter<any> = new EventEmitter()\n\n  constructor(\n    private _formService: FormItemService\n  ) { }\n\n  ngOnInit(): void {\n    console.log('IN CARD COMPONENT', this.tabbed);\n  }\n\n  selectedTab(value: string) {\n    console.log('THE SELECTED TAB', value);\n    this._formService.formDropdownSelectedTab(value);\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card__header has--dropdown\">\n        <ul class=\"nav nav-tabs\">\n            <li *ngFor=\"let item of tabbedItems; let i = index\" class=\"nav-item\">\n                <span class=\"nav-transparent\" [ngClass]=\"{'active': item.active }\"></span>\n                <a href=\"#{{item.prop}}\" data-toggle=\"tab\" class=\"nav-link\" (click)=\"selectedTab(item.prop)\"\n                    [ngClass]=\"{'active': item.active }\"\n                    style=\"color: #535252;  font-family: 'Avenir-Heavy',Helvetica,Arial,serif\">\n                    {{item.label | titlecase}}\n                </a>\n            </li>\n        </ul>\n    </div>\n    <div class=\"card__body\">\n        <div class=\"tab-content\">\n            <div *ngFor=\"let item of tabbedItems; let j = index\" class=\"tab-pane container\"\n                [ngClass]=\"{'active': item.active}\" id=\"{{item.prop}}\">\n                <ng-content *ngIf=\"item.active\"></ng-content>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, VERSION } from '@angular/core';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.scss'],\n})\nexport class AuthenticationComponent implements OnInit {\n  public version = VERSION;\n  constructor() { }\n\n  ngOnInit(): void { }\n}\n","<div class=\"top-padding\">\n  <ng-container>\n    <router-outlet></router-outlet>\n    <app-footer></app-footer>\n  </ng-container>\n</div>","<ul class=\"list-group\">\n    <li class=\"list-group-item d-flex justify-content-between align-items-center list-group-title\">\n        {{title}}\n    </li>\n    <li *ngFor=\"let list of lists\" [routerLink]=\"[list.url]\" [attr.data-active]=\"list.active\"\n        class=\"list-group-item d-flex justify-content-between align-items-center\">\n        {{list.name}}\n        <span class=\"badge badge-pill\"><i [attr.data-active]=\"list.active\"\n                class=\"fas fa-chevron-right right-icon-config\"></i></span>\n    </li>\n</ul>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.scss']\n})\nexport class SideMenuComponent implements OnInit {\n\n  @Input() title: string = '';\n  @Input() lists: any;\n  @Input() active: string = '';\n  \n  constructor() { }\n\n  ngOnInit(): void {\n    console.log('IN SIDE MENU', this.lists);\n    this.lists.map((list:any) => {\n      list.active = list.name === this.active;\n    })\n    \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule ,FormsModule} from '@angular/forms';\n\nimport { MyformComponent } from './myform.component';\nimport { MyinputComponent } from './myinput/myinput.component';\nimport { CardComponent } from '../card/card.component';\nimport { CardDropdownComponent } from '../card/card-dropdown/card-dropdown.component';\nimport { ModalsModule } from '../modals/modals.module';\nimport { MultiSelectModule } from '../ng-multi-select/multi-select.module';\n\n@NgModule({\n  declarations: [\n    MyformComponent,\n    MyinputComponent,\n    CardComponent,\n    CardDropdownComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    ModalsModule,\n    MultiSelectModule,\n    FormsModule\n  ],\n  exports: [\n    MyformComponent,\n    MyinputComponent,\n    CardComponent,\n    CardDropdownComponent\n  ]\n})\nexport class MyformModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Event, Router } from '@angular/router';\nimport { distinctUntilChanged, filter, first } from 'rxjs/operators';\n\nexport interface IBreadCrumb {\n  label: string;\n  url: string;\n}\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit, OnDestroy {\n  public breadcrumbs: IBreadCrumb[];\n  private breadcrumbsObserver : any;\n\n  constructor(\n    private _route: Router,\n    private _activatedRoute: ActivatedRoute\n  ) { \n    this.breadcrumbs = this.buildBreadCrumb(this._activatedRoute.root);\n  }\n\n  ngOnInit(): void {\n    this.breadcrumbsObserver = this._route.events.pipe( \n      filter((event: Event) => event instanceof NavigationEnd),\n      distinctUntilChanged(),\n    ).subscribe(() => {\n      this.breadcrumbs = this.buildBreadCrumb(this._activatedRoute.root);\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.breadcrumbsObserver.unsubscribe();\n  }\n\n  /**\n   * Recursively build breadcrumb according to the activated route.\n   * @param route \n   * @param url \n   * @param breadcrumbs\n   */\n  buildBreadCrumb(route: ActivatedRoute, url: string = '', breadcrumbs: IBreadCrumb[] = []): IBreadCrumb[] {\n    //If no routeConfig available we're on root path\n    let label = route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '';\n    let path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n\n    //if the route is dynamic route such as ':id' or ':slug' remove it\n    const lastRoutePath = path?.split('/').pop();\n    const isDynamicRoute = lastRoutePath?.startsWith(':');\n\n    if (isDynamicRoute && !!route.snapshot) {\n      const paramName = lastRoutePath?.split(':')[1];\n      path = path?.replace(lastRoutePath!, route.snapshot.params[paramName!]);\n      label = route.snapshot.params[paramName!];\n    }\n\n    //in the routeConfig the complete path is not available so we rebuild it each time\n    const nextUrl = path ? `${url}/${path}` : url;\n\n    const breadcrumb: IBreadCrumb = {\n      label: label,\n      url: nextUrl\n    };\n\n    //only add route with non-empty label\n    const newBreadcrumbs = breadcrumb.label ? [...breadcrumbs, breadcrumb] : [ ... breadcrumbs];\n\n    if (route.firstChild) {\n      // if we are not on our current path yet there will be more children to look after to build our breadcrumb\n      return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n    }\n    return newBreadcrumbs;\n  }\n}\n","<ol class=\"breadcrumb\">\n    <li *ngFor=\"let breadcrumb of breadcrumbs\">\n        <span [routerLink]=\"breadcrumb.url\" routerLinkActive=\"router-link-active\">\n            {{breadcrumb.label}}\n        </span>\n    </li>\n</ol>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n//TODO -> Pull the environments from a dotenv for security purposes\nexport const environment = {\n  production: false,\n  APIEndpoint: 'http://172.105.88.80:8080/',\n  APIv1Endpoint: 'http://172.105.88.80:8080/api/v1/',\n  APIClientID : 'fbaPXGrD6wewVEqoOkJfvierIrYbnROPXMa8CDv5'\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ModalsComponent } from '../basic/modals.component';\nimport { ModalsService } from '../modals.service';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss']\n})\nexport class ConfirmDialogComponent extends ModalsComponent implements OnInit, OnDestroy {\n  @Input() okButton: string = 'OK';\n  @Input() hasCancelButton: boolean = true;\n  \n  confirm_message:any;\n  confirmModalSubscription:any;\n\n  constructor(\n    private _modalService: ModalsService\n  ) {\n    super();\n   }\n\n  ngOnInit(): void {\n    this.confirmModalSubscription = this._modalService.confirmModalSubject.subscribe(message => {\n      console.log(\"SHOULD OPEN THE MODAL\", message);\n      this.confirm_message = message;\n     })\n  }\n\n  ngOnDestroy(): void {\n    if (this.confirmModalSubscription) {\n      this.confirmModalSubscription.unsubscribe();\n    }\n  }\n\n}\n","<div *ngIf=\"confirm_message\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" [ngClass]=\"{'show': confirm_message }\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n        <div class=\"modal-body\">\n            <div class=\"confirm__modal\">\n                <button type=\"button\" class=\"close\" (click)=\"confirm_message.cancel()\">&times;</button>\n                <span *ngIf=\"confirm_message.type == 'prompt'\" class=\"confirm__message\">{{confirm_message.text}}</span>\n                <div class=\"confirm__buttons\">\n                    <button type=\"button\" *ngIf=\"hasCancelButton\" class=\"btn btn-secondary cancel\" (click)=\"confirm_message.cancel()\">Cancel</button>\n                    <button type=\"button\" class=\"btn btn-secondary confirm\" (click)=\"confirm_message.ok()\">{{okButton}}</button>\n                </div>\n            </div>\n        </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { StorageService } from 'src/app/services';\nimport { HttpService } from '../http/http-service.service';\n\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  user: any;\n\n  constructor(\n    private _http: HttpService,\n    private _storageService: StorageService\n  ) {}\n\n  userProfile(): Observable<any> {\n    return this._http.get<any>('users/me').pipe(\n      map(res => {\n        console.log('THE USER PROFILE', res);\n        this._storageService.setItem('userDetails', JSON.stringify(res));\n        return res;\n      })\n    );\n  }\n\n  editUserProfile(data: any) {\n    return this._http.patch('users/me', data).pipe(\n      map(res => {\n        this._storageService.setItem('userDetails', JSON.stringify(res));\n        return res;\n      })\n    );\n  }\n\n  uploadUserImage(data: any) {\n    // const options = {\n    //   params: new HttpParams(),\n    //   reportProgress: true,\n    // }\n    return this._http.patch<any>('users/me/profile', data).pipe(\n      map(res => {\n        // localStorage.setItem('userDetails', JSON.stringify(res));\n        this._storageService.setItem('userDetails', JSON.stringify(res));\n        return res;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageService {\n  private storageSub = new Subject<String>();\n\n  watchStorage(): Observable<any> {\n    return this.storageSub.asObservable();\n  }\n\n  setItem(key: string, data: any) {\n    localStorage.setItem(key, data);\n    this.storageSub.next(key);\n  }\n\n  getItem(key: any) {\n    return localStorage.getItem(key);\n  }\n\n  removeItem(key: any) {\n    localStorage.removeItem(key);\n    this.storageSub.next(key);\n  }\n\n  constructor() {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n  @Input('title') title: string = '';\n  @Input() tabbed: boolean = false;\n  @Input() tabbedItems: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <h6>{{ title }}</h6>\n    </div>\n    <div class=\"card-body\">\n        <ng-content></ng-content>\n    </div>\n</div>","import { Component, OnInit, forwardRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-textarea-with-count',\n  templateUrl: './textarea-with-count.component.html',\n  styleUrls: ['./textarea-with-count.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextareaWithCountComponent),\n      multi: true\n    }]\n})\nexport class TextareaWithCountComponent implements OnInit, ControlValueAccessor {\n\n  count: number = 0\n  fistTime = true\n  areaCountFormGroup = new FormGroup({\n    area_count: new FormControl('', Validators.required)\n  })\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.onChanges()\n  }\n  onChange: any = () => { }\n  onTouch: any = () => {\n    console.log(\"touched...\")\n  }\n  writeValue(obj: any): void {\n    this.areaCountFormGroup.patchValue({\n      area_count: obj\n    })\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn\n  }\n\n  onChanges(): void {\n    this.areaCountFormGroup.valueChanges.pipe(\n      debounceTime(500),\n      distinctUntilChanged()\n    ).subscribe(elem => {\n      if (!this.fistTime) {\n        this.onChange(elem.area_count)\n        let count = 0\n        if (elem.area_count) {\n          count = elem.area_count.split(',').filter((e: any) => e != \"\").length\n        }\n        this.count = count\n      }\n      this.fistTime = false\n\n    })\n  }\n}\n","<form [formGroup]=\"areaCountFormGroup\">\n    <div class=\"row\">\n        <textarea class=\"form-control form-control-lg opt-value\" rows=\"4\" cols=\"50\" class=\"form-control\"\n            formControlName=\"area_count\" (blur)=\"onTouch()\"></textarea>\n    </div>\n    <div class=\"row pt-1\">\n        <small><b>{{ count }}</b> items</small>\n    </div>\n</form>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastNotificationsComponent } from './toast-notifications.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastNotificationsService } from './toast-notifications.service';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n\n@NgModule({\n  declarations: [ToastNotificationsComponent],\n  imports: [\n    CommonModule,\n    NgbModule,\n    FontAwesomeModule\n  ],\n  exports: [\n    ToastNotificationsComponent\n  ],\n  providers: []\n})\nexport class ToastNotificationsModule { }\n","\nenum InputType {\n    integer,\n    datetime,\n    string\n}\n\nclass MyInputModel {\n    name: String;\n    type: string;\n    required: boolean;\n    read_only: boolean;\n    options: any\n    constructor(\n        name: String,\n        type?: string,\n        required?: boolean,\n        read_only?: boolean,\n        options?: any\n    ) {\n        this.name = name\n        this.options = options || {}\n        this.type = type || \"\"\n        this.required = required || false\n        this.read_only = read_only || false\n    }\n\n    static fromJson(name: string, obj: any): MyInputModel {\n        return new MyInputModel(name, obj.type, obj.requied,\n            obj.read_only, obj.choices || {});\n    }\n}\n\n\nexport {\n    InputType,\n    MyInputModel\n}","import { Injectable } from '@angular/core';\nimport {  Observable, Subject } from 'rxjs';\nimport { tap } from 'rxjs/internal/operators/tap';\nimport { ToastNotificationsService } from 'src/app/shared/toast-notifications/toast-notifications.service';\nimport { catchError } from 'rxjs/operators';\nimport { HttpService } from '../http/http-service.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FormItemService {\n  selectedTab: string = '';\n  selectedTabChange: Subject<string> = new Subject<string>();\n  // selectedTab: BehaviorSubject<string> | undefined;\n\n  constructor(\n    private _http: HttpService,\n    private _toastService: ToastNotificationsService\n  ) { \n    // this.selectedTab = new BehaviorSubject(this.tab);\n    // this.selectedTabChange.subscribe((value) => {\n    //   this.selectedTab = value;\n    // })\n  }\n\n  postForm(isNew: boolean, data: any) {\n    let request: Observable<any>;\n    if (isNew) {\n      request = this._http.post<any>(data.url, data.formData)\n        .pipe(\n          tap(data => {\n            this._toastService.showToast(\"Successfully added Record\", \"success\");\n          }),\n          catchError((err, caught) => {\n            this._toastService.showToast(\"Error Posting Record\", \"danger\");\n            return Observable.throw(err);\n          })\n        );\n    } else {\n      request = this._http.patch<any>(data.url, data.formData)\n      .pipe(\n        tap(data => {\n          this._toastService.showToast(\"Successfully edited Record\", \"success\");\n        }),\n        catchError((err, caught) => {\n          this._toastService.showToast(\"Error editing Record\", \"danger\");\n          return Observable.throw(err);\n        })\n      );\n    }\n    return request\n  }\n\n  formDropdownSelectedTab(data: string) {\n    console.log('THE SELECTED TAB IN SERVICE', data);\n    this.selectedTabChange.next(data);\n  }\n\n  getDropdownValues(url:string){\n    return this._http.get<any>(url);\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MY_EXAMPLE_OPTIONS_DATA } from './myfields';\nimport { MyInputModel} from './myinput/model';\nimport { FormBuilder, FormGroup, FormControl, AbstractControl, Validators } from '@angular/forms';\nimport { HttpService } from 'src/app/services';\n\n\n@Component({\n  selector: 'app-myform',\n  templateUrl: './myform.component.html',\n  styleUrls: ['./myform.component.scss']\n})\nexport class MyformComponent implements OnInit {\n\n  @Input()\n  formGroup: FormGroup = new FormGroup({});\n\n  @Input()\n  formItems: any\n\n  @Input()\n  extraParams: any = {}\n\n  @Output()\n  onValidatedData = new EventEmitter<any>();\n\n  @Output()\n  onPostedData = new EventEmitter<any>();\n\n  @Output()\n  isLoading$ = new EventEmitter<boolean>();\n\n  @Input()\n  isValidationOnly: boolean = false\n\n  @Input()\n  url: string = \"\"\n  @Input()\n  formGroupOrder!: Array<Array<string>>;\n\n  @Input() loading: boolean = false;\n\n  initial: boolean = false\n  formErrors: any = {}\n  detailErrors: any = []\n  isLoading: boolean = false;\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpService\n\n  ) {\n  }\n\n  ngOnChanges() {\n    if (this.formGroupOrder && !this.initial) {\n      this.initial = false\n      const fields = this.formItems.actions.POST;\n      const possibleFields = this.formGroupOrder.reduce((acc, val) => acc.concat(val), [])\n\n      for (var key in fields) {\n        const field = fields[key];\n        const myinputfield = MyInputModel.fromJson(key, field);\n        if (field.read_only || !possibleFields.includes(key)) {\n          continue\n        }\n\n        const defaultField = field.type == \"boolean\" ? false : \"\"\n        this.formGroup.addControl(\n          key, new FormControl(defaultField, [\n          ])\n        )\n        const fieldcontrol = this.formGroup.controls[key]\n        const validators = []\n\n        if (field.required) {\n          validators.push(Validators.required)\n        }\n\n        if (field.max_length) {\n          validators.push(Validators.maxLength(field.max_length))\n        }\n\n        if (validators.length > 0) {\n          fieldcontrol.setValidators(validators)\n        }\n      }\n    }\n  }\n\n  getDescriptionObject(formControlName: string) {\n    return this.formItems.actions.POST[formControlName];\n  }\n\n  getFieldNameErros(formControlName: string) {\n    return this.formErrors[formControlName]\n  }\n\n  ngOnInit(): void {\n  }\n\n  showLoader(status: boolean) {\n    this.isLoading = status\n    this.isLoading$.emit(status)\n  }\n\n  dataReceived() {\n    this.detailErrors = []\n    if (true) {\n      const data = { ...this.formGroup.value, ...this.extraParams }\n      if (this.isValidationOnly) {\n        this.onValidatedData.emit(data)\n      } else {\n        this.sendDataHttp(data)\n      }\n    } else { }\n  }\n\n  get myFormValid(): boolean {\n    return this.formGroup.valid\n  }\n\n  sendDataHttp(data: any) {\n    this.showLoader(true)\n    this.formErrors = []\n  }\n\n  getControl(name: string): AbstractControl {\n    return this.formGroup.get(name) || new FormControl()\n  }\n\n  resetForm() {\n    this.formGroup.reset();\n  }\n\n  bulkOptions() { }\n\n}\n","<div class=\"container\">\n    <form class=\"\" [formGroup]=\"formGroup\" (ngSubmit)=\"dataReceived()\">\n        <span *ngFor=\"let error of detailErrors\" class=\"text-danger\">\n            {{error}} <br>\n        </span>\n        <div>\n            <div *ngFor=\"let item of formGroupOrder;let i=index;\">\n                <div class=\"row\">\n                    <div *ngFor=\"let field of item;let j=index;\" class=\"col-sm-{{12/item.length}}\">\n                        <app-myinput [formErrors]=\"formErrors\" [data]=\"getDescriptionObject(field)\" [form]=\"formGroup\"\n                            formControName=\"{{field}}\">\n                        </app-myinput>\n                    </div>\n                </div>\n            </div>\n            <br>\n        </div>\n\n        <div class=\"spark-dynamic-forms__button-wrapper\">\n            <button type=\"button\" (click)=\"resetForm()\"\n                class=\"btn btn-light  btn-sm mb-3 lift spark-dynamic-forms__clear\">Clear</button>\n            <button type=\"submit\" class=\"btn btn-primary mb-3 lift spark-dynamic-forms__submit\">\n                <span>\n                    {{isLoading?'Loading...': 'Add Options'}}\n                </span>\n            </button>\n        </div>\n    </form>\n</div>","import { Injectable, EventEmitter } from '@angular/core';\n\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap, catchError } from 'rxjs/operators';\nimport { FiltersService } from '../filters/filters.service';\nimport { ToastNotificationsService } from '../toast-notifications/toast-notifications.service';\nimport { HttpService } from 'src/app/services';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TablesService {\n\n  actionsEvent$: EventEmitter<any> = new EventEmitter();\n  deletedItem$: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private _httpService : HttpService,\n    private _filtersService: FiltersService,\n    private _toastService: ToastNotificationsService\n  ) {\n\n  }\n\n  getList(typeUrl: string, page_size: number, page: number, filters: Array<any>, searchInput: string): Observable<any> {\n\n    //const filterOpt = typeof filters !== 'undefined' && filters.length ? this.getFilters(filters) : '';\n    const searchName = typeof searchInput !== undefined && searchInput !== null ? searchInput : null;\n\n    return this._httpService.get<any>(`${typeUrl}/?page_size=${page_size}&page=${page}&${filters}&name=${searchName}`);\n  }\n\n  emitAction(name: string, data: any) {\n    console.log('THE NAME', name, 'THE DATA', data);\n    this.actionsEvent$.emit({ name: name, data: data })\n  }\n\n  //TO REMOVE\n  // getFilters(filters:any) {\n  //   let filterOpt: Array<any> = [];\n  //   filters.map((filter:any) => {\n  //     filterOpt.push(filter.item_prop);\n  //   });\n  //   return filterOpt.join(\"&\");\n  // }\n\n  delete(data: any, typeUrl: string) {\n    //TODO -> Send an alert if delete not possible\n    return this._httpService.delete<any>(`${typeUrl}/${data.id}`).pipe(\n      switchMap(async () => {\n        this.deletedItem$.emit(data)\n        this._toastService.showToast(\"Successfully deleted record\", 'info')\n      }\n      ),\n      catchError((err, caught) => {\n        this._toastService.showToast(\"Error deleting record\", 'danger')\n        return Observable.throw(err)\n      })\n    );\n  }\n}\n","/** Angular imports */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {  HTTP_INTERCEPTORS } from '@angular/common/http';\n\n\n/** App Interceptor */\nimport { Interceptor } from '../core/interceptors/interceptor';\n\n/** Custom modules */\nimport { ModalsModule } from './modals/modals.module';\nimport { MyformModule } from './myform/myform.module';\nimport { ToastNotificationsModule } from './toast-notifications/toast-notifications.module';\n\n/** Components */\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\nimport { TablesModule } from './tables/tables.module';\nimport { AddButtonComponent } from './add-button/add-button.component';\nimport { FiltersModule } from './filters/filters.module';\nimport { SideMenuComponent } from './side-menu/side-menu.component';\nimport { TextareaWithCountComponent } from './textarea-with-count/textarea-with-count.component';\nimport { MultiSelectModule } from './ng-multi-select/multi-select.module';\n// import { CardComponent } from './card/card.component'\n// import { CardDropdownComponent } from './card/card-dropdown/card-dropdown.component';\n\n@NgModule({\n  declarations: [\n    BreadcrumbComponent, AddButtonComponent,\n    SideMenuComponent, TextareaWithCountComponent ,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    ModalsModule,\n    MyformModule,\n    TablesModule,\n    FiltersModule,\n    ToastNotificationsModule,\n    MultiSelectModule\n  ],\n  exports: [\n    FormsModule,\n    MyformModule,\n    ReactiveFormsModule,\n    ModalsModule,\n    TablesModule,\n    FiltersModule,\n    ToastNotificationsModule,\n    BreadcrumbComponent,\n    AddButtonComponent,\n    SideMenuComponent,\n    TextareaWithCountComponent,\n    MultiSelectModule\n  ],\n  providers :[\n  \n  ]\n})\nexport class SharedModule { }\n","<div class=\"container\">\n  <div class=\"row\">\n    <!-- todo: add filters -->\n    <div class=\"search-section spark-dynamic-forms__bulk-wrapper mb-3\">\n      <form [formGroup]=\"searchForm\" class=\"form-inline\">\n        <input name=\"searchTableInput\" class=\"form-control mr-2 search-input\" aria-label=\"Table list\"\n          formControlName=\"search\" (ngModelChange)=\"liveTableSearch($event)\" type=\"text\"\n          placeholder=\"{{!loading ? 'Search item' : 'Searching...'}}\" />\n\n        <button type=\"button\" (click)=\"clearLiveTableSearch()\" class=\"btn btn-light btn-sm mr-3\"><i\n            class=\"glyphicon glyphicon-remove\"></i>Clear</button>\n      </form>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"table-responsive\">\n      <table class=\"table\">\n        <thead>\n          <th *ngIf=\"showNumbering\">#</th>\n          <th *ngFor=\"let title of tableHeaders;let i = index\">\n            <app-mytd [columnConfig]=\"title\" [isHeaderCell]=true></app-mytd>\n          </th>\n        </thead>\n        <tbody *ngIf=\"results.length && !loading\">\n          <tr *ngFor=\"let row of results;let j=index; \">\n            <th *ngIf=\"showNumbering\">{{(j+1)+(page_size*(page-1))}}</th>\n            <td *ngFor=\"let header of tableHeaders; let j = index;\">\n              <app-mytd [columnConfig]=\"header\" [rowData]=\"row\"></app-mytd>\n            </td>\n          </tr>\n        </tbody>\n        <tbody *ngIf=\"loading\">\n          <tr *ngFor=\"let value of tableData\">\n            <th *ngIf=\"showNumbering\"><span class=\"linear-background\"></span></th>\n            <td *ngFor=\"let value of tableHeaders\">\n              <span class=\"linear-background\"></span>\n            </td>\n          </tr>\n        </tbody>\n        <tbody *ngIf=\"results.length < 1 && !loading\">\n          <td class=\"pt-4\">No data available</td>\n        </tbody>\n      </table>\n    </div>\n    <app-mypagination [selectedPage]=\"page\" [pageSize]=\"page_size\" (onPageSelect)=\"onPageSelect($event)\"\n      [resultsMeta]=\"resultsMeta\" *ngIf=\"!loading\"></app-mypagination>\n  </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core'\nimport { FormBuilder, FormGroup } from '@angular/forms'\nimport { debounceTime, switchMap, take } from 'rxjs/operators'\nimport { FiltersService } from '../filters/filters.service'\n\nimport { TablesService } from './tables.service'\n\n@Component({\n  selector: 'app-tables',\n  templateUrl: './tables.component.html',\n  styleUrls: ['./tables.component.scss'],\n})\nexport class TablesComponent implements OnInit {\n  public searchForm!: FormGroup\n  public filterForm!: FormGroup\n\n  _headers: Array<any> = []\n  selectedFilterOptions: Array<any> = []\n\n\n  @Input() filterFormItems: any\n\n  @Input() hasSideMenu: boolean = false\n\n  @Input()\n  listTypeUrl!: string\n\n  @Input() tableFilters: Array<any> = []\n\n  @Input()\n  page_size: number = 10\n\n  @Input()\n  showNumbering: boolean = true\n\n  @Output()\n  actionsEvent: EventEmitter<any> = new EventEmitter()\n\n  selectedFiltersSubscriber: any\n\n  @Input()\n  set headers(value) {\n    this._headers = value\n    this.tableData = Array.from({ length: this.page_size }, (_, x) => x).map(h => {\n      return { data: \"\" }\n    })\n  }\n\n  get headers() {\n    return this._headers\n  }\n\n  page: number = 1\n  tableData: any[] = []\n  loading: boolean = false\n  results: any[] = []\n  resultsMeta: any\n  actionsSubscription: any\n  deleteSubscription: any\n  liveSearchData: string = ''\n\n  constructor(\n    private _tableService: TablesService,\n    private _filterService: FiltersService,\n    private fb: FormBuilder,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.searchForm = this.fb.group({\n      search: '',\n    })\n    this.getTableData()\n    this.actionsSubscription = this._tableService.actionsEvent$.subscribe(event => {\n      this.actionsEvent.emit(event)\n    })\n\n    this.deleteSubscription = this._tableService.deletedItem$.subscribe(item => {\n      console.log('THE DELETED ITEM', item)\n      if (this.resultsMeta.count > this.page_size && this.resultsMeta.count !== this.page_size) {\n        this.getTableData()\n      } else {\n        const ind = this.results.indexOf(item)\n        this.results.splice(ind, 1)\n        this.resultsMeta.count = this.results.length\n      }\n    })\n\n    this.selectedFiltersSubscriber = this._filterService.getFilters$.subscribe(data => {\n      console.log('IN TABLE SERVICE', data)\n      this.selectedFilterOptions = data\n      this.getTableData()\n    })\n  }\n\n  ngOnDestroy() {\n    const subscriptions = [this.actionsSubscription, this.deleteSubscription, this.selectedFiltersSubscriber]\n    subscriptions.forEach(subs => {\n      if (subs) {\n        subs.unsubscribe()\n      }\n    })\n  }\n\n  liveTableSearch(value: string): void {\n    this.searchForm.get('search')?.valueChanges.pipe(\n      debounceTime(500),\n      switchMap(async (data) => {\n        this.getTableData(data.toLowerCase().trim())\n      }))\n      .pipe(take(1))\n      .subscribe(() => { })\n  }\n\n  clearLiveTableSearch() {\n    this.liveSearchData = ''\n    return this.searchForm.reset()\n  }\n\n  setLoaderStatus(status: boolean): void {\n    this.loading = status\n  }\n  onPageSelect(page: number) {\n    this.page = page\n    this.getTableData()\n  }\n  get tableHeaders(): any[] {\n    return this.headers\n  }\n\n  tableMetaData(meta: any): void {\n    if (meta.hasOwnProperty(\"next\")) {\n      this.resultsMeta = {\n        next: meta.next,\n        prev: meta.previous,\n        count: meta.count\n      }\n    }\n  }\n\n  getTableData(data: any = '') {\n    this.setLoaderStatus(true)\n    this._tableService.getList(this.listTypeUrl, this.page_size, this.page, this.selectedFilterOptions, data)\n      .pipe(take(1))\n      .subscribe((res) => {\n\n        console.log(data)\n        console.log(res)\n\n        this.setLoaderStatus(false)\n        this.results = res.results\n        this.tableMetaData(res)\n\n      }, error => {\n        this.setLoaderStatus(false)\n      })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lock-screen',\n  templateUrl: './lock-screen.component.html',\n  styleUrls: ['./lock-screen.component.scss']\n})\nexport class LockScreenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>lock-screen works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  username: string = 'User';\n  constructor(\n    private _route: Router,\n    private _authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.getUserDetails();\n  }\n\n  getUserDetails() {\n    this.username = this._authService.getUserProfile().username;\n  }\n  signOut() {\n    this._authService.signOut();\n  }\n\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container\">\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerMainMenu\"\n            aria-controls=\"navbarTogglerMainMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"navbar-brand\">\n            <a [routerLink]=\"['/home']\">\n                <img class=\"navbar-logo\" src=\"../../../../assets/img/logo/spark-logo-trans-bg.png\">\n            </a>\n        </div>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarTogglerMainMenu\">\n            <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item pr-3 active\">\n                    <a class=\"nav-link\" [routerLink]=\"['/']\">Dashboard <span class=\"sr-only\">(current)</span></a>\n                </li>\n                <li class=\"nav-item pr-3 dropdown\">\n                    <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Administration\n                    </a>\n                    <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                        <a class=\"dropdown-item\" [routerLink]=\"['/accounts']\">Accounts</a>\n                        <a class=\"dropdown-item\" [routerLink]=\"['/suppliers']\">Suppliers</a>\n                        <a class=\"dropdown-item\" [routerLink]=\"['/warehouse/list']\">Warehouses</a>\n                        <a class=\"dropdown-item\" [routerLink]=\"['/stockroom/list']\">Stockrooms</a>\n                        <div class=\"dropdown-divider\"></div>\n                <li class=\"dropdown-sub-menu\">\n                    <a class=\"dropdown-item\" href=\"#\">Configurations</a>\n                    <ul class=\"dropdown-menu\">\n                        <li><a [routerLink]=\"['/configs/list-item-type']\">Item Type</a></li>\n                        <li><a [routerLink]=\"['/configs/list-item-configs']\">Item</a></li>\n                        <li><a [routerLink]=\"['/configs/list-box-config']\">Box</a></li>\n                        <li><a [routerLink]=\"['/configs/list-kit-config']\">Kit</a></li>\n                        <li><a [routerLink]=\"['/configs/list-pay-go-providers']\">Pay Go\n                                Providers</a></li>\n                        <li><a [routerLink]=\"['/configs/list-price-groups']\">Price Group</a></li>\n                        <li><a [routerLink]=\"['/configs/list-product-configs']\">Product</a></li>\n\n                    </ul>\n                </li>\n        </div>\n        </li>\n        <li class=\"nav-item pr-3 dropdown\">\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n                aria-haspopup=\"true\" aria-expanded=\"false\">\n                Inventory\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <a class=\"dropdown-item\" [routerLink]=\"['/list-boxes']\">Boxes</a>\n                <a class=\"dropdown-item\" [routerLink]=\"['/inventory/list']\">Items</a>\n                <a class=\"dropdown-item\" [routerLink]=\"['/products/list']\">Products</a>\n                <div class=\"dropdown-divider\"></div>\n                <a class=\"dropdown-item\" [routerLink]=\"['/inventory/move']\">Move Stock</a>\n            </div>\n        </li>\n        <li class=\"nav-item pr-3\">\n            <a class=\"nav-link\" [routerLink]=\"['/customers/list']\">Customers</a>\n        </li>\n        <li class=\"nav-item pr-3\">\n            <a class=\"nav-link disabled\" href=\"#\">Payments</a>\n        </li>\n        </ul>\n        <div class=\"form-inline my-2 my-lg-0\">\n            <li class=\"nav-item dropdown form-inline my-2 my-lg-0 user-profile-wrapper\">\n                <a class=\"nav-link dropdown-toggle user-profile\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\n                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    {{username}}\n                </a>\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                    <a (click)=\"signOut()\" class=\"dropdown-item\" href=\"#\">Sign out</a>\n                </div>\n            </li>\n        </div>\n    </div>\n    </div>\n</nav>","import { OnInit, Component } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { AuthService, ErrorsService, StorageService } from './services';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  private ngUnsubscribe = new Subject();\n  private routerSubscription: any;\n  title = 'sparkweb';\n\n  constructor(\n    private _cookieService: CookieService,\n    private _errorsService: ErrorsService,\n    private _storageService: StorageService,\n    private _authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //const currentUserId = JSON.parse(this._storageService.getItem('userDetails') || '{}');\n\n    const itemsStored = ['token', 'userDetails'];\n\n    window.addEventListener('storage', function () {\n      Object.values(localStorage).forEach(item => {\n        let storageItem = Object.keys(JSON.parse(item));\n        for (let i = 0; i < storageItem.length; i++) {\n          if (itemsStored.indexOf(storageItem[i]) > -1) {\n            continue;\n          } else {\n            localStorage.clear();\n            window.location.href = `${window.location.protocol}//${window.location.host}/signin`;\n            break;\n          }\n        }\n      });\n    });\n\n    if (\n      this._cookieService.get('rememberMe') ||\n      localStorage.getItem('rememberMe')\n    ) {\n      this.refreshToken();\n    }\n  }\n\n  private refreshToken() {\n    const tokenItems =\n      JSON.parse(this._storageService.getItem('token') || '{}') || null;\n\n    if (\n      (tokenItems !== undefined && tokenItems !== null) ||\n      tokenItems !== {}\n    ) {\n      if (Date.now() > tokenItems.refreshTokenTime) {\n        let params = {\n          token: tokenItems.token,\n          refresh_token: tokenItems.tokenRefresh,\n        };\n\n        this._authService.refreshToken(params);\n      }\n    }\n  }\n\n  private initializeErrors() {\n    this._errorsService\n      .getErrors()\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(errors => {\n        console.log('STATUS ERRORS: Show through the modal service', errors);\n\n        //TODO -> Create the modal Service\n        // const modalRef = this._modalService.open(PromptComponent);\n\n        // modalRef.componentInstance.message = errors.toString();\n        // modalRef.componentInstance.button = 'Confirm';\n        // modalRef.componentInstance.title = 'STATUS ERROR';\n      });\n  }\n\n  ngOnDestroy() {\n    this.routerSubscription.unsubscribe();\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","<router-outlet></router-outlet>","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { TablesService } from '../../tables/tables.service';\nimport { FiltersService } from '../filters.service';\n\n@Component({\n  selector: 'app-submit-filters',\n  templateUrl: './submit-filters.component.html',\n  styleUrls: ['../filters.component.scss']\n})\nexport class SubmitFiltersComponent implements OnInit, OnDestroy {\n  @Input() filterUrl: string = '';\n  private selectedFilters: any;\n  private urlToGetFilterData: string = '';\n  public isDisabled: boolean = true;\n  public selectedFiltersSubscriber: any;\n\n  constructor(\n    private _filterService: FiltersService,\n    private _tableService: TablesService\n  ) { }\n\n  ngOnInit(): void {\n    this.selectedFiltersSubscriber = this._filterService.submitFilters$.subscribe(data => {\n\n      data.data === undefined || !data.data.length ? this.isDisabled = true : this.isDisabled = false;\n\n      if (data) {\n        this.selectedFilters = data.data;\n        this.urlToGetFilterData = data.url;\n      } \n    })\n  }\n\n  submitFilters() {\n    if(this.selectedFilters === undefined && this.urlToGetFilterData === undefined ) {\n      return;\n    }\n    \n    let filters:any = [];\n    let data = this.selectedFilters;\n    const url = this.urlToGetFilterData\n    \n    data.map((item:any) => {\n      let arr = {}\n      let filterItem = `${item[0]}=${item[1]}` \n      arr = filterItem;\n      filters.push(arr);\n    });\n\n    data = filters.join(\"&\");\n\n    this._filterService.getJoinedFilters(data);\n    \n  }\n\n  ngOnDestroy(): void {\n    this.selectedFiltersSubscriber.unsubscribe();\n  }\n\n}\n","<div class=\"row filters__button-wrapper\">\n    <button (click)=\"submitFilters()\" [disabled]=\"isDisabled\"\n        class=\"btn btn-primary btn-sm spark-dynamic-forms__bulk-btn\">\n        Filter Records\n    </button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  public date:any;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.date = new Date().getFullYear();\n  }\n\n}\n","import { Component, OnInit, Output, Input, forwardRef } from '@angular/core'\nimport { FormControl, FormGroup, Validators, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms'\nimport { Subject } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\nimport { MultiSelectService } from './multi-select.service'\n\n@Component({\n  selector: 'app-multi-select',\n  templateUrl: './multi-select.component.html',\n  styleUrls: ['./multi-select.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MultiSelectComponent),\n      multi: true\n    }]\n})\nexport class MultiSelectComponent implements OnInit, ControlValueAccessor {\n  onChange: any = () => { }\n  onTouch: any = () => { }\n\n  /**\n   * It should dissapper after some time\n   * Define default args\n   */\n  public focus: boolean = false\n  public loader: boolean = false\n  public categories: any = []\n  public selection: any = []\n  public selected: any = ''\n  public pre_selection: any = []\n  public pre_selection_status: number[] = []\n  private subject: Subject<string> = new Subject()\n\n  @Input()\n  pageSize: number = 3\n\n  formGroupSearch = new FormGroup({\n    search: new FormControl('')\n  })\n\n  formGroupCount = new FormGroup({\n    id: new FormControl('', Validators.required),\n    count: new FormControl('', Validators.required)\n  })\n\n  constructor(private multiServ: MultiSelectService) { }\n\n  selectSe() {\n\n  }\n\n  @Input()\n  parameter: any = {\n    \"type\": \"field\",\n    \"required\": true,\n    \"read_only\": false,\n    \"label\": \"Items\",\n    \"display_name\": \"name\",\n    \"value_field\": \"id\",\n    \"multiple\": true,\n    \"url\": `item-configs/`,\n    \"search_field\": \"name\",\n    \"args\": \"users\",\n    \"edit_source_field\": \"items_details\",\n    \"edit_display_name\": \"item_name\",\n    \"res_value_field\": \"item_config\",\n\n  }\n\n  ngOnInit(): void {\n    this.subject.pipe(\n      debounceTime(500)\n    ).subscribe(search => {\n      this.focus = true\n      this.searchingFunc(search)\n    })\n  }\n\n  writeValue(value: any[]): void {\n\n    if (value) {\n      this.parseWriteData(value)\n    } else {\n      this.selection = []\n    }\n  }\n  parseWriteData(value: any[]) {\n    this.selection = value.map(ele => {\n      var sel: any = {}\n      sel.count = ele.count\n      sel.id = ele[this.responseValueFieldName]\n      sel.name = this.getObjValue(ele, this.editSourceDisplayFieldName)\n      return sel\n    })\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn\n  }\n\n  clearSelection() {\n    this.pre_selection = []\n  }\n\n  onKeyUp() {\n    const search_text = this.formGroupSearch.controls['search'].value\n    this.subject.next(search_text)\n  }\n\n  chooseSelection(se: any) {\n    let is_update = false\n    const choice = {\n      id: se.id,\n      name: se.name,\n      count: this.formGroupCount.controls['count'].value,\n    }\n\n    for (let i in this.selection) {\n      if (this.selection[i].id == se.id) {\n        this.selection[i].count = this.formGroupCount.controls['count'].value\n        is_update = true\n        this.hasChanged()\n        break\n      }\n    }\n\n    if (!is_update) {\n      this.selection.push(choice)\n      this.hasChanged()\n    }\n\n    this.pre_selection_status.includes(se.id) ? true : this.pre_selection_status.push(se.id)\n\n  }\n  hasChanged() {\n    this.onChange(this.mapResponseValue(this.selection))\n  }\n\n  mapResponseValue(selection: any[]) {\n    return selection.map(ele => {\n      let res: any = {}\n      res[this.responseValueFieldName] = ele.id\n      return { ...res, ...ele }\n    })\n  }\n\n  removeSelection(se: any) {\n    const index = this.selection.indexOf(se)\n    this.selection.splice(index, 1)\n    const status_idx = this.pre_selection_status.indexOf(se.id)\n    this.pre_selection_status.splice(status_idx, 1)\n    this.hasChanged()\n  }\n\n  get searchArgs() {\n    if (this.paramType == \"object\") {\n      if (this.parameter.hasOwnProperty(\"args\"))\n        return this.parameter.args\n    }\n    return \"\"\n  }\n\n  hideSearchResult() {\n    this.focus = false;\n  }\n\n  searchingFunc(search: string) {\n    this.loader = true\n    if (!search) {\n      this.pre_selection = []\n      this.loader = false\n      return\n    }\n    const count = search.length\n    var searchArgs = `${this.searchArgs}&${this.searchFieldName}=${search}`\n    console.log(this.isOfflineSearch)\n    if (!this.isOfflineSearch) {\n      this.multiServ.search(this.url, this.pageSize, searchArgs).subscribe(res => {\n        this.loader = false\n        console.log(res)\n        this.mapPreselectionData(res.results)\n      }, error => {\n        console.log(\"Failed to search http\")\n        this.loader = false\n        console.log(error)\n      })\n    } else {\n      console.log(\"Offline search\")\n      this.mapPreselectionData(this.parameter.data)\n      this.loader = false\n    }\n  }\n\n  mapPreselectionData(data: any[]) {\n    // Check the data for the source and the display_name\n    if (data.length < 1) return\n    this.pre_selection = data.map(elem => {\n      let preSelect: any = {}\n      preSelect.id = this.getObjValue(elem, this.valueFieldName)\n      preSelect.name = this.getObjValue(elem, this.displayFieldName)\n      return preSelect\n    })\n  }\n\n  get displayFieldName(): string {\n    if (this.paramType == \"object\") {\n      if (this.parameter.hasOwnProperty(\"display_name\"))\n        return this.parameter.display_name\n      return this.parameter.label\n    }\n    return this.parameter\n  }\n  get editSourceDisplayFieldName() {\n    if (this.paramType == \"object\") {\n      if (this.parameter.hasOwnProperty(\"edit_display_name\")) {\n        return this.parameter.edit_display_name\n      }\n      return \"name\"\n    }\n    return \"name\"\n  }\n\n  get editSourceFieldName(): string {\n    if (this.paramType == \"object\") {\n      if (this.parameter.hasOwnProperty(\"edit_source_field\"))\n        return this.parameter.edit_source_field\n      return this.parameter.label\n    }\n    return this.parameter\n  }\n\n  get valueFieldName(): string {\n    if (this.paramType == \"object\") {\n      if (this.parameter.hasOwnProperty(\"value_field\"))\n        return this.parameter.value_field\n      return this.parameter.label\n    }\n    return this.parameter\n  }\n\n  get responseValueFieldName(): string {\n    if (this.paramType == \"object\") {\n      if (this.parameter.hasOwnProperty(\"res_value_field\"))\n        return this.parameter.res_value_field\n      return this.parameter.label\n    }\n    return \"id\"\n  }\n\n  get url(): string {\n    if (this.paramType == \"object\") {\n      if (this.parameter.hasOwnProperty(\"url\"))\n        return this.parameter.url\n    }\n    return \"\"\n  }\n  getObjValue(rawData: any, source: string): any {\n    const parts = source.split(\".\")\n    let value = `Incorrect Data Source ${source} `;\n    let tempValue = rawData;\n    // Check if data hardcoded\n    for (let index in parts) {\n      const key = parts[index]\n      if (tempValue.hasOwnProperty(key)) {\n        tempValue = tempValue[key]\n        value = tempValue\n      }\n    }\n    return value\n  }\n\n  get searchFieldName(): string {\n    if (this.paramType == \"object\") {\n      if (this.parameter.hasOwnProperty(\"search_field\"))\n        return this.parameter.search_field\n      return this.parameter.label\n    }\n    return this.parameter\n  }\n\n  get paramType() {\n    return typeof this.parameter\n  }\n\n  /**\n   * Check if the paramer has a data object\n   * If exists no api call is required\n   */\n  get isOfflineSearch() {\n    if (this.paramType == \"object\") {\n      if (this.parameter.hasOwnProperty(\"data\")) {\n        return true\n      }\n      return false\n    }\n    return false\n  }\n\n}\n","<form [formGroup]=\"formGroupSearch\">\n    <div class=\"d-flex justify-content-between\">\n        <input formControlName=\"search\" (keyup)=\"onKeyUp()\" class=\"form-control form-control-lg multiselect-input\"\n            (blur)=\"onTouch()\" placeholder=\"Search items\" />\n        <div class=\"spinner-border ml-2 p-2 text-primary\" *ngIf=\"loader\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n        </div>\n    </div>\n</form>\n\n<div [hidden]=\"!focus\">\n    <div class=\"list-group-item search-results\">\n        <div class=\"d-flex justify-content-between result\" *ngFor=\"let se of pre_selection\">\n            <div class=\"mt-1 multiselect-input\">{{ se.name }}</div>\n            <form [formGroup]=\"formGroupCount\" (ngSubmit)=\"chooseSelection(se)\">\n                <div class=\"d-flex justify-content-between\">\n                    <input class=\"form-control d-inline mr-2 multiselect-input\" type=\"number\" formControlName=\"count\"\n                        placeholder=\"Quantity\" />\n\n                    <button class=\"btn btn-sm btn-success multiselect-input multiselect-btn\"\n                        *ngIf=\"pre_selection_status.includes(se.id); else AddBlock\">update</button>\n                    <ng-template #AddBlock> <button\n                            class=\"btn btn-sm btn-primary multiselect-input multiselect-btn\">add</button>\n                    </ng-template>\n                </div>\n            </form>\n        </div>\n        <div class=\"d-flex flex-row-reverse\">\n            <button class=\"btn btn-secondary btn-sm pull-right mt-3\" (click)=\"hideSearchResult()\">Done</button>\n        </div>\n    </div>\n</div>\n\n<div class=\"mt-3\">\n    <div class=\"mt-3\">\n        <button class=\"btn btn-sm btn-secondary btn-tag pr-3 pl-3 m-2 multiselect-input\" *ngFor=\"let se of selection\">\n            {{se.name }}\n            <span class=\"mr-2 pr-1 pl-1\"> <b>{{se.count}}</b></span>\n            <span (click)=\"removeSelection(se)\"><i class=\"fas fa-minus-circle\"></i></span>\n        </button>\n    </div>\n</div>","import { EventEmitter, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpService } from 'src/app/services';\n\n\n@Injectable()\nexport class FiltersService {\n  submitFilters$: EventEmitter<any> = new EventEmitter();\n  getFilters$: EventEmitter<any> = new EventEmitter();\n  \n  constructor(\n    private _http: HttpService,\n  ) { }\n\n  submitSelectedFilters(data:any, url:string) {\n    this.submitFilters$.emit({data: data, url:url})\n  }\n\n  getFilters(data: any, url: string):Observable<any> {\n    return this._http.get<any>(`${url}?${data}`);\n  }\n\n  getJoinedFilters(data: any) {\n    this.getFilters$.emit(data);\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { DropdownFiltersComponent } from '../dropdown-filters/dropdown-filters.component';\n\n@Component({\n  selector: 'app-collapsible-filters',\n  templateUrl: './collapsible-filters.component.html',\n  styleUrls: ['../filters.component.scss']\n})\nexport class CollapsibleFiltersComponent extends DropdownFiltersComponent {\n  \n}\n","<!-- <app-filters [url]=\"url\" [formItems]=\"formItems\" [formGroupOrder]=\"formGroupOrder\" [isInDropdown]=\"false\"></app-filters> -->\n<div class=\"filters__collapsible-wrapper\">\n    <button type=\"button\" class=\"btn btn-light dropdown-toggle filter-options\" data-toggle=\"collapse\"\n        data-target=\"#demo\">Filter Options</button>\n    <app-submit-filters></app-submit-filters>\n</div>","/** Angular imports */\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n/** Main App Routing */\nimport { AppRoutes } from './app-routing.module';\n\n/** Reusable modules */\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\n\n\n\n/** Main App Components */\nimport { AppComponent } from './app.component';\nimport { AuthenticationComponent } from './core/authentication/authentication.component';\nimport { ModulesComponent } from './modules/modules.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ToastNotificationsService } from './shared/toast-notifications/toast-notifications.service';\n\n@NgModule({\n  declarations: [AppComponent, AuthenticationComponent, ModulesComponent],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(AppRoutes),\n    CoreModule,\n    SharedModule,\n    HttpClientModule,\n    FontAwesomeModule,\n  ],\n  providers: [\n    // {\n    //   provide: HTTP_INTERCEPTORS,\n    //   useClass: Interceptor,\n    //   multi: true,\n    // },\n    ToastNotificationsService\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [],\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\n\n@Component({\n  selector: 'app-mytablefilter',\n  templateUrl: './mytablefilter.component.html',\n  styleUrls: ['./mytablefilter.component.scss']\n})\nexport class MytablefilterComponent implements OnInit {\n  @Input() filterOptions:any;\n  dropdownList: Array<any> = [];\n  selectedItems: Array<any> = [];\n  dropdownSettings:IDropdownSettings = {};\n  @Output()\n  onFilterSelect: EventEmitter<Array<any>> = new EventEmitter()\n\n  constructor() { \n\n  }\n\n  ngOnInit(): void {\n    this.filterOptions = this.filterOptions.filter((filter: string) => typeof filter === 'string');\n\n    console.log('THE TABLE FILTER OPTIONS', this.filterOptions)\n    this.filterOptions.map((filter:string,ind:number) => {\n      let item:any = {}\n      item.item_id = ind;\n      item.item_text = `${filter.charAt(0).toUpperCase()}${filter.slice(1)}`;\n      this.dropdownList.push(item)\n    });\n\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'item_id',\n      textField: 'item_text',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 3,\n      allowSearchFilter: true\n    };\n  }\n\n  onItemSelect(item: any) {\n    //console.log(item);\n  }\n  onSelectAll(items: any) {\n    //console.log(items);\n  }\n\n  getFilterSelections() {\n    this.onFilterSelect.emit(this.selectedItems);\n  }\n\n}\n","<ng-multiselect-dropdown\n  class=\"table-filter\"\n  [placeholder]=\"'Filter Records'\"\n  [settings]=\"dropdownSettings\"\n  [data]=\"dropdownList\"\n  [(ngModel)]=\"selectedItems\"\n  (onSelect)=\"onItemSelect($event)\"\n  (onSelectAll)=\"onSelectAll($event)\"\n>\n</ng-multiselect-dropdown>\n<br>\n<!-- <button (click)=\"getFilterSelections()\" type=\"button\" class=\"btn btn-primary btn-sm\">\n    Filter Options\n</button> -->","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services/authentication/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService, private _route: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (this.auth.isLoggedIn()) {\n      if (this.auth.hasWebDashboardAccess()) {\n        return true;\n\n      } else {\n        this._route.navigate(['/signin'], {\n          queryParams: { returnUrl: state.url },\n        });\n        return false;\n\n      }\n    }\n    this._route.navigate(['/signin'], {\n      queryParams: { returnUrl: state.url },\n    });\n    return false;\n\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-modals',\n  templateUrl: './modals.component.html',\n  styleUrls: ['../modals.component.scss']\n})\nexport class ModalsComponent implements OnInit {\n\n  @Input() modalId: string = '';\n  @Input() title: string = 'Title';\n  @Input() confirmBtnName: string = 'Confirm';\n  @Input() hasFooter: boolean = true;\n\n  @Output() confirmBtn: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  confirm() {\n    console.log('CONFIRM BUTTON CLICKED', true);\n    \n    this.confirmBtn.emit(true);\n  }\n\n}\n","<div class=\"modal fade\" id=\"{{modalId}}\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n      \n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">{{title}}</h4>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n        </div>\n        \n        <!-- Modal body -->\n        <div class=\"modal-body\">\n          <ng-content></ng-content>\n        </div>\n        \n        <!-- Modal footer -->\n        <div *ngIf=\"hasFooter\" class=\"modal-footer\">\n          <div class=\"confirm__buttons\">\n            <button type=\"button\" class=\"btn btn-secondary cancel\" data-dismiss=\"modal\">Cancel</button>\n            <button type=\"button\" class=\"btn btn-secondary confirm\" data-dismiss=\"modal\" (click)=\"confirm()\">{{confirmBtnName}}</button>\n          </div>\n        </div>\n        \n      </div>\n    </div>\n  </div>","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime, switchMap, take } from 'rxjs/operators';\nimport { FiltersService } from './filters.service';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.scss']\n})\nexport class FiltersComponent implements OnInit {\n\n  @Input() isInDropdown: boolean = true;\n  @Input() url: string = '';\n  @Input() filterUrl: string = '';\n  @Input() formItems: any;\n  @Input() formGroupOrder:any;\n  @Output() selectedFilters: EventEmitter<any> = new EventEmitter();\n  \n\n  public searchForm!: FormGroup;\n  public selectedFiltersOptions: any;\n  public enableSubmitFilterButton: boolean = false;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private _filterService:FiltersService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onValidatedData(data:any){\n    this.selectedFiltersOptions = Object.entries(data).filter( (filter:any) => {\n      return filter[1] !== '' && filter[1] !== null\n    });\n  }\n\n  searchFilters(data:any) {\n   this._filterService.submitSelectedFilters(data, this.filterUrl)\n  };\n}\n","\n<app-selected-filters [selectedFiltersOptions]=\"selectedFiltersOptions\" (searchableFilterOptions)=\"searchFilters($event)\"></app-selected-filters>\n        \n<div *ngIf=\"isInDropdown\" class=\"dropdown\">\n    <div class=\"dropdown-menu\">\n        <app-myform [formItems]=\"formItems\" [url]=\"url\"\n            [isValidationOnly]=true (onValidatedData)=\"onValidatedData($event)\" submitButtonText=\"Item Type\"\n            [formGroupOrder]=\"formGroupOrder\">\n        </app-myform>\n    </div>\n</div>\n\n<div *ngIf=\"!isInDropdown\" id=\"demo\" class=\"collapse\">\n    <app-myform [formItems]=\"formItems\" [url]=\"url\"\n        [isValidationOnly]=true (onValidatedData)=\"onValidatedData($event)\" submitButtonText=\"Item Type\"\n        [formGroupOrder]=\"formGroupOrder\">\n    </app-myform>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { TablesComponent } from './tables.component';\nimport { MytdComponent } from './mytd/mytd.component';\nimport { MycelldisplayComponent } from './mycelldisplay/mycelldisplay.component';\nimport { MypaginationComponent } from './mypagination/mypagination.component';\nimport { MytablefilterComponent } from './mytablefilter/mytablefilter.component';\nimport { CollapsibleFiltersComponent } from '../filters/collapsible-filters/collapsible-filters.component';\nimport { DropdownFiltersComponent } from '../filters/dropdown-filters/dropdown-filters.component';\nimport { MyformComponent } from '../myform/myform.component';\nimport { MyinputComponent } from '../myform/myinput/myinput.component';\nimport { FiltersModule } from '../filters/filters.module';\nimport { CardComponent } from '../card/card.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n\n@NgModule({\n  declarations: [\n    TablesComponent,\n    MytdComponent,\n    MypaginationComponent,\n    MycelldisplayComponent,\n    MytablefilterComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgMultiSelectDropDownModule,\n    FiltersModule,\n    FontAwesomeModule\n  ],\n  exports: [\n    TablesComponent,\n    MytdComponent,\n    MypaginationComponent,\n    MycelldisplayComponent\n  ]\n})\nexport class TablesModule { }\n","<div class=\"form-group\" [formGroup]=\"form\">\n    <label [for]=\"formControName\" class=\"form-label\">{{displayControlName}}</label>\n    <div [ngSwitch]=\"formControlType\">\n        <div *ngSwitchCase=\"'choice'\">\n            <select class=\"form-control form-control-lg\" [attr.aria-label]=\"formControName\"\n                [formControlName]=\"formControName\" [id]=\"formControName\">\n                <option *ngIf=\"isLoading\" disabled value=\"\" class=\"opt-value\">Fetching ...</option>\n                <option *ngIf=\"!isLoading\" disabled value=\"\" class=\"opt-value\">Select {{displayControlName}}</option>\n                <option *ngFor=\"let opt of choices\" [value]=\"opt.value\" class=\"opt-value\">\n                    {{opt.display_name}}\n                </option>\n            </select>\n        </div>\n\n        <div *ngSwitchCase=\"'multiplechoice'\">\n            <select multiple class=\"form-control form-control-lg\" [attr.aria-label]=\"formControName\"\n                [formControlName]=\"formControName\" [id]=\"formControName\">\n                <option *ngIf=\"isLoading\" disabled value=\"\" class=\"opt-value\">Fetching ...</option>\n                <option *ngIf=\"!isLoading\" disabled value=\"\" class=\"opt-value\">Select {{displayControlName}}</option>\n                <option *ngFor=\"let opt of choices\" [value]=\"opt.value\" class=\"opt-value\">\n                    {{opt.display_name}}\n                </option>\n            </select>\n        </div>\n\n        <div *ngSwitchCase=\"'boolean'\" class=\"form-check form-control-lg\">\n            <input [formControlName]=\"formControName\" class=\"form-check-input opt-value\" type=\"checkbox\" value=\"\"\n                [id]=\"formControName\">\n        </div>\n\n        <textarea *ngSwitchCase=\"'textArea'\" class=\"form-control form-control-lg opt-value\"\n            [attr.aria-label]=\"formControName\" rows=\"5\" [formControlName]=\"formControName\" [id]=\"formControName\">\n        </textarea>\n\n        <div *ngSwitchDefault>\n            <input [formControlName]=\"formControName\" [type]=\"formControlType\"\n                class=\"form-control form-control-lg opt-value\" [id]=\"formControName\" (blur)=\"sortValidationErrors()\">\n        </div>\n    </div>\n\n    <span *ngFor=\"let error of errors\" class=\"text-danger opt-value\">\n        {{error}} <br>\n    </span>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport { HttpService } from 'src/app/services';\n\n@Component({\n  selector: 'app-myinput',\n  templateUrl: './myinput.component.html',\n  styleUrls: ['./myinput.component.scss']\n})\nexport class MyinputComponent implements OnInit {\n  @Input()\n  formControName!: string\n\n  @Input()\n  form!: FormGroup\n  errors: any = []\n  @Input()\n  data: any\n\n  @Input()\n  formErrors: any\n\n  choices: Array<any> = []\n  intital: boolean = false\n  isLoading: boolean = false\n  constructor(\n    private http: HttpService\n  ) {\n  }\n\n  ngOnChanges() {\n    if (this.form && this.formControName && !this.intital) {\n      this.intital = true\n      this.formControl.valueChanges.subscribe((val) => {\n        this.sortValidationErrors(true)\n      })\n      // Check if its a field \n      if (this.data.type == \"field\") {\n        this.getUrlBasedOptions()\n      }\n      if (this.data.choices) {\n        this.choices = this.data.choices\n      }\n    }\n    if (this.formControName) {\n      this.sortValidationErrors()\n    }\n  }\n  showLoader(status: boolean) {\n    this.isLoading = status\n  }\n  getUrlBasedOptions() {\n    if (!this.data.url) return\n    this.showLoader(true)\n\n    this.http.get<any>(this.data.url).subscribe(res => {\n      this.showLoader(false)\n      this.choices = res.results.map((value: any) => {\n        return {\n          \"value\": value.id,\n          \"display_name\": value[this.data.display_name]\n        }\n      });\n    }, error => {\n      this.showLoader(false)\n      const status = error.status\n    })\n  }\n\n  sortValidationErrors(clearFormError = false) {\n    this.errors = []\n    if (this.formControl.untouched) {\n      return\n    }\n\n    // Clear the form errors on value changes only\n    if (clearFormError) {\n      delete this.formErrors[this.formControName]\n    }\n\n    // Normal formControl errors\n    if (this.formControl.errors) {\n      this.errors = Object.keys(this.formControl.errors)\n    }\n\n    // Check other form control errors from outside(from the backend)\n    if (this.formControName in this.formErrors) {\n      this.errors = this.errors.concat(this.formErrors[this.formControName])\n    }\n\n    // If the control is not marked as invalid force it\n    if (this.errors.length > 0 && this.formControl.valid) {\n      this.formControl.setErrors({ '': true })\n    }\n\n  }\n\n  get formControl(): AbstractControl {\n    return this.form.controls[this.formControName]\n  }\n\n  get formControlType(): string {\n    if (this.data.obscure) {\n      return \"password\"\n    }\n\n    switch (this.data.type) {\n      case 'integer':\n        return \"number\"\n\n      case 'string':\n        if (this.data.max_length && this.data.max_length > 150) {\n          return 'textArea'\n        }\n        return \"text\"\n\n      case 'datetime':\n        return \"date\"\n\n      case 'datetime':\n        return \"date\"\n\n      case 'field':\n        if (this.data.multiple) {\n          return 'multiplechoice'\n        }\n        return \"choice\"\n\n      default:\n        return this.data.type\n    }\n  }\n\n  get displayControlName() {\n    return this.data.label\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { Subject, Observable, BehaviorSubject, of } from 'rxjs';\n\nexport interface Notice {\n  message: string;\n  style: string;\n}\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ToastNotificationsService {\n  constructor() { }\n  toastData: any = [];\n  public toasts = new BehaviorSubject(this.toastData);\n\n  showToast(message: string, style: string) {\n    let data = {\n      message: message,\n      style: style\n    };\n    this.toastData = [data, ...this.toastData]\n    this.toasts.next(this.toastData);\n    setTimeout(() => {\n      this.toastData.pop();\n      this.toasts.next(this.toastData);\n    }, 5000)\n  }\n\n  removeToast(index: number) {\n    this.toastData.splice(index, 1);\n    this.toasts.next(this.toastData);\n  }\n\n  getToast(): Observable<any[]> {\n\n    return of(this.toastData);\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-button',\n  templateUrl: './add-button.component.html',\n  styleUrls: ['./add-button.component.scss']\n})\nexport class AddButtonComponent implements OnInit {\n  @Input() 'url': string = '';\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"spark-dynamic-forms__bulk-wrapper\">\n    <a [routerLink]=\"url\" class=\"\">\n        <button class=\"btn btn btn-sm lift spark-dynamic-forms__bulk-btn\">\n            Add Record\n        </button>\n    </a>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n\nconst clientId = environment.APIClientID;\nconst endpoint = environment.APIEndpoint;\nconst endpointV1 = environment.APIv1Endpoint;\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n\n  constructor(private _httpClient : HttpClient) {\n\n  }\n\n  get<T>(url: string):Observable<any> {\n    return this._httpClient.get<any>(`${endpointV1}${url}`);\n  }\n\n  delete<T>(url: string):Observable<any> {\n    return this._httpClient.delete<any>(`${endpointV1}${url}`);\n  }\n\n\n  post<T>(url: any, formData: any):Observable<any>  {\n   return this._httpClient.post(`${endpointV1}${url}`,formData);\n  }\n  \n  patch<T>(url: any, formData: any) {\n    return this._httpClient.patch(`${endpointV1}${url}`,formData);\n  }\n \n\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {Location} from '@angular/common';\n\n// import { MY_EXAMPLE_OPTIONS_DATA } from './myfields';\n// import { MyInputModel, InputType } from './myinput/model';\nimport { FormBuilder, FormGroup, FormControl, AbstractControl, Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\n\n// import { from } from 'rxjs';\nimport { FormItemService } from 'src/app/services/forms/form-item.service';\nimport { HttpService } from 'src/app/services';\n\n@Component({\n  selector: 'app-myform',\n  templateUrl: './myform.component.html',\n  styleUrls: ['../myform/myform.component.scss']\n})\nexport class MyformComponent implements OnInit {\n\n  @Input()\n  formGroup: FormGroup = new FormGroup({});\n\n  @Input()\n  submitButtonText: string = \"Post\"\n\n  @Input()\n  formItems: any\n\n  @Input()\n  extraParams: any = {}\n\n  @Output()\n  onValidatedData = new EventEmitter<any>();\n\n  @Output()\n  onPostedData = new EventEmitter<any>();\n\n  @Output()\n  isLoading$ = new EventEmitter<boolean>();\n\n  @Input()\n  isValidationOnly: boolean = false\n\n  @Input()\n  tabbedItems: any = [];\n  @Input()\n  tabbed: boolean = false;\n\n  @Input()\n  url: string = \"\"\n  _instance: any\n  instanceChanged = false\n  isNew: boolean = true\n  @Input()\n  set instance(value: any) {\n    this._instance = value\n    this.instanceChanged = true\n  }\n\n  get instance() {\n    return this._instance\n  }\n\n  @Input()\n  formGroupOrder!: Array<Array<string>>;\n\n  @Input() loading: boolean = false;\n  @Input() cardTitle: string = 'Form Title';\n\n  initial: boolean = false\n  formErrors: any = {}\n  detailErrors: any = []\n  isLoading: boolean = false;\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpService,\n    private _formService: FormItemService,\n    private _location: Location\n  ) {\n\n  }\n  ngOnChanges() {\n    if (this.formGroupOrder && !this.initial) {\n      this.initial = false\n      const fields = this.formItems.actions.POST;\n      const possibleFields = this.formGroupOrder.reduce((acc, val) => acc.concat(val), [])\n\n      // console.log(possibleFields)\n      // console.log(fields)\n\n      for (var key in fields) {\n        const field = fields[key];\n\n        if (field.read_only || !possibleFields.includes(key)) {\n          continue\n        }\n\n        const defaultField = field.type == \"boolean\" ? false : \"\"\n        this.formGroup.addControl(\n          key, new FormControl(defaultField, [\n          ])\n        )\n\n        const fieldcontrol = this.formGroup.controls[key]\n        const validators = []\n        if (field.required) {\n          validators.push(Validators.required)\n        }\n        if (field.max_length) {\n          validators.push(Validators.maxLength(field.max_length))\n        }\n        if (validators.length > 0) {\n          fieldcontrol.setValidators(validators)\n        }\n      }\n    }\n    this.checkInstanceChangesUpdateForm()\n\n  }\n\n  mapAllTheMultifieldEditSourceFields(): any {\n    var instance = { ...this.instance }// this.instance\n    if (\"POST\" in this.formItems.actions) {\n      const fields = this.formItems.actions.POST\n      for (var key in fields) {\n        const field = fields[key]\n        const type = field.type\n        if (type == \"multifield\") {\n          if (\"edit_source_field\" in field) {\n            const editSource = field.edit_source_field\n            instance[key] = instance[editSource]\n          }\n        }\n      }\n    }\n    return instance\n  }\n\n  checkInstanceChangesUpdateForm() {\n    if (this.instanceChanged) {\n      this.instanceChanged = false\n      if (this.instance) {\n        const inst = this.mapAllTheMultifieldEditSourceFields()\n        this.formGroup.patchValue(\n          inst\n        )\n        this.isNew = this.instance.id == null\n        this.formGroup.markAllAsTouched()\n      }\n    }\n  }\n\n  getDescriptionObject(formControlName: string) {\n    return this.formItems.actions.POST[formControlName];\n  }\n\n  getFieldNameErros(formControlName: string) {\n    return this.formErrors[formControlName]\n  }\n\n  ngOnInit(): void {\n \n  }\n\n  showLoader(status: boolean) {\n    this.isLoading = status\n    this.isLoading$.emit(status)\n  }\n\n  dataReceived() {\n    this.detailErrors = []\n    if (this.formGroup.valid) {\n      const data = { ...this.formGroup.value, ...this.extraParams }\n      if (this.isValidationOnly) {\n        this.onValidatedData.emit(data)\n      } else {\n        this.sendDataHttp(data)\n      }\n    } else {\n    }\n  }\n\n  get myFormValid(): boolean {\n    return this.formGroup.valid\n  }\n\n  get formAction() {\n    return this.isNew ? 'Add' : 'Update'\n  }\n\n  sendDataHttp(data: any) {\n    this.showLoader(true)\n    this.formErrors = [];\n    const post_data = {\n      url: this.isNew ? this.url : `${this.url}${this.instance.id}`,\n      formData: data\n    }\n\n    this._formService.postForm(this.isNew, post_data).subscribe(res => {\n      this.onPostedData.emit(res)\n      this.showLoader(false)\n      if (this.isNew) {\n        this.resetForm();\n      }\n   \n      setTimeout(() => {\n        this._location.back();\n      }, 1000);\n      \n      \n    }, error => {\n      this.showLoader(false)\n      const status = error.status\n      if (status == 401) {\n        this.detailErrors.push(\"Login required.\")\n      } else if (status == 400) {\n        const formErrors = error.error;\n        if (\"detial\" in formErrors) {\n          this.detailErrors.push(formErrors.detial)\n        }\n        this.formErrors = formErrors\n      }\n    })\n  }\n\n  getControl(name: string): AbstractControl {\n    return this.formGroup.get(name) || new FormControl()\n  }\n\n  resetForm() {\n    this.formGroup.reset();\n  }\n\n  bulkOptions() { }\n\n}\n","<div class=\"container\">\n    <div class=\"spark-dynamic-forms__bulk-wrapper\">\n        <!-- TODO -> call a module for the bulk upload processes -->\n        <button type=\"button\" data-toggle=\"modal\" data-target=\"#bulkModal\"\n            class=\"btn btn btn-sm mb-3 lift spark-dynamic-forms__bulk-btn\">\n            Bulk Actions\n        </button>\n        <app-modals [title]=\"cardTitle+' Bulk Create'\" [hasFooter]=\"false\" [modalId]=\"'bulkModal'\">\n            <div class=\"bulk__wrapper\">\n                <div class=\"bulk__content\">\n                    Excel/ CSV are the only acceptable formats\n                </div>\n                <div class=\"bulk__button-wrapper\">\n                    <button class=\"btn btn btn-sm mb-3 spark-dynamic-forms__bulk-btn\">\n                        Download Template\n                    </button>\n                    <button class=\"btn btn btn-sm mb-3 spark-dynamic-forms__bulk-btn-upload\" (click)=\"bulkOptions()\">\n                        Upload File\n                    </button>\n                </div>\n            </div>\n        </app-modals>\n    </div>\n    <form class=\"\" [formGroup]=\"formGroup\" (ngSubmit)=\"dataReceived()\">\n        <app-card *ngIf=\"!tabbed\" [title]=\"formAction+' '+cardTitle\">\n            <span *ngFor=\"let error of detailErrors\" class=\"text-danger\">\n                {{error}} <br>\n            </span>\n            <div>\n                <div *ngFor=\"let item of formGroupOrder;let i=index;\">\n                    <div class=\"row\">\n                        <div *ngFor=\"let field of item;let j=index;\" class=\"col-sm-{{12/item.length}}\">\n                            <app-myinput [formErrors]=\"formErrors\" [data]=\"getDescriptionObject(field)\"\n                                [form]=\"formGroup\" formControName=\"{{field}}\">\n                            </app-myinput>\n                        </div>\n                    </div>\n                </div>\n                <br>\n            </div>\n        </app-card>\n\n        <app-card-dropdown *ngIf=\"tabbed\" [tabbedItems]=\"tabbedItems\" [tabbed]=\"tabbed\">\n            <span *ngFor=\"let error of detailErrors\" class=\"text-danger\">\n                {{error}} <br>\n            </span>\n            <div>\n                <div *ngFor=\"let item of formGroupOrder;let i=index;\">\n                    <div class=\"row\">\n                        <div *ngFor=\"let field of item;let j=index;\" class=\"col-sm-{{12/item.length}}\">\n                            <app-myinput [formErrors]=\"formErrors\" [data]=\"getDescriptionObject(field)\"\n                                [form]=\"formGroup\" formControName=\"{{field}}\">\n                            </app-myinput>\n                        </div>\n                    </div>\n                </div>\n\n                <br>\n            </div>\n        </app-card-dropdown>\n\n        <div class=\"spark-dynamic-forms__button-wrapper\">\n            <button *ngIf=\"isNew\" type=\"button\" (click)=\"resetForm()\"\n                class=\"btn btn btn-sm mb-3 lift spark-dynamic-forms__clear\">Clear</button>\n            <button [disabled]=\"!formGroup.valid\" type=\"submit\"\n                class=\"btn btn-primary mb-3 lift spark-dynamic-forms__submit\">\n                <span class=\"spark-text has--loading\" [ngClass]=\"{'has--loading': loading}\">\n                    {{isLoading?'Loading...': formAction+' '+submitButtonText}}\n                </span>\n            </button>\n        </div>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FiltersComponent } from './filters.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MyformModule } from './myform/myform.module';\nimport { SelectedFiltersComponent } from './selected-filters/selected-filters.component';\nimport { SubmitFiltersComponent } from './submit-filters/submit-filters.component';\nimport { CollapsibleFiltersComponent } from './collapsible-filters/collapsible-filters.component';\nimport { DropdownFiltersComponent } from './dropdown-filters/dropdown-filters.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FiltersService } from './filters.service';\n\n\n\n@NgModule({\n  declarations: [FiltersComponent, SelectedFiltersComponent, SubmitFiltersComponent, CollapsibleFiltersComponent, DropdownFiltersComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MyformModule,\n    HttpClientModule\n  ],\n  exports: [\n    FiltersComponent,\n    SelectedFiltersComponent,\n    SubmitFiltersComponent,\n    CollapsibleFiltersComponent,\n    DropdownFiltersComponent\n  ],\n  providers: [FiltersService]\n})\nexport class FiltersModule { }\n","export * from './errors/errors.service';\nexport * from './authentication/auth.service';\nexport * from './storage/storage.service';\nexport * from './user/user.service';\nexport * from './http/http-service.service';","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalsComponent } from '../basic/modals.component';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.scss']\n})\nexport class ConfirmComponent extends ModalsComponent implements OnInit {\n  @Input() message: string = 'Are you sure you want to delete?';\n\n  constructor(\n  ) { \n    super();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"message\" class=\"modal fade\" id=\"{{modalId}}\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n        <div class=\"modal-body\">\n            <div class=\"confirm__modal\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                <span class=\"confirm__message\">{{message}}</span>\n                <div class=\"confirm__buttons\">\n                    <button type=\"button\" class=\"btn btn-secondary cancel\" data-dismiss=\"modal\">Cancel</button>\n                    <button type=\"button\" class=\"btn btn-secondary confirm\" data-dismiss=\"modal\" (click)=\"confirm()\">{{confirmBtnName}}</button>\n                </div>\n            </div>\n        </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {  HTTP_INTERCEPTORS } from '@angular/common/http';\n/** App Interceptor */\nimport { Interceptor } from '../core/interceptors/interceptor';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { FooterComponent } from './structure/footer/footer.component';\nimport { HeaderComponent } from './structure/header/header.component';\nimport { NavbarComponent } from './structure/navbar/navbar.component';\nimport { ErrorNotFoundComponent } from './errors/error-not-found/error-not-found.component';\nimport { LockScreenComponent } from './authentication/lock-screen/lock-screen.component';\n\n@NgModule({\n  declarations: [\n    FooterComponent,\n    HeaderComponent,\n    NavbarComponent,\n    ErrorNotFoundComponent,\n    LockScreenComponent,\n  ],\n  imports: [CommonModule, SharedModule, RouterModule],\n  exports: [FooterComponent, NavbarComponent],\n  providers : [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: Interceptor,\n      multi: true,\n    },\n  ]\n})\nexport class CoreModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-not-found',\n  templateUrl: './error-not-found.component.html',\n  styleUrls: ['./error-not-found.component.scss']\n})\nexport class ErrorNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>error-not-found works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MyformComponent } from './myform.component';\nimport { MyinputComponent } from './myinput/myinput.component';\n\n@NgModule({\n  declarations: [\n    MyformComponent,\n    MyinputComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  exports: [\n    MyformComponent,\n    MyinputComponent\n  ]\n})\nexport class MyformModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModalsComponent } from './basic/modals.component';\nimport { ModalsService } from './modals.service';\nimport { ConfirmComponent } from './confirm/confirm.component';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\n\n@NgModule({\n  declarations: [ModalsComponent, ConfirmComponent, ConfirmDialogComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ModalsComponent,\n    ConfirmComponent,\n    ConfirmDialogComponent\n  ],\n  providers: [\n    ModalsService\n  ]\n})\nexport class ModalsModule { }\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { concatMap, map, switchMap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { StorageService, UserService } from 'src/app/services';\n\nconst clientId = environment.APIClientID;\nconst endpoint = environment.APIEndpoint;\nconst endpointV1 = environment.APIv1Endpoint;\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  user: any;\n  constructor(\n    private _route: Router,\n    private _userService: UserService,\n    private _storageService: StorageService,\n    private _http: HttpClient,\n    private _cookieService: CookieService\n  ) {}\n\n  isLoggedIn(): boolean {\n    //check if the user is logged in using an api generated token\n    const tokenItems = JSON.parse(\n      this._storageService.getItem('token') || '{}'\n    );\n    const token = tokenItems !== null ? tokenItems.token : null;\n\n    if (token != null && token != undefined) {\n      //to do if user not verified\n      return true;\n    }\n\n    return false;\n  }\n\n  hasAdminAccess(): boolean {\n    return this.getUserProfile().role == 'A' ? true : false;\n  }\n\n  hasWebDashboardAccess(): boolean {\n    return (\n      //this.getUserProfile().role == 'S' ||\n      this.getUserProfile().role == 'A' || this.getUserProfile().role == 'N' && this.getUserProfile().role !== null\n        ? true\n        : false\n    );\n  }\n\n  isVerifiedUser() {\n    return this.getUserProfile().verified == 'true' ? true : false;\n  }\n\n  getUserProfile() {\n    // this._storageService.watchStorage().subscribe((data:string) => {\n    //this.user = JSON.parse(localStorage.getItem('userDetails'));\n    this.user = JSON.parse(this._storageService.getItem('userDetails') || '{}');\n\n    if (this.user !== {} || this !== null) {\n      return this.user;\n    }\n    return;\n  }\n\n  //TODO -> Remove if one needs not to signup\n  // signUp(data: any) {\n  //   return this._http.post<any>(endpointV1 + 'users/', data).pipe(\n  //     map((res) => {\n  //       const token = res.token.access_token;\n  //       const tokenExpiry = res.token.expires_in;\n  //       const tokenRefresh = res.token.refresh_token;\n\n  //       let tokenItems = { token, tokenExpiry, tokenRefresh };\n\n  //       localStorage.setItem('token', JSON.stringify(tokenItems));\n\n  //       return res;\n  //     })\n  //   );\n  // }\n\n  //TODO -> Remove if there's no 2-factor-authentication with SMS\n  // verifyOTP(data: any) {\n  //   return this._http.post<any>(endpointV1 + 'users/verify-otp/', data);\n  // }\n\n  // requestOTP(data: any) {\n  //   let body = {\n  //     username: data,\n  //   };\n  //   return this._http.post<any>(endpointV1 + 'users/request-otp/', body);\n  // }\n\n  signIn(data: any) {\n    data.grant_type = 'password';\n    data.client_id = clientId;\n\n    const rememberMe = data.remember_me;\n\n    if (rememberMe) {\n      this._cookieService.set('rememberMe', rememberMe);\n      this._storageService.setItem('rememberMe', rememberMe);\n    }\n\n    return this._http.post<any>(endpoint + 'auth/token/', data).pipe(\n      switchMap(res => {\n        const token = res.access_token;\n        const tokenExpiry = res.expires_in;\n        const tokenRefresh = res.refresh_token;\n        let tokenItems;\n\n        tokenItems = { token, tokenExpiry, tokenRefresh };\n\n        if (rememberMe) {\n          const loggedInTime = Date.now();\n          const refreshTokenTime = Math.max(loggedInTime + 3600000, 3600000);\n          // const refreshTokenTime = loggedInTime + 2000;\n          tokenItems = { token, tokenExpiry, tokenRefresh, refreshTokenTime };\n        }\n\n        // localStorage.setItem('token', JSON.stringify(tokenItems));\n        this._storageService.setItem('token', JSON.stringify(tokenItems));\n\n        return this._userService.userProfile();\n      }),\n      concatMap(() => {\n        return this._route.navigate(['/home']);\n      })\n    );\n  }\n\n  refreshToken(data: any) {\n    data.grant_type = 'refresh_token';\n    data.client_id = clientId;\n\n    return this._http.post<any>(`${endpoint}auth/token/`, data).pipe(\n      map(res => {\n        const token = res.access_token;\n        const tokenExpiry = res.expires_in;\n        const tokenRefresh = res.refresh_token;\n\n        let tokenItems;\n        tokenItems = { token, tokenExpiry, tokenRefresh };\n\n        const rememberMe =\n          this._cookieService.get('rememberMe') ||\n          // localStorage.getItem('rememberMe');\n          this._storageService.getItem('rememberMe');\n        if (rememberMe) {\n          const refreshTokenInitialTime = Date.now();\n          const refreshTokenTime = Math.max(\n            refreshTokenInitialTime + 3600000,\n            3600000\n          );\n          tokenItems = { token, tokenExpiry, tokenRefresh, refreshTokenTime };\n        }\n\n        //localStorage.setItem('token', JSON.stringify(tokenItems));\n        this._storageService.setItem('token', JSON.stringify(tokenItems));\n      })\n    );\n  }\n\n  resetPassowrd(data: any) {\n    return this._http.post<any>(endpointV1 + 'users/reset-password', data);\n  }\n\n  forgotPassword(data: any) {\n    return this._http.post<any>(endpointV1 + 'users/forgot-password', data);\n  }\n\n  changePassword(data: any) {\n    return this._http.put<any>(endpointV1 + 'users/me/change-password', data);\n  }\n\n  signOut() {\n    localStorage.clear();\n    sessionStorage.clear();\n    this._cookieService.delete('rememberMe');\n    this._route.navigate(['/signin']);\n  }\n\n  toggleShowPassword(type: any) {\n    type === 'password' ? type = 'text' : type = 'password';\n    return type;\n  }\n}\n","<div class=\"form-group\" [formGroup]=\"form\">\n    <label [for]=\"formControName\" class=\"form-label\">{{displayControlName}}</label>\n    <div [ngSwitch]=\"formControlType\">\n        <div *ngSwitchCase=\"'choice'\">\n            <select class=\"form-control\" [attr.aria-label]=\"formControName\" [formControlName]=\"formControName\"\n                [id]=\"formControName\">\n                <option *ngIf=\"isLoading\" disabled value=\"\" class=\"opt-value\">Fetching ...</option>\n                <option *ngIf=\"!isLoading\" disabled value=\"\" class=\"opt-value\">Select {{displayControlName}}</option>\n                <option *ngFor=\"let opt of choices\" [value]=\"opt.value\" class=\"opt-value\">\n                    {{opt.display_name}}\n                </option>\n            </select>\n        </div>\n\n        <div *ngSwitchCase=\"'multiplechoice'\">\n            <select multiple class=\"form-control\" [attr.aria-label]=\"formControName\" [formControlName]=\"formControName\"\n                [id]=\"formControName\">\n                <option *ngIf=\"isLoading\" disabled value=\"\" class=\"opt-value\">Fetching ...</option>\n                <option *ngIf=\"!isLoading\" disabled value=\"\" class=\"opt-value\">Select {{displayControlName}}</option>\n                <option *ngFor=\"let opt of choices\" [value]=\"opt.value\" class=\"opt-value\">\n                    {{opt.display_name}}\n                </option>\n            </select>\n        </div>\n\n        <div *ngSwitchCase=\"'boolean'\" class=\"form-check\">\n            <input [formControlName]=\"formControName\" class=\"form-check-input opt-value\" type=\"checkbox\" value=\"\"\n                [id]=\"formControName\">\n        </div>\n\n        <app-multi-select *ngSwitchCase=\"'multifield'\" [parameter]=\"data\" formControlName=\"items\"></app-multi-select>\n\n        <textarea *ngSwitchCase=\"'textArea'\" class=\"form-control opt-value\" [attr.aria-label]=\"formControName\" rows=\"5\"\n            [formControlName]=\"formControName\" [id]=\"formControName\">\n        </textarea>\n\n        <div *ngSwitchDefault>\n            <input [formControlName]=\"formControName\" [type]=\"formControlType\" class=\"form-control opt-value\"\n                [id]=\"formControName\" (blur)=\"sortValidationErrors()\">\n        </div>\n    </div>\n\n    <span *ngFor=\"let error of errors\" class=\"text-danger opt-value\">\n        {{error}} <br>\n    </span>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormControl, AbstractControl } from '@angular/forms';;\nimport { HttpService, StorageService } from 'src/app/services';\n\n\n@Component({\n  selector: 'app-myinput',\n  templateUrl: './myinput.component.html',\n  styleUrls: ['./myinput.component.scss']\n})\nexport class MyinputComponent implements OnInit {\n  @Input()\n  formControName!: string\n\n  @Input()\n  form!: FormGroup\n  errors: any = []\n  @Input()\n  data: any\n\n  @Input()\n  formErrors: any\n\n  choices: Array<any> = []\n  intital: boolean = false\n  isLoading: boolean = false\n\n\n  constructor(\n    private http: HttpService,\n    private _storageService: StorageService\n  ) {\n  }\n\n  ngOnChanges() {\n    if (this.form && this.formControName && !this.intital) {\n      this.intital = true\n      this.formControl.valueChanges.subscribe((val) => {\n        this.sortValidationErrors(true)\n      })\n\n      // Check if its a field \n      if (this.data.type == \"field\") {\n        this.getUrlBasedOptions()\n      }\n      if (this.data.choices) {\n        this.choices = this.data.choices\n      }\n    }\n    if (this.formControName) {\n      this.sortValidationErrors()\n    }\n  }\n  showLoader(status: boolean) {\n    this.isLoading = status\n  }\n  getUrlBasedOptions() {\n    if (!this.data.url) return\n    this.showLoader(true)\n\n    this.http.get<any>(this.data.url, ).subscribe(res => {\n      this.showLoader(false)\n      this.choices = res.results.map((value: any) => {\n        return {\n          \"value\": value.id,\n          \"display_name\": value[this.data.display_name]\n        }\n      });\n    }, error => {\n      this.showLoader(false)\n      const status = error.status\n    })\n  }\n  sortValidationErrors(clearFormError = false) {\n    this.errors = []\n    if (this.formControl.untouched) {\n      return\n    }\n\n    // Clear the form errors on value changes only\n    if (clearFormError) {\n      delete this.formErrors[this.formControName]\n    }\n\n    // Normal formControl errors\n    if (this.formControl.errors) {\n      this.errors = Object.keys(this.formControl.errors)\n    }\n\n    // Check other form control errors from outside(from the backend)\n    if (this.formControName in this.formErrors) {\n      this.errors = this.errors.concat(this.formErrors[this.formControName])\n    }\n\n    // If the control is not marked as invalid force it\n    if (this.errors.length > 0 && this.formControl.valid) {\n      this.formControl.setErrors({ '': true })\n    }\n\n  }\n\n  get formControl(): AbstractControl {\n    return this.form.controls[this.formControName]\n  }\n\n  get formControlType(): string {\n    if (this.data.obscure) {\n      return \"password\"\n    }\n    switch (this.data.type) {\n      case 'integer':\n        return \"number\"\n\n      case 'string':\n        if (this.data.max_length && this.data.max_length > 150) {\n          return 'textArea'\n        }\n        return \"text\"\n\n      case 'datetime':\n        return \"date\"\n\n      case 'datetime':\n        return \"date\"\n\n      case 'field':\n        if (this.data.multiple) {\n          return 'multiplechoice'\n        }\n        return \"choice\"\n\n      default:\n        return this.data.type\n    }\n  }\n\n  get displayControlName() {\n    return this.data.label\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'app-mypagination',\n  templateUrl: './mypagination.component.html',\n  styleUrls: ['./mypagination.component.scss']\n})\nexport class MypaginationComponent implements OnInit {\n\n  @Input()\n  resultsMeta: any\n  @Input()\n  selectedPage: number = 5\n\n  @Input()\n  pageSize: number = 10;\n\n  @Input()\n  totalDisplayedPAges = 9\n\n  @Output()\n  onPageSelect: EventEmitter<number> = new EventEmitter()\n\n  constructor() { }\n  ngOnInit(): void {\n  }\n  get isAtEnd() {\n    return (this.totalDisplayedPAges - this.selectedPage) <= Math.round(this.totalDisplayedPAges / 2)\n  }\n  get isAtStart() {\n    // 5 -2\n    return (this.selectedPage - 2) <= 3\n  }\n  get moreAtStart() {\n    return this.isAtEnd && this.hideSomePages\n  }\n  get moreAtEnd() {\n    return this.isAtStart && this.hideSomePages\n  }\n  get hideSomePages() {\n    // console.log((this.totalPages - 2) >= this.totalDisplayedPAges)\n    return (this.totalPages - 2) >= this.totalDisplayedPAges\n  }\n  get pages() {\n    if (!this.isPaginatable) return []\n    let pages: any[] = []\n    const totalPages = this.totalPages\n    const excluded = [1, this.totalPages]\n    const remPages = totalPages - 2\n    let addFactor = 2\n    // 6 7 8 9 10 11\n    if (this.hideSomePages) {\n      let tempAddFactor = this.selectedPage - 1\n      // Less than 3 because , less than that means use 2 \n      if (this.isAtStart) {\n        tempAddFactor = 2\n      } else if (this.isAtEnd) {\n        tempAddFactor = 6\n      }\n      addFactor = tempAddFactor\n    }\n\n    for (let i = 0; i < (this.hideSomePages ? 5 : remPages); i++) {\n      const newPage = (i + addFactor)\n      if (!pages.includes(newPage) && !excluded.includes(newPage)) {\n        pages.push(newPage)\n      }\n    }\n    pages.sort((a, b) => a - b)\n    return pages\n  }\n\n  get totalItems() {\n    if (!this.isPaginatable) return 1\n    return this.resultsMeta.count;\n  }\n\n  scrollPage(addPage: number) {\n    let tempvalue = addPage + this.selectedPage;\n    if (tempvalue > this.totalPages) {\n      tempvalue = this.totalPages\n    } else if (tempvalue < 1) {\n      tempvalue = 1\n    }\n    this.selectPage(tempvalue)\n  }\n\n  get totalPages() {\n    if (!this.isPaginatable) return 1\n    return Math.ceil(this.resultsMeta.count / this.pageSize)\n  }\n  get isPaginationActive() {\n    if (!this.isPaginatable) return false\n    // return \n    return this.hasNext || this.hasPrev\n  }\n  get hasNext() {\n    if (!this.isPaginatable) return false\n    return this.resultsMeta.next != undefined\n  }\n  get hasPrev() {\n    if (!this.isPaginatable) return false\n    return this.resultsMeta.prev != undefined\n  }\n  get isPaginatable() {\n    if (!this.resultsMeta)\n      return false\n    return this.resultsMeta.hasOwnProperty(\"next\") || this.resultsMeta.hasOwnProperty(\"prev\")\n  }\n  selectPage(page: number) {\n    if (this.selectedPage == page) return\n    this.onPageSelect.emit(page)\n    // this.selectedPage = page\n    // console.log(`Selected page ${page}`)\n  }\n  checkIsSelected(page: number): boolean {\n    return this.selectedPage == page\n  }\n}\n","<nav aria-label=\"Page navigation\">\n        <ul *ngIf=\"isPaginationActive\" class=\"pagination\">\n                <button (click)=\"scrollPage(-1)\" [disabled]=\"!hasPrev\" class=\"btn page-link\">Previous</button>\n                <li class=\"page-item {{selectedPage==1?'active':''}}\"><button (click)=\"selectPage(1)\"\n                                class=\"btn page-link  \">1</button></li>\n                <button *ngIf=\"moreAtStart\" [disabled]=\"hasPrev\" class=\"btn page-link\">...</button>\n\n                <li *ngFor=\"let page of pages\" class=\"page-item {{selectedPage==page?'active':''}}\"><button\n                                class=\"btn page-link\" (click)=\"selectPage(page)\">{{page}}</button>\n                </li>\n\n                <li class=\"page-item\"><button *ngIf=\"moreAtEnd\" class=\"btn page-link\">...</button></li>\n                <li class=\"page-item {{selectedPage==totalPages?'active':''}}\"><button (click)=\"selectPage(totalPages)\"\n                                class=\"btn page-link  \">{{totalPages}}</button></li>\n                <li class=\"page-item\"><button (click)=\"scrollPage(1)\" [disabled]=\"!hasNext\"\n                                class=\"btn page-link\">Next</button>\n                </li>\n\n        </ul>\n\n        <span class=\"item-count\">\n                {{totalItems}} Items\n        </span>\n\n\n</nav>","import { NgModule } from '@angular/core';\nimport { MultiSelectComponent } from './multi-select.component';\nimport { MultiSelectService } from './multi-select.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  declarations: [\n    MultiSelectComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [MultiSelectComponent],\n  providers: [MultiSelectService]\n})\nexport class MultiSelectModule { }\n","import { Component, OnInit, TemplateRef, OnDestroy } from '@angular/core';\nimport { ToastNotificationsService } from './toast-notifications.service';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\ndeclare var $: any;\n@Component({\n  selector: 'app-toast-notifications',\n  templateUrl: './toast-notifications.component.html',\n  styleUrls: ['./toast-notifications.component.scss']\n})\nexport class ToastNotificationsComponent implements OnInit, OnDestroy {\n   _toasts:any = [];\n   faEdit = faEdit;\n  constructor(public toastService: ToastNotificationsService) { \n  }\n\n  ngOnInit() {\n    this.toastService.toasts.subscribe(response => {\n      this._toasts = response;\n      console.log(response)\n    })\n    // this.toastService.update(\"Message1\", \"info\")\n  }\n\n  closeToast(index: number){\n    console.log(index);\n    this.toastService.removeToast(index);\n  }\n\n  ngOnDestroy(){\n    this._toasts = []\n    this.toastService.toasts.unsubscribe();\n  }\n}\n\n\n","<!-- <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n    <strong>Holy guacamole!</strong> You should check in on some of those fields below.\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div> -->\n<!-- [ngClass]=\"{'is-info':     message.style=='info',\n                       'is-danger':   message.style=='danger',\n                       'is-success':  message.style=='success'}\" -->\n\n<div class=\"position-absolute bottom-0 right-0 p-3 toast-container\">\n  <div *ngFor=\"let message of _toasts;let indexOfelement=index;\" id=\"liveToast\" class=\"toast show\" role=\"alert\"\n    aria-live=\"assertive\" aria-atomic=\"true\">\n    \n    <div class=\"toast-body\" [ngClass]=\"{'info': message.style=='info',\n    'warning':   message.style=='danger',\n    'success':  message.style=='success'}\">\n      <button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\"\n        (click)=\"closeToast(indexOfelement)\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n      <p>\n        {{message.message}}\n      </p>\n    </div>\n  </div>\n\n</div>\n","import { Routes } from '@angular/router';\nimport { ErrorNotFoundComponent } from './core/errors/error-not-found/error-not-found.component';\nimport { AuthenticationComponent } from './core/authentication/authentication.component';\nimport { ModulesComponent } from './modules/modules.component';\nimport { AuthGuard } from './core/auth-guards/auth.guards';\nimport { DashboardComponent } from './modules/dashboard/dashboard.component';\n\nexport const AppRoutes: Routes = [\n  {\n    path: '',\n    component: ModulesComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () =>\n          import(`./modules/modules.module`).then((m) => m.ModulesModule),\n        canActivate: [AuthGuard]\n      },\n    ],\n  },\n  {\n    path: '',\n    component: AuthenticationComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () =>\n          import(`./core/authentication/authentication.module`).then(\n            (m) => m.AuthenticationModule\n          ),\n      },\n    ],\n  },\n  {\n    path: '404',\n    component: ErrorNotFoundComponent,\n  },\n  {\n    path: '**',\n    redirectTo: '/'\n  }\n];\n","import { Component, Input, OnInit, EventEmitter, Output, OnChanges, SimpleChanges } from '@angular/core';\nimport { FiltersService } from '../filters.service';\n\n@Component({\n  selector: 'app-selected-filters',\n  templateUrl: './selected-filters.component.html',\n  styleUrls: ['../filters.component.scss']\n})\nexport class SelectedFiltersComponent implements OnInit, OnChanges {\n\n  @Input() selectedFiltersOptions: Array<any> = [];\n  @Output() searchableFilterOptions: EventEmitter<any> = new EventEmitter();\n  \n  constructor(\n    private _filterService: FiltersService\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.searchableFilterOptions.emit(this.selectedFiltersOptions);\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  removeFilter(key:number) {\n    this.selectedFiltersOptions.splice(key, 1);\n    this.searchableFilterOptions.emit(this.selectedFiltersOptions);\n\n    if(!this.selectedFiltersOptions.length) {\n      this._filterService.getJoinedFilters(this.selectedFiltersOptions);\n    }\n  }\n\n  \n\n}\n","<span *ngFor=\"let item of selectedFiltersOptions; let i = index\">\n    <div class=\"filters__item\">\n        {{item[0]}} <i (click)=\"removeFilter(i)\" class=\"fa fa-times\"></i>\n    </div>\n</span>","import { Component, OnInit, Input } from '@angular/core';\nimport { TablesService } from './../tables.service';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-mycelldisplay',\n  templateUrl: './mycelldisplay.component.html',\n  styleUrls: ['./mycelldisplay.component.scss']\n})\nexport class MycelldisplayComponent implements OnInit {\n  faEdit = faEdit\n  faTrashAlt = faTrashAlt\n\n  _value: any\n  @Input()\n  set displayValue(data) {\n    this._value = data\n  }\n  get displayValue() {\n    return this._value\n  }\n  @Input()\n  columnConfig: any\n\n  @Input()\n  rowData: any\n\n  @Input()\n  isActions: boolean = false\n\n  constructor(private _tableSerivce: TablesService) { }\n\n  ngOnInit(): void {\n    if (this.isActions) {\n      console.log(this.valueType)\n    }\n  }\n\n  get valueType() {\n    const val = this.displayValue\n\n    const valType = typeof val\n    if (valType == \"object\") {\n      const isArray = Array.isArray(val);\n      if (isArray)\n        return \"array\"\n    }\n    return valType\n  }\n\n  emitAction(name: string) {\n    this._tableSerivce.emitAction(name, this.rowData)\n  }\n\n}\n","<div *ngIf=\"!isActions\" [ngSwitch]=\"valueType\">\n    <div *ngSwitchCase=\"'array'\">\n        <ul>\n            <li *ngFor=\"let item of displayValue\">{{item}}</li>\n        </ul>\n    </div>\n    <div *ngSwitchCase=\"'boolean'\">\n        <input type=\"checkbox\" [checked]=\"displayValue\" onclick=\"return false;\">\n    </div>\n    <span *ngSwitchDefault>{{displayValue}}</span>\n</div>\n<div class=\"row ml-2\" *ngIf=\"isActions\">\n    <div *ngFor=\"let val of displayValue\" [ngSwitch]=\"val\">\n        <fa-icon (click)=\"emitAction(val)\" *ngSwitchCase=\"'edit'\" [icon]=\"faEdit\" class=\"edit\">\n        </fa-icon>\n        <fa-icon (click)=\"emitAction(val)\" *ngSwitchCase=\"'delete'\" [icon]=\"faTrashAlt\" class=\"delete\"></fa-icon>\n    </div>\n</div>","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpService } from 'src/app/services';\n\n\n\n@Injectable({ providedIn: 'root' })\nexport class MultiSelectService {\n\n  actionsEvent$: EventEmitter<any> = new EventEmitter()\n\n  constructor(private _http: HttpService) {\n\n  }\n  search(url: string, pageSize: number, args: string) {\n    console.log(args)\n    return this._http.get<any>(`${url}?${args}&page_size=${pageSize}`)\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { FiltersComponent } from '../filters.component';\n\n@Component({\n  selector: 'app-dropdown-filters',\n  templateUrl: './dropdown-filters.component.html',\n  styleUrls: ['../filters.component.scss']\n})\nexport class DropdownFiltersComponent extends FiltersComponent {\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorsService {\n  private errors = new Subject<string[]>();\n\n  constructor() {}\n\n  public addErrors = (errors: string[]): void => this.errors.next(errors);\n\n  public getErrors = () => this.errors.asObservable();\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, take } from 'rxjs/operators';\nimport { AuthService, ErrorsService, StorageService } from 'src/app/services';\nimport { environment } from 'src/environments/environment';\nconst endpoint = environment.APIEndpoint;\n@Injectable()\nexport class Interceptor implements HttpInterceptor {\n  constructor(\n    private _authService: AuthService,\n    private _route: Router,\n    private _errorService: ErrorsService,\n    private _storageService: StorageService\n  ) { }\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const tokenItems =\n      JSON.parse(this._storageService.getItem('token') || '{}') || null;\n\n    const token =\n      tokenItems !== null || tokenItems !== {} ? tokenItems.token : null;\n    \n      console.log(\"Intercepiting...\", token);\n\n    if (token !== null && typeof token !== 'object') {\n      let contentType = 'application/json';\n      if (request.body instanceof FormData) {\n        request = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n      } else {\n        request = request.clone({\n          setHeaders: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`,\n          },\n        });\n      }\n    } else {\n      request = request.clone({\n        setHeaders: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n        },\n      });\n    }\n\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = '';\n        let errorGroup: any = [];\n\n        if (error.error) {\n          if (error.error.detail) {\n            errorMessage = error.error.detail;\n          } else if (error.error.name) {\n            errorMessage = error.error.name[0];\n          } else if (error.error.error_description) {\n            errorMessage = error.error.error_description;\n          } else if (error.error.phone) {\n            errorMessage = error.error.phone[0];\n          } else {\n            for (let x in error.error) {\n              errorGroup.push(error.error[x]);\n            }\n            errorMessage = errorGroup.toString();\n          }\n        }\n        // else {\n        let errorStatus: any;\n        let errorStatusText: string;\n\n        switch (error.status) {\n          case 400:\n            return next.handle(request)\n          case 401:\n            errorStatus = error.status;\n            errorStatusText = 'Oops! You are unauthorized to view this page';\n            console.log('REFRESH TOKEN ERROR:', error);\n            \n            if (\n              error.error.detail ===\n              'Authentication credentials were not provided.'\n            ) {\n              let params = {\n                token: tokenItems.token,\n                refresh_token: tokenItems.tokenRefresh,\n              };\n\n              this._authService\n                .refreshToken(params)\n                .pipe(take(1))\n                .subscribe(() => {\n                  const token = JSON.parse(\n                    this._storageService.getItem('token') || '{}'\n                  ).token;\n                  if (token !== null || token !== {}) {\n                    request = request.clone({\n                      setHeaders: {\n                        'Content-Type': 'application/json',\n                        Accept: 'application/json',\n                        Authorization: `Bearer ${token}`,\n                      },\n                    });\n                    return next.handle(request).pipe(\n                      catchError(err => {\n                        console.error('Refresh Token Issue', err);\n                        return throwError(err);\n                      })\n                    );\n                  }\n                });\n            } else {\n              //logout from account\n              this._route.navigate(['/signin']);\n            }\n            break;\n          case 403:\n            errorStatus = error.status;\n            errorStatusText = 'Oops! You are unauthorized to view this page';\n            this._errorService.addErrors([errorStatusText]);\n            break;\n          // case 403:\n          //     errorStatus = error.status;\n          //     errorStatusText = 'Oops! Media format of the requested data is unsupported';\n\n          //     break;\n          case 500:\n            if (/DoesNotExist|\\/auth\\/token/.test(error.error) ) {\n                this._route.navigate(['/signin']);\n            }\n\n            errorStatus = error.status;\n            errorStatusText =\n              'Oops! You caught us doing some house keeping. Please come back in a few. Sorry for any inconvenience';\n            this._errorService.addErrors([errorStatusText]);\n            break;\n          default:\n            errorStatus = 400;\n            errorStatusText = `Oops! Seems this page was not found`;\n            this._errorService.addErrors([errorStatusText]);\n            break;\n        }\n\n        return throwError(errorMessage);\n      })\n    );\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}